/***********************************************************************************
Copyright (c) 2017, Michael Neunert, Markus Giftthaler, Markus St√§uble, Diego Pardo,
Farbod Farshidian. All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice,
      this list of conditions and the following disclaimer in the documentation
      and/or other materials provided with the distribution.
    * Neither the name of ETH ZURICH nor the names of its contributors may be used
      to endorse or promote products derived from this software without specific
      prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
SHALL ETH ZURICH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
***************************************************************************************/

#include "HyQForwardKinJacForward.h"

namespace ct {
namespace models {
namespace HyQ {


HyQForwardKinJacForward::JAC_TYPE HyQForwardKinJacForward::operator()(const Eigen::VectorXd& x_in)
{
	double* jac = jac_.data();

    v[0] = 0.5 * x_in[0];
    v[1] = cos(v[0]);
    v[2] = 0.5 * x_in[1];
    v[3] = sin(v[2]);
    v[4] = v[1] * v[3];
    v[5] = 0.5 * x_in[2];
    v[6] = cos(v[5]);
    v[7] = sin(v[0]);
    v[8] = cos(v[2]);
    v[9] = v[7] * v[8];
    v[10] = sin(v[5]);
    v[11] = v[4] * v[6] - v[9] * v[10];
    v[12] = 2. * v[11];
    v[13] = 0.5 * cos(v[0]);
    v[14] = v[13] * v[8];
    v[0] = -0.5 * sin(v[0]);
    v[15] = v[0] * v[3];
    v[16] = v[14] * v[6] + v[15] * v[10];
    v[15] = v[15] * v[6] - v[14] * v[10];
    v[14] = 2. * v[15];
    v[17] = v[9] * v[6] + v[4] * v[10];
    v[18] = v[12] * v[16] + v[14] * v[17];
    v[19] = v[1] * v[8];
    v[20] = v[7] * v[3];
    v[21] = v[19] * v[10] + v[20] * v[6];
    v[22] = 2. * v[21];
    v[0] = v[0] * v[8];
    v[13] = v[13] * v[3];
    v[3] = v[0] * v[6] - v[13] * v[10];
    v[13] = v[0] * v[10] + v[13] * v[6];
    v[0] = 2. * v[13];
    v[8] = v[19] * v[6] - v[20] * v[10];
    v[23] = v[22] * v[3] + v[0] * v[8];
    v[24] = sin(x_in[6]);
    v[25] = 0.33 * v[24];
    v[26] = sin(x_in[7]);
    v[27] = v[25] * v[26];
    v[28] = sin(x_in[8]);
    v[29] = 0.33 * v[24];
    v[30] = cos(x_in[7]);
    v[31] = v[29] * v[30];
    v[32] = cos(x_in[8]);
    v[33] = 0.35 * v[24];
    v[34] = 0.207 + v[27] * v[28] - v[31] * v[32] - v[33] * v[30] - 0.08 * v[24];
    v[35] = v[22] * v[13] + v[0] * v[21];
    v[36] = v[12] * v[15] + v[14] * v[11];
    v[37] = -0.33 * v[30];
    v[38] = 0.33 * v[26];
    v[39] = 0.3735 + v[37] * v[28] - v[38] * v[32] - 0.35 * v[26];
    v[40] = v[22] * v[16] + v[0] * v[17];
    v[14] = v[12] * v[3] + v[14] * v[8];
    v[41] = cos(x_in[6]);
    v[42] = 0.33 * v[41];
    v[43] = v[42] * v[26];
    v[44] = 0.33 * v[41];
    v[45] = v[44] * v[30];
    v[46] = 0.35 * v[41];
    v[47] = v[43] * v[28] - v[45] * v[32] - v[46] * v[30] - 0.08 * v[41];
    jac[0] = (v[18] - v[23]) * v[34] + (0 - v[35] - v[36]) * v[39] + (v[40] + v[14]) * v[47];
    v[48] = 2. * v[17];
    v[49] = 2. * v[16];
    v[50] = v[48] * v[16] + v[49] * v[17];
    v[0] = v[22] * v[15] + v[0] * v[11];
    v[49] = v[48] * v[3] + v[49] * v[8];
    jac[1] = (0 - v[35] - v[50]) * v[34] + (v[18] + v[23]) * v[39] + (v[0] - v[49]) * v[47];
    jac[2] = (v[0] + v[49]) * v[34] + (v[40] - v[14]) * v[39] + (0 - v[36] - v[50]) * v[47];
    v[49] = 2. * v[11];
    v[0] = 2. * v[15];
    v[50] = v[49] * v[16] + v[0] * v[17];
    v[14] = 2. * v[21];
    v[40] = 2. * v[13];
    v[36] = v[14] * v[3] + v[40] * v[8];
    v[35] = 0.33 * v[24];
    v[23] = v[35] * v[26];
    v[18] = 0.33 * v[24];
    v[51] = v[18] * v[30];
    v[52] = 0.35 * v[24];
    v[53] = v[23] * v[32] + v[51] * v[28] + v[52] * v[26];
    v[54] = 0.33 * v[41];
    v[55] = v[54] * v[26];
    v[56] = 0.33 * v[41];
    v[57] = v[56] * v[30];
    v[58] = 0.35 * v[41];
    v[59] = v[55] * v[28] - v[57] * v[32] - v[58] * v[30] - 0.08 * v[41];
    v[60] = 0.33 * v[24];
    v[61] = v[60] * v[30];
    v[62] = 0.33 * v[24];
    v[63] = v[62] * v[26];
    v[64] = v[61] * v[28] + v[63] * v[32];
    v[65] = -0.33 * v[30];
    v[66] = 0.33 * v[26];
    v[67] = 0.3735 + v[65] * v[28] - v[66] * v[32] - 0.35 * v[26];
    v[68] = 0.33 * v[41];
    v[69] = v[68] * v[26];
    v[70] = 0.33 * v[41];
    v[71] = v[70] * v[30];
    v[72] = 0.35 * v[41];
    v[73] = v[69] * v[28] - v[71] * v[32] - v[72] * v[30] - 0.08 * v[41];
    v[74] = v[53] * x_in[25] + v[59] * x_in[24] + v[64] * x_in[26] + x_in[22] + x_in[20] * v[67] - x_in[18] * v[73];
    v[75] = v[14] * v[13] + v[40] * v[21];
    v[76] = v[49] * v[15] + v[0] * v[11];
    v[77] = 0.33 * v[26];
    v[78] = 0.33 * v[30];
    v[79] = v[77] * v[28] - v[78] * v[32];
    v[80] = 0.33 * v[26];
    v[81] = 0.33 * v[30];
    v[82] = v[80] * v[28] - v[81] * v[32] - 0.35 * v[30];
    v[83] = 0.33 * v[24];
    v[84] = v[83] * v[26];
    v[85] = 0.33 * v[24];
    v[86] = v[85] * v[30];
    v[87] = 0.35 * v[24];
    v[88] = 0.207 + v[84] * v[28] - v[86] * v[32] - v[87] * v[30] - 0.08 * v[24];
    v[89] = v[79] * x_in[26] + v[82] * x_in[25] + x_in[21] + x_in[19] * v[73] - x_in[20] * v[88];
    v[90] = v[14] * v[16] + v[40] * v[17];
    v[0] = v[49] * v[3] + v[0] * v[8];
    v[91] = 0.33 * v[41];
    v[92] = v[91] * v[26];
    v[93] = v[54] * v[30];
    v[94] = 0.35 * v[41];
    v[95] = v[92] * v[32] + v[93] * v[28] + v[94] * v[26];
    v[96] = 0.33 * v[24];
    v[97] = v[96] * v[30];
    v[98] = -0.33 * v[24];
    v[99] = v[98] * v[26];
    v[100] = 0.35 * v[24];
    v[24] = v[97] * v[32] + v[99] * v[28] + v[100] * v[30] + 0.08 * v[24];
    v[101] = 0.33 * v[41];
    v[102] = v[101] * v[30];
    v[41] = 0.33 * v[41];
    v[103] = v[41] * v[26];
    v[104] = v[102] * v[28] + v[103] * v[32];
    v[105] = v[95] * x_in[25] + v[24] * x_in[24] + v[104] * x_in[26] + x_in[23] + x_in[18] * v[88] - x_in[19] * v[67];
    jac[3] = (v[50] - v[36]) * v[74] + (0 - v[75] - v[76]) * v[89] + (v[90] + v[0]) * v[105];
    v[106] = 2. * v[17];
    v[107] = 2. * v[16];
    v[108] = v[106] * v[16] + v[107] * v[17];
    v[40] = v[14] * v[15] + v[40] * v[11];
    v[107] = v[106] * v[3] + v[107] * v[8];
    jac[4] = (0 - v[75] - v[108]) * v[74] + (v[50] + v[36]) * v[89] + (v[40] - v[107]) * v[105];
    jac[5] = (v[40] + v[107]) * v[74] + (v[90] - v[0]) * v[89] + (0 - v[76] - v[108]) * v[105];
    v[107] = 2. * v[11];
    v[40] = 2. * v[15];
    v[108] = v[107] * v[16] + v[40] * v[17];
    v[0] = 2. * v[21];
    v[90] = 2. * v[13];
    v[76] = v[0] * v[3] + v[90] * v[8];
    v[75] = sin(x_in[9]);
    v[36] = 0.33 * v[75];
    v[50] = cos(x_in[10]);
    v[109] = v[36] * v[50];
    v[110] = cos(x_in[11]);
    v[111] = -0.33 * v[75];
    v[112] = sin(x_in[10]);
    v[113] = v[111] * v[112];
    v[114] = sin(x_in[11]);
    v[115] = 0.35 * v[75];
    v[116] = -0.207 + v[109] * v[110] + v[113] * v[114] + v[115] * v[50] + 0.08 * v[75];
    v[117] = v[0] * v[13] + v[90] * v[21];
    v[118] = v[107] * v[15] + v[40] * v[11];
    v[119] = -0.33 * v[50];
    v[120] = 0.33 * v[112];
    v[121] = 0.3735 + v[119] * v[114] - v[120] * v[110] - 0.35 * v[112];
    v[122] = v[0] * v[16] + v[90] * v[17];
    v[40] = v[107] * v[3] + v[40] * v[8];
    v[123] = cos(x_in[9]);
    v[124] = 0.33 * v[123];
    v[125] = v[124] * v[112];
    v[126] = 0.33 * v[123];
    v[127] = v[126] * v[50];
    v[128] = 0.35 * v[123];
    v[129] = v[125] * v[114] - v[127] * v[110] - v[128] * v[50] - 0.08 * v[123];
    jac[6] = (v[108] - v[76]) * v[116] + (0 - v[117] - v[118]) * v[121] + (v[122] + v[40]) * v[129];
    v[130] = 2. * v[17];
    v[131] = 2. * v[16];
    v[132] = v[130] * v[16] + v[131] * v[17];
    v[90] = v[0] * v[15] + v[90] * v[11];
    v[131] = v[130] * v[3] + v[131] * v[8];
    jac[7] = (0 - v[117] - v[132]) * v[116] + (v[108] + v[76]) * v[121] + (v[90] - v[131]) * v[129];
    jac[8] = (v[90] + v[131]) * v[116] + (v[122] - v[40]) * v[121] + (0 - v[118] - v[132]) * v[129];
    v[131] = 2. * v[11];
    v[90] = 2. * v[15];
    v[132] = v[131] * v[16] + v[90] * v[17];
    v[40] = 2. * v[21];
    v[122] = 2. * v[13];
    v[118] = v[40] * v[3] + v[122] * v[8];
    v[117] = -0.33 * v[75];
    v[76] = v[117] * v[50];
    v[108] = 0.33 * v[75];
    v[133] = v[108] * v[112];
    v[134] = 0.35 * v[75];
    v[135] = v[76] * v[114] - v[133] * v[110] - v[134] * v[112];
    v[136] = 0.33 * v[123];
    v[137] = v[136] * v[50];
    v[138] = -0.33 * v[123];
    v[139] = v[138] * v[112];
    v[140] = 0.35 * v[123];
    v[141] = v[137] * v[110] + v[139] * v[114] + v[140] * v[50] + 0.08 * v[123];
    v[142] = -0.33 * v[75];
    v[143] = v[142] * v[50];
    v[144] = 0.33 * v[75];
    v[145] = v[144] * v[112];
    v[146] = v[143] * v[114] - v[145] * v[110];
    v[147] = -0.33 * v[50];
    v[148] = 0.33 * v[112];
    v[149] = 0.3735 + v[147] * v[114] - v[148] * v[110] - 0.35 * v[112];
    v[150] = 0.33 * v[123];
    v[151] = v[150] * v[112];
    v[152] = 0.33 * v[123];
    v[153] = v[152] * v[50];
    v[154] = 0.35 * v[123];
    v[155] = v[151] * v[114] - v[153] * v[110] - v[154] * v[50] - 0.08 * v[123];
    v[156] = v[135] * x_in[28] + v[141] * x_in[27] + v[146] * x_in[29] + x_in[22] + x_in[20] * v[149] - x_in[18] * v[155];
    v[157] = v[40] * v[13] + v[122] * v[21];
    v[158] = v[131] * v[15] + v[90] * v[11];
    v[159] = 0.33 * v[112];
    v[160] = 0.33 * v[50];
    v[161] = v[159] * v[114] - v[160] * v[110];
    v[162] = 0.33 * v[112];
    v[163] = 0.33 * v[50];
    v[164] = v[162] * v[114] - v[163] * v[110] - 0.35 * v[50];
    v[165] = 0.33 * v[75];
    v[166] = v[165] * v[50];
    v[167] = -0.33 * v[75];
    v[168] = v[167] * v[112];
    v[169] = 0.35 * v[75];
    v[170] = -0.207 + v[166] * v[110] + v[168] * v[114] + v[169] * v[50] + 0.08 * v[75];
    v[171] = v[161] * x_in[29] + v[164] * x_in[28] + x_in[21] + x_in[19] * v[155] - x_in[20] * v[170];
    v[172] = v[40] * v[16] + v[122] * v[17];
    v[90] = v[131] * v[3] + v[90] * v[8];
    v[173] = v[136] * v[112];
    v[174] = 0.33 * v[123];
    v[175] = v[174] * v[50];
    v[176] = 0.35 * v[123];
    v[177] = v[173] * v[110] + v[175] * v[114] + v[176] * v[112];
    v[178] = v[108] * v[50];
    v[179] = v[117] * v[112];
    v[180] = 0.35 * v[75];
    v[75] = v[178] * v[110] + v[179] * v[114] + v[180] * v[50] + 0.08 * v[75];
    v[181] = 0.33 * v[123];
    v[182] = v[181] * v[50];
    v[123] = 0.33 * v[123];
    v[183] = v[123] * v[112];
    v[184] = v[182] * v[114] + v[183] * v[110];
    v[185] = v[177] * x_in[28] + v[75] * x_in[27] + v[184] * x_in[29] + x_in[23] + x_in[18] * v[170] - x_in[19] * v[149];
    jac[9] = (v[132] - v[118]) * v[156] + (0 - v[157] - v[158]) * v[171] + (v[172] + v[90]) * v[185];
    v[186] = 2. * v[17];
    v[187] = 2. * v[16];
    v[188] = v[186] * v[16] + v[187] * v[17];
    v[122] = v[40] * v[15] + v[122] * v[11];
    v[187] = v[186] * v[3] + v[187] * v[8];
    jac[10] = (0 - v[157] - v[188]) * v[156] + (v[132] + v[118]) * v[171] + (v[122] - v[187]) * v[185];
    jac[11] = (v[122] + v[187]) * v[156] + (v[172] - v[90]) * v[171] + (0 - v[158] - v[188]) * v[185];
    v[187] = 2. * v[11];
    v[122] = 2. * v[15];
    v[188] = v[187] * v[16] + v[122] * v[17];
    v[90] = 2. * v[21];
    v[172] = 2. * v[13];
    v[158] = v[90] * v[3] + v[172] * v[8];
    v[157] = sin(x_in[12]);
    v[118] = 0.33 * v[157];
    v[132] = sin(x_in[13]);
    v[189] = v[118] * v[132];
    v[190] = sin(x_in[14]);
    v[191] = 0.33 * v[157];
    v[192] = cos(x_in[13]);
    v[193] = v[191] * v[192];
    v[194] = cos(x_in[14]);
    v[195] = 0.35 * v[157];
    v[196] = 0.207 + v[189] * v[190] - v[193] * v[194] - v[195] * v[192] - 0.08 * v[157];
    v[197] = v[90] * v[13] + v[172] * v[21];
    v[198] = v[187] * v[15] + v[122] * v[11];
    v[199] = -0.33 * v[192];
    v[200] = 0.33 * v[132];
    v[201] = -0.3735 + v[199] * v[190] - v[200] * v[194] - 0.35 * v[132];
    v[202] = v[90] * v[16] + v[172] * v[17];
    v[122] = v[187] * v[3] + v[122] * v[8];
    v[203] = cos(x_in[12]);
    v[204] = 0.33 * v[203];
    v[205] = v[204] * v[132];
    v[206] = 0.33 * v[203];
    v[207] = v[206] * v[192];
    v[208] = 0.35 * v[203];
    v[209] = v[205] * v[190] - v[207] * v[194] - v[208] * v[192] - 0.08 * v[203];
    jac[12] = (v[188] - v[158]) * v[196] + (0 - v[197] - v[198]) * v[201] + (v[202] + v[122]) * v[209];
    v[210] = 2. * v[17];
    v[211] = 2. * v[16];
    v[212] = v[210] * v[16] + v[211] * v[17];
    v[172] = v[90] * v[15] + v[172] * v[11];
    v[211] = v[210] * v[3] + v[211] * v[8];
    jac[13] = (0 - v[197] - v[212]) * v[196] + (v[188] + v[158]) * v[201] + (v[172] - v[211]) * v[209];
    jac[14] = (v[172] + v[211]) * v[196] + (v[202] - v[122]) * v[201] + (0 - v[198] - v[212]) * v[209];
    v[211] = 2. * v[11];
    v[172] = 2. * v[15];
    v[212] = v[211] * v[16] + v[172] * v[17];
    v[122] = 2. * v[21];
    v[202] = 2. * v[13];
    v[198] = v[122] * v[3] + v[202] * v[8];
    v[197] = 0.33 * v[157];
    v[158] = v[197] * v[132];
    v[188] = 0.33 * v[157];
    v[213] = v[188] * v[192];
    v[214] = 0.35 * v[157];
    v[215] = v[158] * v[194] + v[213] * v[190] + v[214] * v[132];
    v[216] = 0.33 * v[203];
    v[217] = v[216] * v[132];
    v[218] = 0.33 * v[203];
    v[219] = v[218] * v[192];
    v[220] = 0.35 * v[203];
    v[221] = v[217] * v[190] - v[219] * v[194] - v[220] * v[192] - 0.08 * v[203];
    v[222] = 0.33 * v[157];
    v[223] = v[222] * v[192];
    v[224] = 0.33 * v[157];
    v[225] = v[224] * v[132];
    v[226] = v[223] * v[190] + v[225] * v[194];
    v[227] = -0.33 * v[192];
    v[228] = 0.33 * v[132];
    v[229] = -0.3735 + v[227] * v[190] - v[228] * v[194] - 0.35 * v[132];
    v[230] = 0.33 * v[203];
    v[231] = v[230] * v[132];
    v[232] = 0.33 * v[203];
    v[233] = v[232] * v[192];
    v[234] = 0.35 * v[203];
    v[235] = v[231] * v[190] - v[233] * v[194] - v[234] * v[192] - 0.08 * v[203];
    v[236] = v[215] * x_in[31] + v[221] * x_in[30] + v[226] * x_in[32] + x_in[22] + x_in[20] * v[229] - x_in[18] * v[235];
    v[237] = v[122] * v[13] + v[202] * v[21];
    v[238] = v[211] * v[15] + v[172] * v[11];
    v[239] = 0.33 * v[132];
    v[240] = 0.33 * v[192];
    v[241] = v[239] * v[190] - v[240] * v[194];
    v[242] = 0.33 * v[132];
    v[243] = 0.33 * v[192];
    v[244] = v[242] * v[190] - v[243] * v[194] - 0.35 * v[192];
    v[245] = 0.33 * v[157];
    v[246] = v[245] * v[132];
    v[247] = 0.33 * v[157];
    v[248] = v[247] * v[192];
    v[249] = 0.35 * v[157];
    v[250] = 0.207 + v[246] * v[190] - v[248] * v[194] - v[249] * v[192] - 0.08 * v[157];
    v[251] = v[241] * x_in[32] + v[244] * x_in[31] + x_in[21] + x_in[19] * v[235] - x_in[20] * v[250];
    v[252] = v[122] * v[16] + v[202] * v[17];
    v[172] = v[211] * v[3] + v[172] * v[8];
    v[253] = v[218] * v[132];
    v[254] = v[216] * v[192];
    v[255] = 0.35 * v[203];
    v[256] = v[253] * v[194] + v[254] * v[190] + v[255] * v[132];
    v[257] = v[197] * v[192];
    v[258] = -0.33 * v[157];
    v[259] = v[258] * v[132];
    v[260] = 0.35 * v[157];
    v[157] = v[257] * v[194] + v[259] * v[190] + v[260] * v[192] + 0.08 * v[157];
    v[261] = 0.33 * v[203];
    v[262] = v[261] * v[192];
    v[203] = 0.33 * v[203];
    v[263] = v[203] * v[132];
    v[264] = v[262] * v[190] + v[263] * v[194];
    v[265] = v[256] * x_in[31] + v[157] * x_in[30] + v[264] * x_in[32] + x_in[23] + x_in[18] * v[250] - x_in[19] * v[229];
    jac[15] = (v[212] - v[198]) * v[236] + (0 - v[237] - v[238]) * v[251] + (v[252] + v[172]) * v[265];
    v[266] = 2. * v[17];
    v[267] = 2. * v[16];
    v[268] = v[266] * v[16] + v[267] * v[17];
    v[202] = v[122] * v[15] + v[202] * v[11];
    v[267] = v[266] * v[3] + v[267] * v[8];
    jac[16] = (0 - v[237] - v[268]) * v[236] + (v[212] + v[198]) * v[251] + (v[202] - v[267]) * v[265];
    jac[17] = (v[202] + v[267]) * v[236] + (v[252] - v[172]) * v[251] + (0 - v[238] - v[268]) * v[265];
    v[267] = 2. * v[11];
    v[202] = 2. * v[15];
    v[268] = v[267] * v[16] + v[202] * v[17];
    v[172] = 2. * v[21];
    v[252] = 2. * v[13];
    v[238] = v[172] * v[3] + v[252] * v[8];
    v[237] = sin(x_in[15]);
    v[198] = 0.33 * v[237];
    v[212] = cos(x_in[16]);
    v[269] = v[198] * v[212];
    v[270] = cos(x_in[17]);
    v[271] = -0.33 * v[237];
    v[272] = sin(x_in[16]);
    v[273] = v[271] * v[272];
    v[274] = sin(x_in[17]);
    v[275] = 0.35 * v[237];
    v[276] = -0.207 + v[269] * v[270] + v[273] * v[274] + v[275] * v[212] + 0.08 * v[237];
    v[277] = v[172] * v[13] + v[252] * v[21];
    v[278] = v[267] * v[15] + v[202] * v[11];
    v[279] = -0.33 * v[212];
    v[280] = 0.33 * v[272];
    v[281] = -0.3735 + v[279] * v[274] - v[280] * v[270] - 0.35 * v[272];
    v[282] = v[172] * v[16] + v[252] * v[17];
    v[202] = v[267] * v[3] + v[202] * v[8];
    v[283] = cos(x_in[15]);
    v[284] = 0.33 * v[283];
    v[285] = v[284] * v[272];
    v[286] = 0.33 * v[283];
    v[287] = v[286] * v[212];
    v[288] = 0.35 * v[283];
    v[289] = v[285] * v[274] - v[287] * v[270] - v[288] * v[212] - 0.08 * v[283];
    jac[18] = (v[268] - v[238]) * v[276] + (0 - v[277] - v[278]) * v[281] + (v[282] + v[202]) * v[289];
    v[290] = 2. * v[17];
    v[291] = 2. * v[16];
    v[292] = v[290] * v[16] + v[291] * v[17];
    v[252] = v[172] * v[15] + v[252] * v[11];
    v[291] = v[290] * v[3] + v[291] * v[8];
    jac[19] = (0 - v[277] - v[292]) * v[276] + (v[268] + v[238]) * v[281] + (v[252] - v[291]) * v[289];
    jac[20] = (v[252] + v[291]) * v[276] + (v[282] - v[202]) * v[281] + (0 - v[278] - v[292]) * v[289];
    v[291] = 2. * v[11];
    v[252] = 2. * v[15];
    v[292] = v[291] * v[16] + v[252] * v[17];
    v[202] = 2. * v[21];
    v[282] = 2. * v[13];
    v[278] = v[202] * v[3] + v[282] * v[8];
    v[277] = -0.33 * v[237];
    v[238] = v[277] * v[212];
    v[268] = 0.33 * v[237];
    v[293] = v[268] * v[272];
    v[294] = 0.35 * v[237];
    v[295] = v[238] * v[274] - v[293] * v[270] - v[294] * v[272];
    v[296] = 0.33 * v[283];
    v[297] = v[296] * v[212];
    v[298] = -0.33 * v[283];
    v[299] = v[298] * v[272];
    v[300] = 0.35 * v[283];
    v[301] = v[297] * v[270] + v[299] * v[274] + v[300] * v[212] + 0.08 * v[283];
    v[302] = -0.33 * v[237];
    v[303] = v[302] * v[212];
    v[304] = 0.33 * v[237];
    v[305] = v[304] * v[272];
    v[306] = v[303] * v[274] - v[305] * v[270];
    v[307] = -0.33 * v[212];
    v[308] = 0.33 * v[272];
    v[309] = -0.3735 + v[307] * v[274] - v[308] * v[270] - 0.35 * v[272];
    v[310] = 0.33 * v[283];
    v[311] = v[310] * v[272];
    v[312] = 0.33 * v[283];
    v[313] = v[312] * v[212];
    v[314] = 0.35 * v[283];
    v[315] = v[311] * v[274] - v[313] * v[270] - v[314] * v[212] - 0.08 * v[283];
    v[316] = v[295] * x_in[34] + v[301] * x_in[33] + v[306] * x_in[35] + x_in[22] + x_in[20] * v[309] - x_in[18] * v[315];
    v[13] = v[202] * v[13] + v[282] * v[21];
    v[317] = v[291] * v[15] + v[252] * v[11];
    v[318] = 0.33 * v[272];
    v[319] = 0.33 * v[212];
    v[320] = v[318] * v[274] - v[319] * v[270];
    v[321] = 0.33 * v[272];
    v[322] = 0.33 * v[212];
    v[323] = v[321] * v[274] - v[322] * v[270] - 0.35 * v[212];
    v[324] = 0.33 * v[237];
    v[325] = v[324] * v[212];
    v[326] = -0.33 * v[237];
    v[327] = v[326] * v[272];
    v[328] = 0.35 * v[237];
    v[329] = -0.207 + v[325] * v[270] + v[327] * v[274] + v[328] * v[212] + 0.08 * v[237];
    v[330] = v[320] * x_in[35] + v[323] * x_in[34] + x_in[21] + x_in[19] * v[315] - x_in[20] * v[329];
    v[331] = v[202] * v[16] + v[282] * v[17];
    v[252] = v[291] * v[3] + v[252] * v[8];
    v[332] = v[296] * v[272];
    v[333] = 0.33 * v[283];
    v[334] = v[333] * v[212];
    v[335] = 0.35 * v[283];
    v[336] = v[332] * v[270] + v[334] * v[274] + v[335] * v[272];
    v[337] = v[268] * v[212];
    v[338] = v[277] * v[272];
    v[339] = 0.35 * v[237];
    v[237] = v[337] * v[270] + v[338] * v[274] + v[339] * v[212] + 0.08 * v[237];
    v[340] = 0.33 * v[283];
    v[341] = v[340] * v[212];
    v[283] = 0.33 * v[283];
    v[342] = v[283] * v[272];
    v[343] = v[341] * v[274] + v[342] * v[270];
    v[344] = v[336] * x_in[34] + v[237] * x_in[33] + v[343] * x_in[35] + x_in[23] + x_in[18] * v[329] - x_in[19] * v[309];
    jac[21] = (v[292] - v[278]) * v[316] + (0 - v[13] - v[317]) * v[330] + (v[331] + v[252]) * v[344];
    v[345] = 2. * v[17];
    v[346] = 2. * v[16];
    v[16] = v[345] * v[16] + v[346] * v[17];
    v[282] = v[202] * v[15] + v[282] * v[11];
    v[346] = v[345] * v[3] + v[346] * v[8];
    jac[22] = (0 - v[13] - v[16]) * v[316] + (v[292] + v[278]) * v[330] + (v[282] - v[346]) * v[344];
    jac[23] = (v[282] + v[346]) * v[316] + (v[331] - v[252]) * v[330] + (0 - v[317] - v[16]) * v[344];
    v[346] = -0.5 * sin(v[2]);
    v[282] = v[7] * v[346];
    v[2] = 0.5 * cos(v[2]);
    v[16] = v[1] * v[2];
    v[252] = v[282] * v[6] + v[16] * v[10];
    v[16] = v[16] * v[6] - v[282] * v[10];
    v[282] = 2. * v[16];
    v[331] = v[12] * v[252] + v[282] * v[17];
    v[346] = v[1] * v[346];
    v[2] = v[7] * v[2];
    v[7] = v[346] * v[6] - v[2] * v[10];
    v[2] = v[346] * v[10] + v[2] * v[6];
    v[346] = 2. * v[2];
    v[10] = v[22] * v[7] + v[346] * v[8];
    v[6] = v[22] * v[2] + v[346] * v[21];
    v[1] = v[12] * v[16] + v[282] * v[11];
    v[317] = v[22] * v[252] + v[346] * v[17];
    v[282] = v[12] * v[7] + v[282] * v[8];
    jac[24] = (v[331] - v[10]) * v[34] + (0 - v[6] - v[1]) * v[39] + (v[317] + v[282]) * v[47];
    v[13] = 2. * v[252];
    v[278] = v[48] * v[252] + v[13] * v[17];
    v[346] = v[22] * v[16] + v[346] * v[11];
    v[13] = v[48] * v[7] + v[13] * v[8];
    jac[25] = (0 - v[6] - v[278]) * v[34] + (v[331] + v[10]) * v[39] + (v[346] - v[13]) * v[47];
    jac[26] = (v[346] + v[13]) * v[34] + (v[317] - v[282]) * v[39] + (0 - v[1] - v[278]) * v[47];
    v[13] = 2. * v[16];
    v[346] = v[49] * v[252] + v[13] * v[17];
    v[278] = 2. * v[2];
    v[282] = v[14] * v[7] + v[278] * v[8];
    v[317] = v[14] * v[2] + v[278] * v[21];
    v[1] = v[49] * v[16] + v[13] * v[11];
    v[6] = v[14] * v[252] + v[278] * v[17];
    v[13] = v[49] * v[7] + v[13] * v[8];
    jac[27] = (v[346] - v[282]) * v[74] + (0 - v[317] - v[1]) * v[89] + (v[6] + v[13]) * v[105];
    v[10] = 2. * v[252];
    v[331] = v[106] * v[252] + v[10] * v[17];
    v[278] = v[14] * v[16] + v[278] * v[11];
    v[10] = v[106] * v[7] + v[10] * v[8];
    jac[28] = (0 - v[317] - v[331]) * v[74] + (v[346] + v[282]) * v[89] + (v[278] - v[10]) * v[105];
    jac[29] = (v[278] + v[10]) * v[74] + (v[6] - v[13]) * v[89] + (0 - v[1] - v[331]) * v[105];
    v[10] = 2. * v[16];
    v[278] = v[107] * v[252] + v[10] * v[17];
    v[331] = 2. * v[2];
    v[13] = v[0] * v[7] + v[331] * v[8];
    v[6] = v[0] * v[2] + v[331] * v[21];
    v[1] = v[107] * v[16] + v[10] * v[11];
    v[317] = v[0] * v[252] + v[331] * v[17];
    v[10] = v[107] * v[7] + v[10] * v[8];
    jac[30] = (v[278] - v[13]) * v[116] + (0 - v[6] - v[1]) * v[121] + (v[317] + v[10]) * v[129];
    v[282] = 2. * v[252];
    v[346] = v[130] * v[252] + v[282] * v[17];
    v[331] = v[0] * v[16] + v[331] * v[11];
    v[282] = v[130] * v[7] + v[282] * v[8];
    jac[31] = (0 - v[6] - v[346]) * v[116] + (v[278] + v[13]) * v[121] + (v[331] - v[282]) * v[129];
    jac[32] = (v[331] + v[282]) * v[116] + (v[317] - v[10]) * v[121] + (0 - v[1] - v[346]) * v[129];
    v[282] = 2. * v[16];
    v[331] = v[131] * v[252] + v[282] * v[17];
    v[346] = 2. * v[2];
    v[10] = v[40] * v[7] + v[346] * v[8];
    v[317] = v[40] * v[2] + v[346] * v[21];
    v[1] = v[131] * v[16] + v[282] * v[11];
    v[6] = v[40] * v[252] + v[346] * v[17];
    v[282] = v[131] * v[7] + v[282] * v[8];
    jac[33] = (v[331] - v[10]) * v[156] + (0 - v[317] - v[1]) * v[171] + (v[6] + v[282]) * v[185];
    v[13] = 2. * v[252];
    v[278] = v[186] * v[252] + v[13] * v[17];
    v[346] = v[40] * v[16] + v[346] * v[11];
    v[13] = v[186] * v[7] + v[13] * v[8];
    jac[34] = (0 - v[317] - v[278]) * v[156] + (v[331] + v[10]) * v[171] + (v[346] - v[13]) * v[185];
    jac[35] = (v[346] + v[13]) * v[156] + (v[6] - v[282]) * v[171] + (0 - v[1] - v[278]) * v[185];
    v[13] = 2. * v[16];
    v[346] = v[187] * v[252] + v[13] * v[17];
    v[278] = 2. * v[2];
    v[282] = v[90] * v[7] + v[278] * v[8];
    v[6] = v[90] * v[2] + v[278] * v[21];
    v[1] = v[187] * v[16] + v[13] * v[11];
    v[317] = v[90] * v[252] + v[278] * v[17];
    v[13] = v[187] * v[7] + v[13] * v[8];
    jac[36] = (v[346] - v[282]) * v[196] + (0 - v[6] - v[1]) * v[201] + (v[317] + v[13]) * v[209];
    v[10] = 2. * v[252];
    v[331] = v[210] * v[252] + v[10] * v[17];
    v[278] = v[90] * v[16] + v[278] * v[11];
    v[10] = v[210] * v[7] + v[10] * v[8];
    jac[37] = (0 - v[6] - v[331]) * v[196] + (v[346] + v[282]) * v[201] + (v[278] - v[10]) * v[209];
    jac[38] = (v[278] + v[10]) * v[196] + (v[317] - v[13]) * v[201] + (0 - v[1] - v[331]) * v[209];
    v[10] = 2. * v[16];
    v[278] = v[211] * v[252] + v[10] * v[17];
    v[331] = 2. * v[2];
    v[13] = v[122] * v[7] + v[331] * v[8];
    v[317] = v[122] * v[2] + v[331] * v[21];
    v[1] = v[211] * v[16] + v[10] * v[11];
    v[6] = v[122] * v[252] + v[331] * v[17];
    v[10] = v[211] * v[7] + v[10] * v[8];
    jac[39] = (v[278] - v[13]) * v[236] + (0 - v[317] - v[1]) * v[251] + (v[6] + v[10]) * v[265];
    v[282] = 2. * v[252];
    v[346] = v[266] * v[252] + v[282] * v[17];
    v[331] = v[122] * v[16] + v[331] * v[11];
    v[282] = v[266] * v[7] + v[282] * v[8];
    jac[40] = (0 - v[317] - v[346]) * v[236] + (v[278] + v[13]) * v[251] + (v[331] - v[282]) * v[265];
    jac[41] = (v[331] + v[282]) * v[236] + (v[6] - v[10]) * v[251] + (0 - v[1] - v[346]) * v[265];
    v[282] = 2. * v[16];
    v[331] = v[267] * v[252] + v[282] * v[17];
    v[346] = 2. * v[2];
    v[10] = v[172] * v[7] + v[346] * v[8];
    v[6] = v[172] * v[2] + v[346] * v[21];
    v[1] = v[267] * v[16] + v[282] * v[11];
    v[317] = v[172] * v[252] + v[346] * v[17];
    v[282] = v[267] * v[7] + v[282] * v[8];
    jac[42] = (v[331] - v[10]) * v[276] + (0 - v[6] - v[1]) * v[281] + (v[317] + v[282]) * v[289];
    v[13] = 2. * v[252];
    v[278] = v[290] * v[252] + v[13] * v[17];
    v[346] = v[172] * v[16] + v[346] * v[11];
    v[13] = v[290] * v[7] + v[13] * v[8];
    jac[43] = (0 - v[6] - v[278]) * v[276] + (v[331] + v[10]) * v[281] + (v[346] - v[13]) * v[289];
    jac[44] = (v[346] + v[13]) * v[276] + (v[317] - v[282]) * v[281] + (0 - v[1] - v[278]) * v[289];
    v[13] = 2. * v[16];
    v[346] = v[291] * v[252] + v[13] * v[17];
    v[278] = 2. * v[2];
    v[282] = v[202] * v[7] + v[278] * v[8];
    v[2] = v[202] * v[2] + v[278] * v[21];
    v[317] = v[291] * v[16] + v[13] * v[11];
    v[1] = v[202] * v[252] + v[278] * v[17];
    v[13] = v[291] * v[7] + v[13] * v[8];
    jac[45] = (v[346] - v[282]) * v[316] + (0 - v[2] - v[317]) * v[330] + (v[1] + v[13]) * v[344];
    v[6] = 2. * v[252];
    v[252] = v[345] * v[252] + v[6] * v[17];
    v[278] = v[202] * v[16] + v[278] * v[11];
    v[6] = v[345] * v[7] + v[6] * v[8];
    jac[46] = (0 - v[2] - v[252]) * v[316] + (v[346] + v[282]) * v[330] + (v[278] - v[6]) * v[344];
    jac[47] = (v[278] + v[6]) * v[316] + (v[1] - v[13]) * v[330] + (0 - v[317] - v[252]) * v[344];
    v[6] = -0.5 * sin(v[5]);
    v[5] = 0.5 * cos(v[5]);
    v[278] = v[9] * v[6] + v[4] * v[5];
    v[9] = v[4] * v[6] - v[9] * v[5];
    v[4] = 2. * v[9];
    v[252] = v[12] * v[278] + v[4] * v[17];
    v[13] = v[19] * v[6] - v[20] * v[5];
    v[5] = v[19] * v[5] + v[20] * v[6];
    v[6] = 2. * v[5];
    v[20] = v[22] * v[13] + v[6] * v[8];
    v[19] = v[22] * v[5] + v[6] * v[21];
    v[1] = v[12] * v[9] + v[4] * v[11];
    v[317] = v[22] * v[278] + v[6] * v[17];
    v[4] = v[12] * v[13] + v[4] * v[8];
    jac[48] = (v[252] - v[20]) * v[34] + (0 - v[19] - v[1]) * v[39] + (v[317] + v[4]) * v[47];
    v[2] = 2. * v[278];
    v[282] = v[48] * v[278] + v[2] * v[17];
    v[6] = v[22] * v[9] + v[6] * v[11];
    v[2] = v[48] * v[13] + v[2] * v[8];
    jac[49] = (0 - v[19] - v[282]) * v[34] + (v[252] + v[20]) * v[39] + (v[6] - v[2]) * v[47];
    jac[50] = (v[6] + v[2]) * v[34] + (v[317] - v[4]) * v[39] + (0 - v[1] - v[282]) * v[47];
    v[2] = 2. * v[9];
    v[6] = v[49] * v[278] + v[2] * v[17];
    v[282] = 2. * v[5];
    v[4] = v[14] * v[13] + v[282] * v[8];
    v[317] = v[14] * v[5] + v[282] * v[21];
    v[1] = v[49] * v[9] + v[2] * v[11];
    v[47] = v[14] * v[278] + v[282] * v[17];
    v[2] = v[49] * v[13] + v[2] * v[8];
    jac[51] = (v[6] - v[4]) * v[74] + (0 - v[317] - v[1]) * v[89] + (v[47] + v[2]) * v[105];
    v[39] = 2. * v[278];
    v[34] = v[106] * v[278] + v[39] * v[17];
    v[282] = v[14] * v[9] + v[282] * v[11];
    v[39] = v[106] * v[13] + v[39] * v[8];
    jac[52] = (0 - v[317] - v[34]) * v[74] + (v[6] + v[4]) * v[89] + (v[282] - v[39]) * v[105];
    jac[53] = (v[282] + v[39]) * v[74] + (v[47] - v[2]) * v[89] + (0 - v[1] - v[34]) * v[105];
    v[39] = 2. * v[9];
    v[282] = v[107] * v[278] + v[39] * v[17];
    v[34] = 2. * v[5];
    v[2] = v[0] * v[13] + v[34] * v[8];
    v[47] = v[0] * v[5] + v[34] * v[21];
    v[1] = v[107] * v[9] + v[39] * v[11];
    v[105] = v[0] * v[278] + v[34] * v[17];
    v[39] = v[107] * v[13] + v[39] * v[8];
    jac[54] = (v[282] - v[2]) * v[116] + (0 - v[47] - v[1]) * v[121] + (v[105] + v[39]) * v[129];
    v[89] = 2. * v[278];
    v[74] = v[130] * v[278] + v[89] * v[17];
    v[34] = v[0] * v[9] + v[34] * v[11];
    v[89] = v[130] * v[13] + v[89] * v[8];
    jac[55] = (0 - v[47] - v[74]) * v[116] + (v[282] + v[2]) * v[121] + (v[34] - v[89]) * v[129];
    jac[56] = (v[34] + v[89]) * v[116] + (v[105] - v[39]) * v[121] + (0 - v[1] - v[74]) * v[129];
    v[89] = 2. * v[9];
    v[34] = v[131] * v[278] + v[89] * v[17];
    v[74] = 2. * v[5];
    v[39] = v[40] * v[13] + v[74] * v[8];
    v[105] = v[40] * v[5] + v[74] * v[21];
    v[1] = v[131] * v[9] + v[89] * v[11];
    v[129] = v[40] * v[278] + v[74] * v[17];
    v[89] = v[131] * v[13] + v[89] * v[8];
    jac[57] = (v[34] - v[39]) * v[156] + (0 - v[105] - v[1]) * v[171] + (v[129] + v[89]) * v[185];
    v[121] = 2. * v[278];
    v[116] = v[186] * v[278] + v[121] * v[17];
    v[74] = v[40] * v[9] + v[74] * v[11];
    v[121] = v[186] * v[13] + v[121] * v[8];
    jac[58] = (0 - v[105] - v[116]) * v[156] + (v[34] + v[39]) * v[171] + (v[74] - v[121]) * v[185];
    jac[59] = (v[74] + v[121]) * v[156] + (v[129] - v[89]) * v[171] + (0 - v[1] - v[116]) * v[185];
    v[121] = 2. * v[9];
    v[74] = v[187] * v[278] + v[121] * v[17];
    v[116] = 2. * v[5];
    v[89] = v[90] * v[13] + v[116] * v[8];
    v[129] = v[90] * v[5] + v[116] * v[21];
    v[1] = v[187] * v[9] + v[121] * v[11];
    v[185] = v[90] * v[278] + v[116] * v[17];
    v[121] = v[187] * v[13] + v[121] * v[8];
    jac[60] = (v[74] - v[89]) * v[196] + (0 - v[129] - v[1]) * v[201] + (v[185] + v[121]) * v[209];
    v[171] = 2. * v[278];
    v[156] = v[210] * v[278] + v[171] * v[17];
    v[116] = v[90] * v[9] + v[116] * v[11];
    v[171] = v[210] * v[13] + v[171] * v[8];
    jac[61] = (0 - v[129] - v[156]) * v[196] + (v[74] + v[89]) * v[201] + (v[116] - v[171]) * v[209];
    jac[62] = (v[116] + v[171]) * v[196] + (v[185] - v[121]) * v[201] + (0 - v[1] - v[156]) * v[209];
    v[171] = 2. * v[9];
    v[116] = v[211] * v[278] + v[171] * v[17];
    v[156] = 2. * v[5];
    v[121] = v[122] * v[13] + v[156] * v[8];
    v[185] = v[122] * v[5] + v[156] * v[21];
    v[1] = v[211] * v[9] + v[171] * v[11];
    v[209] = v[122] * v[278] + v[156] * v[17];
    v[171] = v[211] * v[13] + v[171] * v[8];
    jac[63] = (v[116] - v[121]) * v[236] + (0 - v[185] - v[1]) * v[251] + (v[209] + v[171]) * v[265];
    v[201] = 2. * v[278];
    v[196] = v[266] * v[278] + v[201] * v[17];
    v[156] = v[122] * v[9] + v[156] * v[11];
    v[201] = v[266] * v[13] + v[201] * v[8];
    jac[64] = (0 - v[185] - v[196]) * v[236] + (v[116] + v[121]) * v[251] + (v[156] - v[201]) * v[265];
    jac[65] = (v[156] + v[201]) * v[236] + (v[209] - v[171]) * v[251] + (0 - v[1] - v[196]) * v[265];
    v[201] = 2. * v[9];
    v[156] = v[267] * v[278] + v[201] * v[17];
    v[196] = 2. * v[5];
    v[171] = v[172] * v[13] + v[196] * v[8];
    v[209] = v[172] * v[5] + v[196] * v[21];
    v[1] = v[267] * v[9] + v[201] * v[11];
    v[265] = v[172] * v[278] + v[196] * v[17];
    v[201] = v[267] * v[13] + v[201] * v[8];
    jac[66] = (v[156] - v[171]) * v[276] + (0 - v[209] - v[1]) * v[281] + (v[265] + v[201]) * v[289];
    v[251] = 2. * v[278];
    v[236] = v[290] * v[278] + v[251] * v[17];
    v[196] = v[172] * v[9] + v[196] * v[11];
    v[251] = v[290] * v[13] + v[251] * v[8];
    jac[67] = (0 - v[209] - v[236]) * v[276] + (v[156] + v[171]) * v[281] + (v[196] - v[251]) * v[289];
    jac[68] = (v[196] + v[251]) * v[276] + (v[265] - v[201]) * v[281] + (0 - v[1] - v[236]) * v[289];
    v[251] = 2. * v[9];
    v[196] = v[291] * v[278] + v[251] * v[17];
    v[236] = 2. * v[5];
    v[201] = v[202] * v[13] + v[236] * v[8];
    v[5] = v[202] * v[5] + v[236] * v[21];
    v[265] = v[291] * v[9] + v[251] * v[11];
    v[1] = v[202] * v[278] + v[236] * v[17];
    v[251] = v[291] * v[13] + v[251] * v[8];
    jac[69] = (v[196] - v[201]) * v[316] + (0 - v[5] - v[265]) * v[330] + (v[1] + v[251]) * v[344];
    v[289] = 2. * v[278];
    v[278] = v[345] * v[278] + v[289] * v[17];
    v[236] = v[202] * v[9] + v[236] * v[11];
    v[289] = v[345] * v[13] + v[289] * v[8];
    jac[70] = (0 - v[5] - v[278]) * v[316] + (v[196] + v[201]) * v[330] + (v[236] - v[289]) * v[344];
    jac[71] = (v[236] + v[289]) * v[316] + (v[1] - v[251]) * v[330] + (0 - v[265] - v[278]) * v[344];
    v[289] = v[12] * v[17];
    v[236] = v[22] * v[8];
    v[278] = v[289] - v[236];
    v[251] = cos(x_in[6]);
    v[1] = 0.33 * v[251] * v[26] * v[28] - 0.33 * v[251] * v[30] * v[32] - 0.35 * v[251] * v[30] - 0.08 * v[251];
    v[265] = v[22] * v[17];
    v[344] = v[12] * v[8];
    v[330] = v[265] + v[344];
    v[316] = -1 * sin(x_in[6]);
    v[5] = 0.33 * v[316] * v[26] * v[28] - 0.33 * v[316] * v[30] * v[32] - 0.35 * v[316] * v[30] - 0.08 * v[316];
    jac[144] = v[278] * v[1] + v[330] * v[5];
    v[201] = v[22] * v[21];
    v[196] = v[48] * v[17];
    v[13] = 1 - v[201] - v[196];
    v[22] = v[22] * v[11];
    v[48] = v[48] * v[8];
    v[9] = v[22] - v[48];
    jac[145] = v[13] * v[1] + v[9] * v[5];
    v[48] = v[22] + v[48];
    v[12] = v[12] * v[11];
    v[196] = 1 - v[12] - v[196];
    jac[146] = v[48] * v[1] + v[196] * v[5];
    v[5] = v[49] * v[17];
    v[1] = v[14] * v[8];
    jac[531] = v[5] - v[1];
    jac[508] = v[5] + v[1];
    v[1] = 0.33 * v[316];
    v[5] = 0.33 * v[316] * v[26] * v[28] - 0.33 * v[316] * v[30] * v[32] - 0.35 * v[316] * v[30] - 0.08 * v[316];
    v[22] = (0.33 * v[251] * v[26] * v[32] + 0.33 * v[251] * v[30] * v[28] + 0.35 * v[251] * v[26]) * x_in[25] + (v[1] * v[26] * v[28] - 0.33 * v[316] * v[30] * v[32] - 0.35 * v[316] * v[30] - 0.08 * v[316]) * x_in[24] + (0.33 * v[251] * v[30] * v[28] + 0.33 * v[251] * v[26] * v[32]) * x_in[26] - x_in[18] * v[5];
    v[281] = v[14] * v[21];
    v[276] = v[49] * v[11];
    jac[507] = 1 - v[281] - v[276];
    v[209] = 0.33 * v[251] * v[26] * v[28] - 0.33 * v[251] * v[30] * v[32] - 0.35 * v[251] * v[30] - 0.08 * v[251];
    v[5] = x_in[19] * v[5] - x_in[20] * v[209];
    v[171] = v[14] * v[17];
    v[49] = v[49] * v[8];
    jac[555] = v[171] + v[49];
    jac[509] = v[171] - v[49];
    jac[579] = jac[531] * v[59] + jac[555] * v[24];
    jac[603] = jac[531] * v[53] + jac[507] * v[82] + jac[555] * v[95];
    jac[627] = jac[531] * v[64] + jac[507] * v[79] + jac[555] * v[104];
    v[209] = (0.33 * v[316] * v[26] * v[32] + v[1] * v[30] * v[28] + 0.35 * v[316] * v[26]) * x_in[25] + (0.33 * v[251] * v[30] * v[32] + -0.33 * v[251] * v[26] * v[28] + 0.35 * v[251] * v[30] + 0.08 * v[251]) * x_in[24] + (0.33 * v[316] * v[30] * v[28] + 0.33 * v[316] * v[26] * v[32]) * x_in[26] + x_in[18] * v[209];
    jac[147] = jac[531] * v[22] + jac[507] * v[5] + jac[555] * v[209];
    v[1] = v[106] * v[17];
    jac[532] = 1 - v[281] - v[1];
    jac[557] = 1 - v[276] - v[1];
    v[14] = v[14] * v[11];
    v[106] = v[106] * v[8];
    jac[556] = v[14] - v[106];
    jac[148] = jac[532] * v[22] + jac[508] * v[5] + jac[556] * v[209];
    jac[533] = v[14] + v[106];
    jac[149] = jac[533] * v[22] + jac[509] * v[5] + jac[557] * v[209];
    jac[580] = jac[532] * v[59] + jac[556] * v[24];
    jac[581] = jac[533] * v[59] + jac[557] * v[24];
    jac[604] = jac[532] * v[53] + jac[508] * v[82] + jac[556] * v[95];
    jac[605] = jac[533] * v[53] + jac[509] * v[82] + jac[557] * v[95];
    jac[628] = jac[532] * v[64] + jac[508] * v[79] + jac[556] * v[104];
    jac[629] = jac[533] * v[64] + jac[509] * v[79] + jac[557] * v[104];
    v[104] = cos(x_in[7]);
    v[79] = -1 * sin(x_in[7]);
    v[33] = v[25] * v[104] * v[28] - v[29] * v[79] * v[32] - v[33] * v[79];
    v[12] = 1 - v[201] - v[12];
    v[201] = -0.33 * v[79] * v[28] - 0.33 * v[104] * v[32] - 0.35 * v[104];
    v[46] = v[42] * v[104] * v[28] - v[44] * v[79] * v[32] - v[46] * v[79];
    jac[168] = v[278] * v[33] + v[12] * v[201] + v[330] * v[46];
    v[236] = v[289] + v[236];
    jac[169] = v[13] * v[33] + v[236] * v[201] + v[9] * v[46];
    v[344] = v[265] - v[344];
    jac[170] = v[48] * v[33] + v[344] * v[201] + v[196] * v[46];
    v[46] = -0.33 * v[79] * v[28] - 0.33 * v[104] * v[32] - 0.35 * v[104];
    v[72] = v[68] * v[104] * v[28] - v[70] * v[79] * v[32] - v[72] * v[79];
    v[62] = (v[35] * v[104] * v[32] + v[18] * v[79] * v[28] + v[52] * v[104]) * x_in[25] + (v[54] * v[104] * v[28] - v[56] * v[79] * v[32] - v[58] * v[79]) * x_in[24] + (v[60] * v[79] * v[28] + v[62] * v[104] * v[32]) * x_in[26] + x_in[20] * v[46] - x_in[18] * v[72];
    v[87] = v[83] * v[104] * v[28] - v[85] * v[79] * v[32] - v[87] * v[79];
    v[72] = (0.33 * v[104] * v[28] - 0.33 * v[79] * v[32]) * x_in[26] + (0.33 * v[104] * v[28] - 0.33 * v[79] * v[32] - 0.35 * v[79]) * x_in[25] + x_in[19] * v[72] - x_in[20] * v[87];
    v[87] = (v[91] * v[104] * v[32] + v[54] * v[79] * v[28] + v[94] * v[104]) * x_in[25] + (v[96] * v[79] * v[32] + v[98] * v[104] * v[28] + v[100] * v[79]) * x_in[24] + (v[101] * v[79] * v[28] + v[41] * v[104] * v[32]) * x_in[26] + x_in[18] * v[87] - x_in[19] * v[46];
    jac[171] = jac[531] * v[62] + jac[507] * v[72] + jac[555] * v[87];
    jac[172] = jac[532] * v[62] + jac[508] * v[72] + jac[556] * v[87];
    jac[173] = jac[533] * v[62] + jac[509] * v[72] + jac[557] * v[87];
    v[87] = cos(x_in[8]);
    v[72] = -1 * sin(x_in[8]);
    v[31] = v[27] * v[87] - v[31] * v[72];
    v[38] = v[37] * v[87] - v[38] * v[72];
    v[45] = v[43] * v[87] - v[45] * v[72];
    jac[192] = v[278] * v[31] + v[12] * v[38] + v[330] * v[45];
    jac[193] = v[13] * v[31] + v[236] * v[38] + v[9] * v[45];
    jac[194] = v[48] * v[31] + v[344] * v[38] + v[196] * v[45];
    v[66] = v[65] * v[87] - v[66] * v[72];
    v[71] = v[69] * v[87] - v[71] * v[72];
    v[63] = (v[23] * v[72] + v[51] * v[87]) * x_in[25] + (v[55] * v[87] - v[57] * v[72]) * x_in[24] + (v[61] * v[87] + v[63] * v[72]) * x_in[26] + x_in[20] * v[66] - x_in[18] * v[71];
    v[86] = v[84] * v[87] - v[86] * v[72];
    v[71] = (v[77] * v[87] - v[78] * v[72]) * x_in[26] + (v[80] * v[87] - v[81] * v[72]) * x_in[25] + x_in[19] * v[71] - x_in[20] * v[86];
    v[86] = (v[92] * v[72] + v[93] * v[87]) * x_in[25] + (v[97] * v[72] + v[99] * v[87]) * x_in[24] + (v[102] * v[87] + v[103] * v[72]) * x_in[26] + x_in[18] * v[86] - x_in[19] * v[66];
    jac[195] = jac[531] * v[63] + jac[507] * v[71] + jac[555] * v[86];
    jac[196] = jac[532] * v[63] + jac[508] * v[71] + jac[556] * v[86];
    jac[197] = jac[533] * v[63] + jac[509] * v[71] + jac[557] * v[86];
    v[86] = v[107] * v[17];
    v[71] = v[0] * v[8];
    v[63] = v[86] - v[71];
    v[66] = cos(x_in[9]);
    v[72] = 0.33 * v[66] * v[50] * v[110] + -0.33 * v[66] * v[112] * v[114] + 0.35 * v[66] * v[50] + 0.08 * v[66];
    v[87] = v[0] * v[17];
    v[103] = v[107] * v[8];
    v[102] = v[87] + v[103];
    v[99] = -1 * sin(x_in[9]);
    v[97] = 0.33 * v[99] * v[112] * v[114] - 0.33 * v[99] * v[50] * v[110] - 0.35 * v[99] * v[50] - 0.08 * v[99];
    jac[222] = v[63] * v[72] + v[102] * v[97];
    v[93] = v[0] * v[21];
    v[92] = v[130] * v[17];
    v[81] = 1 - v[93] - v[92];
    v[0] = v[0] * v[11];
    v[130] = v[130] * v[8];
    v[80] = v[0] - v[130];
    jac[223] = v[81] * v[72] + v[80] * v[97];
    v[130] = v[0] + v[130];
    v[107] = v[107] * v[11];
    v[92] = 1 - v[107] - v[92];
    jac[224] = v[130] * v[72] + v[92] * v[97];
    v[97] = v[131] * v[17];
    v[72] = v[40] * v[8];
    jac[537] = v[97] - v[72];
    jac[514] = v[97] + v[72];
    v[72] = -0.33 * v[66];
    v[97] = 0.33 * v[66];
    v[0] = 0.33 * v[99];
    v[78] = 0.33 * v[99] * v[112] * v[114] - 0.33 * v[99] * v[50] * v[110] - 0.35 * v[99] * v[50] - 0.08 * v[99];
    v[77] = (v[72] * v[50] * v[114] - v[97] * v[112] * v[110] - 0.35 * v[66] * v[112]) * x_in[28] + (v[0] * v[50] * v[110] + -0.33 * v[99] * v[112] * v[114] + 0.35 * v[99] * v[50] + 0.08 * v[99]) * x_in[27] + (-0.33 * v[66] * v[50] * v[114] - 0.33 * v[66] * v[112] * v[110]) * x_in[29] - x_in[18] * v[78];
    v[84] = v[40] * v[21];
    v[61] = v[131] * v[11];
    jac[513] = 1 - v[84] - v[61];
    v[57] = 0.33 * v[66] * v[50] * v[110] + -0.33 * v[66] * v[112] * v[114] + 0.35 * v[66] * v[50] + 0.08 * v[66];
    v[78] = x_in[19] * v[78] - x_in[20] * v[57];
    v[55] = v[40] * v[17];
    v[131] = v[131] * v[8];
    jac[561] = v[55] + v[131];
    jac[515] = v[55] - v[131];
    jac[657] = jac[537] * v[141] + jac[561] * v[75];
    jac[681] = jac[537] * v[135] + jac[513] * v[164] + jac[561] * v[177];
    jac[705] = jac[537] * v[146] + jac[513] * v[161] + jac[561] * v[184];
    v[57] = (v[0] * v[112] * v[110] + 0.33 * v[99] * v[50] * v[114] + 0.35 * v[99] * v[112]) * x_in[28] + (v[97] * v[50] * v[110] + v[72] * v[112] * v[114] + 0.35 * v[66] * v[50] + 0.08 * v[66]) * x_in[27] + (0.33 * v[99] * v[50] * v[114] + 0.33 * v[99] * v[112] * v[110]) * x_in[29] + x_in[18] * v[57];
    jac[225] = jac[537] * v[77] + jac[513] * v[78] + jac[561] * v[57];
    v[0] = v[186] * v[17];
    jac[538] = 1 - v[84] - v[0];
    jac[563] = 1 - v[61] - v[0];
    v[40] = v[40] * v[11];
    v[186] = v[186] * v[8];
    jac[562] = v[40] - v[186];
    jac[226] = jac[538] * v[77] + jac[514] * v[78] + jac[562] * v[57];
    jac[539] = v[40] + v[186];
    jac[227] = jac[539] * v[77] + jac[515] * v[78] + jac[563] * v[57];
    jac[658] = jac[538] * v[141] + jac[562] * v[75];
    jac[659] = jac[539] * v[141] + jac[563] * v[75];
    jac[682] = jac[538] * v[135] + jac[514] * v[164] + jac[562] * v[177];
    jac[683] = jac[539] * v[135] + jac[515] * v[164] + jac[563] * v[177];
    jac[706] = jac[538] * v[146] + jac[514] * v[161] + jac[562] * v[184];
    jac[707] = jac[539] * v[146] + jac[515] * v[161] + jac[563] * v[184];
    v[184] = -1 * sin(x_in[10]);
    v[161] = cos(x_in[10]);
    v[115] = v[36] * v[184] * v[110] + v[111] * v[161] * v[114] + v[115] * v[184];
    v[107] = 1 - v[93] - v[107];
    v[93] = -0.33 * v[184] * v[114] - 0.33 * v[161] * v[110] - 0.35 * v[161];
    v[128] = v[124] * v[161] * v[114] - v[126] * v[184] * v[110] - v[128] * v[184];
    jac[246] = v[63] * v[115] + v[107] * v[93] + v[102] * v[128];
    v[71] = v[86] + v[71];
    jac[247] = v[81] * v[115] + v[71] * v[93] + v[80] * v[128];
    v[103] = v[87] - v[103];
    jac[248] = v[130] * v[115] + v[103] * v[93] + v[92] * v[128];
    v[128] = -0.33 * v[184] * v[114] - 0.33 * v[161] * v[110] - 0.35 * v[161];
    v[154] = v[150] * v[161] * v[114] - v[152] * v[184] * v[110] - v[154] * v[184];
    v[144] = (v[117] * v[184] * v[114] - v[108] * v[161] * v[110] - v[134] * v[161]) * x_in[28] + (v[136] * v[184] * v[110] + v[138] * v[161] * v[114] + v[140] * v[184]) * x_in[27] + (v[142] * v[184] * v[114] - v[144] * v[161] * v[110]) * x_in[29] + x_in[20] * v[128] - x_in[18] * v[154];
    v[169] = v[165] * v[184] * v[110] + v[167] * v[161] * v[114] + v[169] * v[184];
    v[154] = (0.33 * v[161] * v[114] - 0.33 * v[184] * v[110]) * x_in[29] + (0.33 * v[161] * v[114] - 0.33 * v[184] * v[110] - 0.35 * v[184]) * x_in[28] + x_in[19] * v[154] - x_in[20] * v[169];
    v[169] = (v[136] * v[161] * v[110] + v[174] * v[184] * v[114] + v[176] * v[161]) * x_in[28] + (v[108] * v[184] * v[110] + v[117] * v[161] * v[114] + v[180] * v[184]) * x_in[27] + (v[181] * v[184] * v[114] + v[123] * v[161] * v[110]) * x_in[29] + x_in[18] * v[169] - x_in[19] * v[128];
    jac[249] = jac[537] * v[144] + jac[513] * v[154] + jac[561] * v[169];
    jac[250] = jac[538] * v[144] + jac[514] * v[154] + jac[562] * v[169];
    jac[251] = jac[539] * v[144] + jac[515] * v[154] + jac[563] * v[169];
    v[169] = -1 * sin(x_in[11]);
    v[154] = cos(x_in[11]);
    v[113] = v[109] * v[169] + v[113] * v[154];
    v[120] = v[119] * v[154] - v[120] * v[169];
    v[127] = v[125] * v[154] - v[127] * v[169];
    jac[270] = v[63] * v[113] + v[107] * v[120] + v[102] * v[127];
    jac[271] = v[81] * v[113] + v[71] * v[120] + v[80] * v[127];
    jac[272] = v[130] * v[113] + v[103] * v[120] + v[92] * v[127];
    v[148] = v[147] * v[154] - v[148] * v[169];
    v[153] = v[151] * v[154] - v[153] * v[169];
    v[145] = (v[76] * v[154] - v[133] * v[169]) * x_in[28] + (v[137] * v[169] + v[139] * v[154]) * x_in[27] + (v[143] * v[154] - v[145] * v[169]) * x_in[29] + x_in[20] * v[148] - x_in[18] * v[153];
    v[168] = v[166] * v[169] + v[168] * v[154];
    v[153] = (v[159] * v[154] - v[160] * v[169]) * x_in[29] + (v[162] * v[154] - v[163] * v[169]) * x_in[28] + x_in[19] * v[153] - x_in[20] * v[168];
    v[168] = (v[173] * v[169] + v[175] * v[154]) * x_in[28] + (v[178] * v[169] + v[179] * v[154]) * x_in[27] + (v[182] * v[154] + v[183] * v[169]) * x_in[29] + x_in[18] * v[168] - x_in[19] * v[148];
    jac[273] = jac[537] * v[145] + jac[513] * v[153] + jac[561] * v[168];
    jac[274] = jac[538] * v[145] + jac[514] * v[153] + jac[562] * v[168];
    jac[275] = jac[539] * v[145] + jac[515] * v[153] + jac[563] * v[168];
    v[168] = v[187] * v[17];
    v[153] = v[90] * v[8];
    v[145] = v[168] - v[153];
    v[148] = cos(x_in[12]);
    v[154] = 0.33 * v[148] * v[132] * v[190] - 0.33 * v[148] * v[192] * v[194] - 0.35 * v[148] * v[192] - 0.08 * v[148];
    v[169] = v[90] * v[17];
    v[183] = v[187] * v[8];
    v[182] = v[169] + v[183];
    v[179] = -1 * sin(x_in[12]);
    v[178] = 0.33 * v[179] * v[132] * v[190] - 0.33 * v[179] * v[192] * v[194] - 0.35 * v[179] * v[192] - 0.08 * v[179];
    jac[300] = v[145] * v[154] + v[182] * v[178];
    v[175] = v[90] * v[21];
    v[173] = v[210] * v[17];
    v[163] = 1 - v[175] - v[173];
    v[90] = v[90] * v[11];
    v[210] = v[210] * v[8];
    v[162] = v[90] - v[210];
    jac[301] = v[163] * v[154] + v[162] * v[178];
    v[210] = v[90] + v[210];
    v[187] = v[187] * v[11];
    v[173] = 1 - v[187] - v[173];
    jac[302] = v[210] * v[154] + v[173] * v[178];
    v[178] = v[211] * v[17];
    v[154] = v[122] * v[8];
    jac[543] = v[178] - v[154];
    jac[520] = v[178] + v[154];
    v[154] = 0.33 * v[148];
    v[178] = 0.33 * v[179];
    v[90] = 0.33 * v[179];
    v[160] = 0.33 * v[179] * v[132] * v[190] - 0.33 * v[179] * v[192] * v[194] - 0.35 * v[179] * v[192] - 0.08 * v[179];
    v[159] = (v[154] * v[132] * v[194] + 0.33 * v[148] * v[192] * v[190] + 0.35 * v[148] * v[132]) * x_in[31] + (v[178] * v[132] * v[190] - v[90] * v[192] * v[194] - 0.35 * v[179] * v[192] - 0.08 * v[179]) * x_in[30] + (0.33 * v[148] * v[192] * v[190] + 0.33 * v[148] * v[132] * v[194]) * x_in[32] - x_in[18] * v[160];
    v[166] = v[122] * v[21];
    v[143] = v[211] * v[11];
    jac[519] = 1 - v[166] - v[143];
    v[139] = 0.33 * v[148] * v[132] * v[190] - 0.33 * v[148] * v[192] * v[194] - 0.35 * v[148] * v[192] - 0.08 * v[148];
    v[160] = x_in[19] * v[160] - x_in[20] * v[139];
    v[137] = v[122] * v[17];
    v[211] = v[211] * v[8];
    jac[567] = v[137] + v[211];
    jac[521] = v[137] - v[211];
    jac[735] = jac[543] * v[221] + jac[567] * v[157];
    jac[759] = jac[543] * v[215] + jac[519] * v[244] + jac[567] * v[256];
    jac[783] = jac[543] * v[226] + jac[519] * v[241] + jac[567] * v[264];
    v[139] = (v[90] * v[132] * v[194] + v[178] * v[192] * v[190] + 0.35 * v[179] * v[132]) * x_in[31] + (v[154] * v[192] * v[194] + -0.33 * v[148] * v[132] * v[190] + 0.35 * v[148] * v[192] + 0.08 * v[148]) * x_in[30] + (0.33 * v[179] * v[192] * v[190] + 0.33 * v[179] * v[132] * v[194]) * x_in[32] + x_in[18] * v[139];
    jac[303] = jac[543] * v[159] + jac[519] * v[160] + jac[567] * v[139];
    v[90] = v[266] * v[17];
    jac[544] = 1 - v[166] - v[90];
    jac[569] = 1 - v[143] - v[90];
    v[122] = v[122] * v[11];
    v[266] = v[266] * v[8];
    jac[568] = v[122] - v[266];
    jac[304] = jac[544] * v[159] + jac[520] * v[160] + jac[568] * v[139];
    jac[545] = v[122] + v[266];
    jac[305] = jac[545] * v[159] + jac[521] * v[160] + jac[569] * v[139];
    jac[736] = jac[544] * v[221] + jac[568] * v[157];
    jac[737] = jac[545] * v[221] + jac[569] * v[157];
    jac[760] = jac[544] * v[215] + jac[520] * v[244] + jac[568] * v[256];
    jac[761] = jac[545] * v[215] + jac[521] * v[244] + jac[569] * v[256];
    jac[784] = jac[544] * v[226] + jac[520] * v[241] + jac[568] * v[264];
    jac[785] = jac[545] * v[226] + jac[521] * v[241] + jac[569] * v[264];
    v[264] = cos(x_in[13]);
    v[241] = -1 * sin(x_in[13]);
    v[195] = v[118] * v[264] * v[190] - v[191] * v[241] * v[194] - v[195] * v[241];
    v[187] = 1 - v[175] - v[187];
    v[175] = -0.33 * v[241] * v[190] - 0.33 * v[264] * v[194] - 0.35 * v[264];
    v[208] = v[204] * v[264] * v[190] - v[206] * v[241] * v[194] - v[208] * v[241];
    jac[324] = v[145] * v[195] + v[187] * v[175] + v[182] * v[208];
    v[153] = v[168] + v[153];
    jac[325] = v[163] * v[195] + v[153] * v[175] + v[162] * v[208];
    v[183] = v[169] - v[183];
    jac[326] = v[210] * v[195] + v[183] * v[175] + v[173] * v[208];
    v[208] = -0.33 * v[241] * v[190] - 0.33 * v[264] * v[194] - 0.35 * v[264];
    v[234] = v[230] * v[264] * v[190] - v[232] * v[241] * v[194] - v[234] * v[241];
    v[224] = (v[197] * v[264] * v[194] + v[188] * v[241] * v[190] + v[214] * v[264]) * x_in[31] + (v[216] * v[264] * v[190] - v[218] * v[241] * v[194] - v[220] * v[241]) * x_in[30] + (v[222] * v[241] * v[190] + v[224] * v[264] * v[194]) * x_in[32] + x_in[20] * v[208] - x_in[18] * v[234];
    v[249] = v[245] * v[264] * v[190] - v[247] * v[241] * v[194] - v[249] * v[241];
    v[234] = (0.33 * v[264] * v[190] - 0.33 * v[241] * v[194]) * x_in[32] + (0.33 * v[264] * v[190] - 0.33 * v[241] * v[194] - 0.35 * v[241]) * x_in[31] + x_in[19] * v[234] - x_in[20] * v[249];
    v[249] = (v[218] * v[264] * v[194] + v[216] * v[241] * v[190] + v[255] * v[264]) * x_in[31] + (v[197] * v[241] * v[194] + v[258] * v[264] * v[190] + v[260] * v[241]) * x_in[30] + (v[261] * v[241] * v[190] + v[203] * v[264] * v[194]) * x_in[32] + x_in[18] * v[249] - x_in[19] * v[208];
    jac[327] = jac[543] * v[224] + jac[519] * v[234] + jac[567] * v[249];
    jac[328] = jac[544] * v[224] + jac[520] * v[234] + jac[568] * v[249];
    jac[329] = jac[545] * v[224] + jac[521] * v[234] + jac[569] * v[249];
    v[249] = cos(x_in[14]);
    v[234] = -1 * sin(x_in[14]);
    v[193] = v[189] * v[249] - v[193] * v[234];
    v[200] = v[199] * v[249] - v[200] * v[234];
    v[207] = v[205] * v[249] - v[207] * v[234];
    jac[348] = v[145] * v[193] + v[187] * v[200] + v[182] * v[207];
    jac[349] = v[163] * v[193] + v[153] * v[200] + v[162] * v[207];
    jac[350] = v[210] * v[193] + v[183] * v[200] + v[173] * v[207];
    v[228] = v[227] * v[249] - v[228] * v[234];
    v[233] = v[231] * v[249] - v[233] * v[234];
    v[225] = (v[158] * v[234] + v[213] * v[249]) * x_in[31] + (v[217] * v[249] - v[219] * v[234]) * x_in[30] + (v[223] * v[249] + v[225] * v[234]) * x_in[32] + x_in[20] * v[228] - x_in[18] * v[233];
    v[248] = v[246] * v[249] - v[248] * v[234];
    v[233] = (v[239] * v[249] - v[240] * v[234]) * x_in[32] + (v[242] * v[249] - v[243] * v[234]) * x_in[31] + x_in[19] * v[233] - x_in[20] * v[248];
    v[248] = (v[253] * v[234] + v[254] * v[249]) * x_in[31] + (v[257] * v[234] + v[259] * v[249]) * x_in[30] + (v[262] * v[249] + v[263] * v[234]) * x_in[32] + x_in[18] * v[248] - x_in[19] * v[228];
    jac[351] = jac[543] * v[225] + jac[519] * v[233] + jac[567] * v[248];
    jac[352] = jac[544] * v[225] + jac[520] * v[233] + jac[568] * v[248];
    jac[353] = jac[545] * v[225] + jac[521] * v[233] + jac[569] * v[248];
    v[248] = v[267] * v[17];
    v[233] = v[172] * v[8];
    v[225] = v[248] - v[233];
    v[228] = cos(x_in[15]);
    v[234] = 0.33 * v[228] * v[212] * v[270] + -0.33 * v[228] * v[272] * v[274] + 0.35 * v[228] * v[212] + 0.08 * v[228];
    v[249] = v[172] * v[17];
    v[263] = v[267] * v[8];
    v[262] = v[249] + v[263];
    v[259] = -1 * sin(x_in[15]);
    v[257] = 0.33 * v[259] * v[272] * v[274] - 0.33 * v[259] * v[212] * v[270] - 0.35 * v[259] * v[212] - 0.08 * v[259];
    jac[378] = v[225] * v[234] + v[262] * v[257];
    v[254] = v[172] * v[21];
    v[253] = v[290] * v[17];
    v[243] = 1 - v[254] - v[253];
    v[172] = v[172] * v[11];
    v[290] = v[290] * v[8];
    v[242] = v[172] - v[290];
    jac[379] = v[243] * v[234] + v[242] * v[257];
    v[290] = v[172] + v[290];
    v[267] = v[267] * v[11];
    v[253] = 1 - v[267] - v[253];
    jac[380] = v[290] * v[234] + v[253] * v[257];
    v[257] = v[291] * v[17];
    v[234] = v[202] * v[8];
    jac[549] = v[257] - v[234];
    jac[526] = v[257] + v[234];
    v[234] = -0.33 * v[228];
    v[257] = 0.33 * v[228];
    v[172] = 0.33 * v[259];
    v[240] = 0.33 * v[259] * v[272] * v[274] - 0.33 * v[259] * v[212] * v[270] - 0.35 * v[259] * v[212] - 0.08 * v[259];
    v[239] = (v[234] * v[212] * v[274] - v[257] * v[272] * v[270] - 0.35 * v[228] * v[272]) * x_in[34] + (v[172] * v[212] * v[270] + -0.33 * v[259] * v[272] * v[274] + 0.35 * v[259] * v[212] + 0.08 * v[259]) * x_in[33] + (-0.33 * v[228] * v[212] * v[274] - 0.33 * v[228] * v[272] * v[270]) * x_in[35] - x_in[18] * v[240];
    v[21] = v[202] * v[21];
    v[246] = v[291] * v[11];
    jac[525] = 1 - v[21] - v[246];
    v[223] = 0.33 * v[228] * v[212] * v[270] + -0.33 * v[228] * v[272] * v[274] + 0.35 * v[228] * v[212] + 0.08 * v[228];
    v[240] = x_in[19] * v[240] - x_in[20] * v[223];
    v[219] = v[202] * v[17];
    v[291] = v[291] * v[8];
    jac[573] = v[219] + v[291];
    jac[527] = v[219] - v[291];
    jac[813] = jac[549] * v[301] + jac[573] * v[237];
    jac[837] = jac[549] * v[295] + jac[525] * v[323] + jac[573] * v[336];
    jac[861] = jac[549] * v[306] + jac[525] * v[320] + jac[573] * v[343];
    v[223] = (v[172] * v[272] * v[270] + 0.33 * v[259] * v[212] * v[274] + 0.35 * v[259] * v[272]) * x_in[34] + (v[257] * v[212] * v[270] + v[234] * v[272] * v[274] + 0.35 * v[228] * v[212] + 0.08 * v[228]) * x_in[33] + (0.33 * v[259] * v[212] * v[274] + 0.33 * v[259] * v[272] * v[270]) * x_in[35] + x_in[18] * v[223];
    jac[381] = jac[549] * v[239] + jac[525] * v[240] + jac[573] * v[223];
    v[17] = v[345] * v[17];
    jac[550] = 1 - v[21] - v[17];
    jac[575] = 1 - v[246] - v[17];
    v[202] = v[202] * v[11];
    v[345] = v[345] * v[8];
    jac[574] = v[202] - v[345];
    jac[382] = jac[550] * v[239] + jac[526] * v[240] + jac[574] * v[223];
    jac[551] = v[202] + v[345];
    jac[383] = jac[551] * v[239] + jac[527] * v[240] + jac[575] * v[223];
    jac[814] = jac[550] * v[301] + jac[574] * v[237];
    jac[815] = jac[551] * v[301] + jac[575] * v[237];
    jac[838] = jac[550] * v[295] + jac[526] * v[323] + jac[574] * v[336];
    jac[839] = jac[551] * v[295] + jac[527] * v[323] + jac[575] * v[336];
    jac[862] = jac[550] * v[306] + jac[526] * v[320] + jac[574] * v[343];
    jac[863] = jac[551] * v[306] + jac[527] * v[320] + jac[575] * v[343];
    v[343] = -1 * sin(x_in[16]);
    v[320] = cos(x_in[16]);
    v[275] = v[198] * v[343] * v[270] + v[271] * v[320] * v[274] + v[275] * v[343];
    v[267] = 1 - v[254] - v[267];
    v[254] = -0.33 * v[343] * v[274] - 0.33 * v[320] * v[270] - 0.35 * v[320];
    v[288] = v[284] * v[320] * v[274] - v[286] * v[343] * v[270] - v[288] * v[343];
    jac[402] = v[225] * v[275] + v[267] * v[254] + v[262] * v[288];
    v[233] = v[248] + v[233];
    jac[403] = v[243] * v[275] + v[233] * v[254] + v[242] * v[288];
    v[263] = v[249] - v[263];
    jac[404] = v[290] * v[275] + v[263] * v[254] + v[253] * v[288];
    v[288] = -0.33 * v[343] * v[274] - 0.33 * v[320] * v[270] - 0.35 * v[320];
    v[314] = v[310] * v[320] * v[274] - v[312] * v[343] * v[270] - v[314] * v[343];
    v[304] = (v[277] * v[343] * v[274] - v[268] * v[320] * v[270] - v[294] * v[320]) * x_in[34] + (v[296] * v[343] * v[270] + v[298] * v[320] * v[274] + v[300] * v[343]) * x_in[33] + (v[302] * v[343] * v[274] - v[304] * v[320] * v[270]) * x_in[35] + x_in[20] * v[288] - x_in[18] * v[314];
    v[328] = v[324] * v[343] * v[270] + v[326] * v[320] * v[274] + v[328] * v[343];
    v[314] = (0.33 * v[320] * v[274] - 0.33 * v[343] * v[270]) * x_in[35] + (0.33 * v[320] * v[274] - 0.33 * v[343] * v[270] - 0.35 * v[343]) * x_in[34] + x_in[19] * v[314] - x_in[20] * v[328];
    v[328] = (v[296] * v[320] * v[270] + v[333] * v[343] * v[274] + v[335] * v[320]) * x_in[34] + (v[268] * v[343] * v[270] + v[277] * v[320] * v[274] + v[339] * v[343]) * x_in[33] + (v[340] * v[343] * v[274] + v[283] * v[320] * v[270]) * x_in[35] + x_in[18] * v[328] - x_in[19] * v[288];
    jac[405] = jac[549] * v[304] + jac[525] * v[314] + jac[573] * v[328];
    jac[406] = jac[550] * v[304] + jac[526] * v[314] + jac[574] * v[328];
    jac[407] = jac[551] * v[304] + jac[527] * v[314] + jac[575] * v[328];
    v[328] = -1 * sin(x_in[17]);
    v[314] = cos(x_in[17]);
    v[273] = v[269] * v[328] + v[273] * v[314];
    v[280] = v[279] * v[314] - v[280] * v[328];
    v[287] = v[285] * v[314] - v[287] * v[328];
    jac[426] = v[225] * v[273] + v[267] * v[280] + v[262] * v[287];
    jac[427] = v[243] * v[273] + v[233] * v[280] + v[242] * v[287];
    jac[428] = v[290] * v[273] + v[263] * v[280] + v[253] * v[287];
    v[308] = v[307] * v[314] - v[308] * v[328];
    v[313] = v[311] * v[314] - v[313] * v[328];
    v[305] = (v[238] * v[314] - v[293] * v[328]) * x_in[34] + (v[297] * v[328] + v[299] * v[314]) * x_in[33] + (v[303] * v[314] - v[305] * v[328]) * x_in[35] + x_in[20] * v[308] - x_in[18] * v[313];
    v[327] = v[325] * v[328] + v[327] * v[314];
    v[313] = (v[318] * v[314] - v[319] * v[328]) * x_in[35] + (v[321] * v[314] - v[322] * v[328]) * x_in[34] + x_in[19] * v[313] - x_in[20] * v[327];
    v[327] = (v[332] * v[328] + v[334] * v[314]) * x_in[34] + (v[337] * v[328] + v[338] * v[314]) * x_in[33] + (v[341] * v[314] + v[342] * v[328]) * x_in[35] + x_in[18] * v[327] - x_in[19] * v[308];
    jac[429] = jac[549] * v[305] + jac[525] * v[313] + jac[573] * v[327];
    jac[430] = jac[550] * v[305] + jac[526] * v[313] + jac[574] * v[327];
    jac[431] = jac[551] * v[305] + jac[527] * v[313] + jac[575] * v[327];
    v[327] = 0 - v[73];
    jac[435] = jac[531] * v[327] + jac[555] * v[88];
    jac[436] = jac[532] * v[327] + jac[556] * v[88];
    jac[437] = jac[533] * v[327] + jac[557] * v[88];
    v[327] = 0 - v[155];
    jac[441] = jac[537] * v[327] + jac[561] * v[170];
    jac[442] = jac[538] * v[327] + jac[562] * v[170];
    jac[443] = jac[539] * v[327] + jac[563] * v[170];
    v[327] = 0 - v[235];
    jac[447] = jac[543] * v[327] + jac[567] * v[250];
    jac[448] = jac[544] * v[327] + jac[568] * v[250];
    jac[449] = jac[545] * v[327] + jac[569] * v[250];
    v[327] = 0 - v[315];
    jac[453] = jac[549] * v[327] + jac[573] * v[329];
    jac[454] = jac[550] * v[327] + jac[574] * v[329];
    jac[455] = jac[551] * v[327] + jac[575] * v[329];
    v[327] = 0 - v[67];
    jac[459] = jac[507] * v[73] + jac[555] * v[327];
    jac[460] = jac[508] * v[73] + jac[556] * v[327];
    jac[461] = jac[509] * v[73] + jac[557] * v[327];
    v[327] = 0 - v[149];
    jac[465] = jac[513] * v[155] + jac[561] * v[327];
    jac[466] = jac[514] * v[155] + jac[562] * v[327];
    jac[467] = jac[515] * v[155] + jac[563] * v[327];
    v[327] = 0 - v[229];
    jac[471] = jac[519] * v[235] + jac[567] * v[327];
    jac[472] = jac[520] * v[235] + jac[568] * v[327];
    jac[473] = jac[521] * v[235] + jac[569] * v[327];
    v[327] = 0 - v[309];
    jac[477] = jac[525] * v[315] + jac[573] * v[327];
    jac[478] = jac[526] * v[315] + jac[574] * v[327];
    jac[479] = jac[527] * v[315] + jac[575] * v[327];
    v[88] = 0 - v[88];
    jac[483] = jac[531] * v[67] + jac[507] * v[88];
    jac[484] = jac[532] * v[67] + jac[508] * v[88];
    jac[485] = jac[533] * v[67] + jac[509] * v[88];
    v[170] = 0 - v[170];
    jac[489] = jac[537] * v[149] + jac[513] * v[170];
    jac[490] = jac[538] * v[149] + jac[514] * v[170];
    jac[491] = jac[539] * v[149] + jac[515] * v[170];
    v[250] = 0 - v[250];
    jac[495] = jac[543] * v[229] + jac[519] * v[250];
    jac[496] = jac[544] * v[229] + jac[520] * v[250];
    jac[497] = jac[545] * v[229] + jac[521] * v[250];
    v[329] = 0 - v[329];
    jac[501] = jac[549] * v[309] + jac[525] * v[329];
    jac[502] = jac[550] * v[309] + jac[526] * v[329];
    jac[503] = jac[551] * v[309] + jac[527] * v[329];
    // dependent variables without operations
    jac[72] = 1;
    jac[78] = 1;
    jac[84] = 1;
    jac[90] = 1;
    jac[97] = 1;
    jac[103] = 1;
    jac[109] = 1;
    jac[115] = 1;
    jac[122] = 1;
    jac[128] = 1;
    jac[134] = 1;
    jac[140] = 1;


 	return jac_;

}


}
}
}



