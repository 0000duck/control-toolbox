/***********************************************************************************
Copyright (c) 2017, Michael Neunert, Markus Giftthaler, Markus St√§uble, Diego Pardo,
Farbod Farshidian. All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice,
      this list of conditions and the following disclaimer in the documentation
      and/or other materials provided with the distribution.
    * Neither the name of ETH ZURICH nor the names of its contributors may be used
      to endorse or promote products derived from this software without specific
      prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
SHALL ETH ZURICH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
***************************************************************************************/

#include "HyQForwardZero.h"

namespace ct {
namespace models {
namespace HyQ {


HyQForwardZero::JAC_TYPE HyQForwardZero::operator()(const Eigen::VectorXd& x_in)
{
	double* jac = jac_.data();

    v_[0] = 1 / cos(x_in[1]);
    v_[1] = cos(x_in[2]);
    v_[2] = 0 - v_[0];
    v_[3] = sin(x_in[2]);
    jac[0] = v_[0] * v_[1] * x_in[18] + v_[2] * v_[3] * x_in[19];
    jac[1] = v_[3] * x_in[18] + v_[1] * x_in[19];
    v_[4] = sin(x_in[1]);
    jac[2] = v_[0] * v_[3] * v_[4] * x_in[19] + v_[2] * v_[1] * v_[4] * x_in[18] + x_in[20];
    v_[4] = 0.5 * x_in[0];
    v_[3] = cos(v_[4]);
    v_[2] = 0.5 * x_in[1];
    v_[1] = sin(v_[2]);
    v_[0] = v_[3] * v_[1];
    v_[5] = 0.5 * x_in[2];
    v_[6] = cos(v_[5]);
    v_[4] = sin(v_[4]);
    v_[2] = cos(v_[2]);
    v_[7] = v_[4] * v_[2];
    v_[5] = sin(v_[5]);
    v_[8] = v_[0] * v_[6] - v_[7] * v_[5];
    v_[9] = 2. * v_[8];
    v_[7] = v_[7] * v_[6] + v_[0] * v_[5];
    v_[0] = v_[9] * v_[7];
    v_[2] = v_[3] * v_[2];
    v_[4] = v_[4] * v_[1];
    v_[1] = v_[2] * v_[5] + v_[4] * v_[6];
    v_[3] = 2. * v_[1];
    v_[4] = v_[2] * v_[6] - v_[4] * v_[5];
    v_[2] = v_[3] * v_[4];
    v_[1] = v_[3] * v_[1];
    v_[5] = v_[9] * v_[8];
    v_[6] = v_[3] * v_[7];
    v_[9] = v_[9] * v_[4];
    jac[3] = (v_[0] - v_[2]) * x_in[22] + (1 - v_[1] - v_[5]) * x_in[21] + (v_[6] + v_[9]) * x_in[23];
    v_[10] = 2. * v_[7];
    v_[7] = v_[10] * v_[7];
    v_[3] = v_[3] * v_[8];
    v_[10] = v_[10] * v_[4];
    jac[4] = (1 - v_[1] - v_[7]) * x_in[22] + (v_[0] + v_[2]) * x_in[21] + (v_[3] - v_[10]) * x_in[23];
    jac[5] = (v_[3] + v_[10]) * x_in[22] + (v_[6] - v_[9]) * x_in[21] + (1 - v_[5] - v_[7]) * x_in[23];
    v_[10] = cos(x_in[15]);
    v_[3] = cos(x_in[16]);
    v_[7] = cos(x_in[17]);
    v_[9] = -8.81e-05 * v_[7];
    v_[6] = sin(x_in[17]);
    v_[5] = 0 - v_[6];
    v_[1] = 8.81e-05 * v_[5];
    v_[2] = 0.35 * v_[6];
    v_[0] = 8.81e-05 * v_[2];
    v_[4] = 2. * v_[0];
    v_[8] = -0.35 * v_[7];
    v_[11] = 0 - -8.81e-05 * v_[8];
    v_[12] = 2. * v_[11];
    v_[0] = 0 - v_[0];
    v_[13] = -0.000102 + v_[4] * v_[5] + v_[12] * v_[7] - v_[7] * v_[11] - v_[6] * v_[0];
    v_[14] = -0.00185880198235362 * v_[2] - 0.414812462825713 * v_[8];
    v_[15] = 0.881 * v_[8];
    v_[16] = -0.1104774 + v_[15];
    v_[17] = v_[14] + v_[16];
    v_[18] = 0.880992588508842 * v_[2] - -0.00185880198235362 * v_[8];
    v_[19] = 0 - 0.881 * v_[2];
    v_[20] = -0.0004405 + v_[19];
    v_[21] = v_[18] + v_[20];
    v_[16] = 0 - v_[16];
    v_[22] = v_[7] * v_[16] + v_[5] * v_[20];
    v_[23] = 0.47422804 + v_[17] * v_[7] + v_[21] * v_[6] + v_[22];
    v_[18] = v_[18] * v_[2] - v_[14] * v_[8];
    v_[14] = 0.089871 + v_[18];
    v_[24] = v_[23] / v_[14];
    v_[25] = v_[9] * v_[7] + v_[1] * v_[6] - v_[13] * v_[24];
    v_[26] = sin(x_in[16]);
    v_[27] = 0 - v_[26];
    v_[28] = -8.81e-05 * v_[6];
    v_[29] = 8.81e-05 * v_[7];
    v_[0] = 2.1e-05 + v_[4] * v_[7] + v_[12] * v_[6] + v_[5] * v_[11] + v_[7] * v_[0];
    v_[12] = v_[28] * v_[7] + v_[29] * v_[6] - v_[0] * v_[24];
    v_[11] = v_[3] * v_[25] + v_[27] * v_[12];
    v_[16] = v_[6] * v_[16] + v_[7] * v_[20];
    v_[21] = -0.0825825 + v_[17] * v_[5] + v_[21] * v_[7] - v_[16];
    v_[17] = v_[21] / v_[14];
    v_[1] = v_[9] * v_[5] + v_[1] * v_[7] - v_[13] * v_[17];
    v_[29] = v_[28] * v_[5] + v_[29] * v_[7] - v_[0] * v_[17];
    v_[28] = v_[3] * v_[1] + v_[27] * v_[29];
    v_[9] = -0.0004405 * v_[8] + v_[19] * v_[8] - -0.1104774 * v_[2];
    v_[15] = 0.026409 + -0.2209548 * v_[8] + v_[15] * v_[8] - v_[18];
    v_[8] = v_[6] * v_[9] + v_[7] * v_[15];
    v_[19] = 0.000468 - -0.000881 * v_[2] - v_[19] * v_[2] - v_[18];
    v_[9] = v_[6] * v_[19] + v_[7] * v_[9];
    v_[20] = v_[0] / v_[14];
    v_[4] = -0.007418 + v_[8] * v_[5] + v_[9] * v_[7] - v_[13] * v_[20];
    v_[16] = 0.0825825 + v_[16];
    v_[30] = 0 - v_[3];
    v_[31] = 0.08 * v_[30];
    v_[32] = 0.08 * v_[26];
    v_[33] = 0 - 4.027 * v_[32];
    v_[22] = -0.47422804 - v_[22];
    v_[34] = v_[4] + v_[16] * v_[31] + v_[33] * v_[31] - v_[22] * v_[32];
    v_[9] = v_[9] * v_[6] + v_[8] * v_[7];
    v_[20] = 0.087136 + v_[18] + v_[9] - v_[0] * v_[20];
    v_[8] = 4.027 * v_[31];
    v_[35] = -7.4114911576828e-06 * v_[6] + -0.00185880198235362 * v_[7];
    v_[36] = -0.00185880198235362 * v_[6] + -0.466187537174287 * v_[7];
    v_[37] = v_[35] * v_[6] + v_[36] * v_[7];
    v_[17] = 3.56080505133456 - v_[37] - v_[21] * v_[17];
    v_[36] = v_[36] * v_[5] + v_[35] * v_[7] - v_[21] * v_[24];
    v_[35] = v_[32] * v_[17] - v_[31] * v_[36];
    v_[37] = 4.027 + v_[37] - v_[23] * v_[24];
    v_[24] = v_[32] * v_[36] - v_[31] * v_[37];
    v_[38] = v_[35] * v_[32] - v_[24] * v_[31];
    v_[39] = 2. * v_[22] * v_[31] + v_[20] + v_[8] * v_[31] - v_[38];
    v_[40] = v_[27] * v_[34] + v_[30] * v_[39];
    v_[9] = 0.005495 + v_[15] + v_[19] + v_[18] - v_[9] - v_[13] * v_[13] / v_[14];
    v_[19] = v_[9] - 2. * v_[16] * v_[32] - v_[33] * v_[32] - v_[38];
    v_[34] = v_[27] * v_[19] + v_[30] * v_[34];
    v_[15] = -0.022734 + v_[40] * v_[27] + v_[34] * v_[3];
    v_[18] = v_[27] * v_[1] + v_[30] * v_[29];
    v_[41] = v_[27] * v_[25] + v_[30] * v_[12];
    v_[42] = v_[18] * v_[3] + v_[41] * v_[27];
    v_[34] = v_[34] * v_[27] + v_[40] * v_[30];
    v_[40] = 0.011033 + v_[38] + v_[34];
    v_[43] = v_[42] / v_[40];
    v_[44] = v_[11] * v_[27] + v_[28] * v_[3] - v_[15] * v_[43];
    v_[45] = 0.207 * v_[10];
    v_[46] = sin(x_in[15]);
    v_[47] = 0.3735 * v_[46];
    v_[48] = 0 - v_[10];
    v_[49] = -0.3735 * v_[10];
    v_[50] = v_[46] * v_[47] + v_[48] * v_[49];
    v_[8] = v_[8] + v_[22];
    v_[51] = 0 - v_[8];
    v_[33] = v_[33] + v_[16];
    v_[52] = v_[3] * v_[51] + v_[27] * v_[33];
    v_[53] = 0.1466472 + v_[52];
    v_[54] = v_[53] / v_[40];
    v_[55] = 0 - v_[42] * v_[54];
    v_[56] = v_[50] * v_[55];
    v_[57] = v_[37] - 4.027;
    v_[58] = v_[27] * v_[36] + v_[30] * v_[57];
    v_[59] = v_[17] - 4.027;
    v_[60] = v_[27] * v_[59] + v_[30] * v_[36];
    v_[41] = v_[18] * v_[27] + v_[41] * v_[30];
    v_[18] = v_[41] / v_[40];
    v_[61] = v_[58] * v_[27] + v_[60] * v_[3] - v_[42] * v_[18];
    v_[62] = v_[45] * v_[61];
    v_[63] = v_[56] - v_[62];
    v_[51] = v_[27] * v_[51] + v_[30] * v_[33];
    v_[64] = -0.5824264 - v_[51] - v_[15] * v_[54];
    v_[65] = 0.207 * v_[46];
    v_[66] = 7.467 - v_[53] * v_[54];
    v_[67] = 0 - v_[53] * v_[18];
    v_[68] = v_[50] * v_[66] - v_[45] * v_[67];
    v_[69] = v_[44] * v_[45] + v_[63] * v_[45] - v_[64] * v_[65] - v_[68] * v_[65];
    v_[70] = v_[1] * v_[32] - v_[25] * v_[31];
    v_[31] = v_[29] * v_[32] - v_[12] * v_[31];
    v_[71] = 0 - v_[31];
    v_[72] = -5.1e-05 + v_[27] * v_[70] + v_[3] * v_[71];
    v_[54] = 0 - v_[72] * v_[54];
    v_[73] = v_[65] * v_[67];
    v_[56] = v_[73] - v_[56];
    v_[8] = v_[24] + v_[8];
    v_[33] = v_[35] + v_[33];
    v_[51] = 0.5824264 + v_[8] * v_[27] + v_[33] * v_[3] + v_[51] - v_[72] * v_[43];
    v_[60] = v_[60] * v_[27] + v_[58] * v_[30];
    v_[59] = 7.467 + v_[57] + v_[59] - v_[60] - v_[42] * v_[43];
    v_[57] = v_[65] * v_[61] - v_[50] * v_[59];
    v_[43] = v_[54] * v_[65] + v_[56] * v_[65] - v_[51] * v_[45] - v_[57] * v_[45];
    v_[58] = 0 - v_[10] * v_[69] - v_[46] * v_[43];
    v_[35] = cos(x_in[12]);
    v_[24] = 0 - v_[35];
    v_[74] = cos(x_in[13]);
    v_[75] = sin(x_in[14]);
    v_[76] = 0.35 * v_[75];
    v_[77] = cos(x_in[14]);
    v_[78] = -0.35 * v_[77];
    v_[79] = -0.00370574557885489 * v_[76] - 0.417781802643138 * v_[78];
    v_[80] = 0.881 * v_[78];
    v_[81] = -0.110125 + v_[80];
    v_[82] = v_[79] + v_[81];
    v_[83] = 0.880970354035369 * v_[76] - -0.00370574557885489 * v_[78];
    v_[84] = 0 - 0.881 * v_[76];
    v_[85] = -0.000881 + v_[84];
    v_[86] = v_[83] + v_[85];
    v_[81] = 0 - v_[81];
    v_[87] = 0 - v_[75];
    v_[88] = v_[77] * v_[81] + v_[87] * v_[85];
    v_[89] = 0.47422804 + v_[82] * v_[77] + v_[86] * v_[75] + v_[88];
    v_[83] = v_[83] * v_[76] - v_[79] * v_[78];
    v_[79] = 0.089871 + v_[83];
    v_[90] = v_[89] / v_[79];
    v_[91] = 0 - -0.000102 * v_[90];
    v_[92] = sin(x_in[13]);
    v_[93] = 0 - v_[92];
    v_[94] = 0 - 2.1e-05 * v_[90];
    v_[95] = v_[74] * v_[91] + v_[93] * v_[94];
    v_[81] = v_[75] * v_[81] + v_[77] * v_[85];
    v_[86] = -0.0825825 + v_[82] * v_[87] + v_[86] * v_[77] - v_[81];
    v_[82] = v_[86] / v_[79];
    v_[85] = 0 - -0.000102 * v_[82];
    v_[96] = 0 - 2.1e-05 * v_[82];
    v_[97] = v_[74] * v_[85] + v_[93] * v_[96];
    v_[98] = -0.000881 * v_[78] + v_[84] * v_[78] - -0.110125 * v_[76];
    v_[80] = 0.026409 + -0.22025 * v_[78] + v_[80] * v_[78] - v_[83];
    v_[78] = v_[75] * v_[98] + v_[77] * v_[80];
    v_[84] = 0.000468 - -0.001762 * v_[76] - v_[84] * v_[76] - v_[83];
    v_[98] = v_[75] * v_[84] + v_[77] * v_[98];
    v_[99] = 2.1e-05 / v_[79];
    v_[100] = -0.007418 + v_[78] * v_[87] + v_[98] * v_[77] - -0.000102 * v_[99];
    v_[81] = 0.0825825 + v_[81];
    v_[101] = -0.08 * v_[74];
    v_[102] = -0.08 * v_[92];
    v_[103] = -1 * v_[102];
    v_[104] = 0 - 4.027 * v_[103];
    v_[88] = -0.47422804 - v_[88];
    v_[105] = v_[100] + v_[81] * v_[101] + v_[104] * v_[101] - v_[88] * v_[103];
    v_[98] = v_[98] * v_[75] + v_[78] * v_[77];
    v_[99] = 0.087136 + v_[83] + v_[98] - 2.1e-05 * v_[99];
    v_[78] = 4.027 * v_[101];
    v_[106] = -2.96459646308422e-05 * v_[75] + -0.00370574557885489 * v_[77];
    v_[107] = -0.00370574557885489 * v_[75] + -0.463218197356862 * v_[77];
    v_[108] = v_[106] * v_[75] + v_[107] * v_[77];
    v_[82] = 3.56375215667851 - v_[108] - v_[86] * v_[82];
    v_[107] = v_[107] * v_[87] + v_[106] * v_[77] - v_[86] * v_[90];
    v_[106] = v_[103] * v_[82] - v_[101] * v_[107];
    v_[108] = 4.027 + v_[108] - v_[89] * v_[90];
    v_[90] = v_[103] * v_[107] - v_[101] * v_[108];
    v_[109] = v_[106] * v_[103] - v_[90] * v_[101];
    v_[110] = 2. * v_[88] * v_[101] + v_[99] + v_[78] * v_[101] - v_[109];
    v_[111] = v_[92] * v_[105] + v_[74] * v_[110];
    v_[98] = 0.005495 + v_[80] + v_[84] + v_[83] - v_[98] - -0.000102 * -0.000102 / v_[79];
    v_[84] = v_[98] - 2. * v_[81] * v_[103] - v_[104] * v_[103] - v_[109];
    v_[105] = v_[92] * v_[84] + v_[74] * v_[105];
    v_[80] = 0.022734 + v_[111] * v_[93] + v_[105] * v_[74];
    v_[83] = v_[92] * v_[85] + v_[74] * v_[96];
    v_[112] = v_[92] * v_[91] + v_[74] * v_[94];
    v_[113] = v_[83] * v_[74] + v_[112] * v_[93];
    v_[105] = v_[105] * v_[92] + v_[111] * v_[74];
    v_[111] = 0.011033 + v_[109] + v_[105];
    v_[114] = v_[113] / v_[111];
    v_[115] = v_[95] * v_[93] + v_[97] * v_[74] - v_[80] * v_[114];
    v_[116] = -0.207 * v_[35];
    v_[117] = -1 * v_[116];
    v_[118] = sin(x_in[12]);
    v_[119] = 0 - v_[118];
    v_[120] = 0.3735 * v_[118];
    v_[121] = 0.3735 * v_[35];
    v_[122] = v_[119] * v_[120] + v_[24] * v_[121];
    v_[78] = v_[78] + v_[88];
    v_[123] = 0 - v_[78];
    v_[104] = v_[104] + v_[81];
    v_[124] = v_[74] * v_[123] + v_[93] * v_[104];
    v_[125] = 0.1466472 + v_[124];
    v_[126] = v_[125] / v_[111];
    v_[127] = 0 - v_[113] * v_[126];
    v_[128] = v_[122] * v_[127];
    v_[129] = v_[108] - 4.027;
    v_[130] = v_[92] * v_[107] + v_[74] * v_[129];
    v_[131] = v_[82] - 4.027;
    v_[132] = v_[92] * v_[131] + v_[74] * v_[107];
    v_[112] = v_[83] * v_[92] + v_[112] * v_[74];
    v_[83] = v_[112] / v_[111];
    v_[133] = v_[130] * v_[93] + v_[132] * v_[74] - v_[113] * v_[83];
    v_[134] = v_[117] * v_[133];
    v_[135] = v_[128] - v_[134];
    v_[123] = v_[92] * v_[123] + v_[74] * v_[104];
    v_[136] = 0.5824264 - v_[123] - v_[80] * v_[126];
    v_[137] = 0.207 * v_[118];
    v_[138] = 7.467 - v_[125] * v_[126];
    v_[139] = 0 - v_[125] * v_[83];
    v_[140] = v_[122] * v_[138] - v_[117] * v_[139];
    v_[141] = v_[115] * v_[117] + v_[135] * v_[117] - v_[136] * v_[137] - v_[140] * v_[137];
    v_[142] = v_[85] * v_[103] - v_[91] * v_[101];
    v_[103] = v_[96] * v_[103] - v_[94] * v_[101];
    v_[101] = 0 - v_[103];
    v_[143] = -5.1e-05 + v_[93] * v_[142] + v_[74] * v_[101];
    v_[126] = 0 - v_[143] * v_[126];
    v_[144] = v_[137] * v_[139];
    v_[128] = v_[144] - v_[128];
    v_[78] = -1 * (v_[90] + v_[78]);
    v_[104] = -1 * (v_[106] + v_[104]);
    v_[123] = -0.5824264 + v_[78] * v_[93] + v_[104] * v_[74] + v_[123] - v_[143] * v_[114];
    v_[132] = v_[132] * v_[92] + v_[130] * v_[74];
    v_[131] = 7.467 + v_[129] + v_[131] - v_[132] - v_[113] * v_[114];
    v_[129] = v_[137] * v_[133] - v_[122] * v_[131];
    v_[114] = v_[126] * v_[137] + v_[128] * v_[137] - v_[123] * v_[117] - v_[129] * v_[117];
    v_[130] = 0 - v_[24] * v_[141] - v_[119] * v_[114];
    v_[106] = cos(x_in[9]);
    v_[90] = cos(x_in[10]);
    v_[145] = cos(x_in[11]);
    v_[146] = 8.81e-05 * v_[145];
    v_[147] = sin(x_in[11]);
    v_[148] = 0 - v_[147];
    v_[149] = -8.81e-05 * v_[148];
    v_[150] = 0.35 * v_[147];
    v_[151] = -8.81e-05 * v_[150];
    v_[152] = 2. * v_[151];
    v_[153] = -0.35 * v_[145];
    v_[154] = 0 - 8.81e-05 * v_[153];
    v_[155] = 2. * v_[154];
    v_[151] = 0 - v_[151];
    v_[156] = 0.000102 + v_[152] * v_[148] + v_[155] * v_[145] - v_[145] * v_[154] - v_[147] * v_[151];
    v_[157] = 0.00185880198235362 * v_[150] - 0.414812462825713 * v_[153];
    v_[158] = 0.881 * v_[153];
    v_[159] = -0.1104774 + v_[158];
    v_[160] = v_[157] + v_[159];
    v_[161] = 0.880992588508842 * v_[150] - 0.00185880198235362 * v_[153];
    v_[162] = 0 - 0.881 * v_[150];
    v_[163] = 0.0004405 + v_[162];
    v_[164] = v_[161] + v_[163];
    v_[159] = 0 - v_[159];
    v_[165] = v_[145] * v_[159] + v_[148] * v_[163];
    v_[166] = 0.47422804 + v_[160] * v_[145] + v_[164] * v_[147] + v_[165];
    v_[161] = v_[161] * v_[150] - v_[157] * v_[153];
    v_[157] = 0.089871 + v_[161];
    v_[167] = v_[166] / v_[157];
    v_[168] = v_[146] * v_[145] + v_[149] * v_[147] - v_[156] * v_[167];
    v_[169] = sin(x_in[10]);
    v_[170] = 0 - v_[169];
    v_[171] = 8.81e-05 * v_[147];
    v_[172] = -8.81e-05 * v_[145];
    v_[151] = 2.1e-05 + v_[152] * v_[145] + v_[155] * v_[147] + v_[148] * v_[154] + v_[145] * v_[151];
    v_[155] = v_[171] * v_[145] + v_[172] * v_[147] - v_[151] * v_[167];
    v_[154] = v_[90] * v_[168] + v_[170] * v_[155];
    v_[159] = v_[147] * v_[159] + v_[145] * v_[163];
    v_[164] = 0.0825825 + v_[160] * v_[148] + v_[164] * v_[145] - v_[159];
    v_[160] = v_[164] / v_[157];
    v_[149] = v_[146] * v_[148] + v_[149] * v_[145] - v_[156] * v_[160];
    v_[172] = v_[171] * v_[148] + v_[172] * v_[145] - v_[151] * v_[160];
    v_[171] = v_[90] * v_[149] + v_[170] * v_[172];
    v_[146] = 0.0004405 * v_[153] + v_[162] * v_[153] - -0.1104774 * v_[150];
    v_[158] = 0.026409 + -0.2209548 * v_[153] + v_[158] * v_[153] - v_[161];
    v_[153] = v_[147] * v_[146] + v_[145] * v_[158];
    v_[162] = 0.000468 - 0.000881 * v_[150] - v_[162] * v_[150] - v_[161];
    v_[146] = v_[147] * v_[162] + v_[145] * v_[146];
    v_[163] = v_[151] / v_[157];
    v_[152] = 0.007418 + v_[153] * v_[148] + v_[146] * v_[145] - v_[156] * v_[163];
    v_[159] = -0.0825825 + v_[159];
    v_[173] = 0 - v_[90];
    v_[174] = 0.08 * v_[173];
    v_[175] = 0.08 * v_[169];
    v_[176] = 0 - 4.027 * v_[175];
    v_[165] = -0.47422804 - v_[165];
    v_[177] = v_[152] + v_[159] * v_[174] + v_[176] * v_[174] - v_[165] * v_[175];
    v_[146] = v_[146] * v_[147] + v_[153] * v_[145];
    v_[163] = 0.087136 + v_[161] + v_[146] - v_[151] * v_[163];
    v_[153] = 4.027 * v_[174];
    v_[178] = -7.4114911576828e-06 * v_[147] + 0.00185880198235362 * v_[145];
    v_[179] = 0.00185880198235362 * v_[147] + -0.466187537174287 * v_[145];
    v_[180] = v_[178] * v_[147] + v_[179] * v_[145];
    v_[160] = 3.56080505133456 - v_[180] - v_[164] * v_[160];
    v_[179] = v_[179] * v_[148] + v_[178] * v_[145] - v_[164] * v_[167];
    v_[178] = v_[175] * v_[160] - v_[174] * v_[179];
    v_[180] = 4.027 + v_[180] - v_[166] * v_[167];
    v_[167] = v_[175] * v_[179] - v_[174] * v_[180];
    v_[181] = v_[178] * v_[175] - v_[167] * v_[174];
    v_[182] = 2. * v_[165] * v_[174] + v_[163] + v_[153] * v_[174] - v_[181];
    v_[183] = v_[170] * v_[177] + v_[173] * v_[182];
    v_[146] = 0.005495 + v_[158] + v_[162] + v_[161] - v_[146] - v_[156] * v_[156] / v_[157];
    v_[162] = v_[146] - 2. * v_[159] * v_[175] - v_[176] * v_[175] - v_[181];
    v_[177] = v_[170] * v_[162] + v_[173] * v_[177];
    v_[158] = 0.022734 + v_[183] * v_[170] + v_[177] * v_[90];
    v_[161] = v_[170] * v_[149] + v_[173] * v_[172];
    v_[184] = v_[170] * v_[168] + v_[173] * v_[155];
    v_[185] = v_[161] * v_[90] + v_[184] * v_[170];
    v_[177] = v_[177] * v_[170] + v_[183] * v_[173];
    v_[183] = 0.011033 + v_[181] + v_[177];
    v_[186] = v_[185] / v_[183];
    v_[187] = v_[154] * v_[170] + v_[171] * v_[90] - v_[158] * v_[186];
    v_[188] = 0.207 * v_[106];
    v_[189] = sin(x_in[9]);
    v_[190] = -0.3735 * v_[189];
    v_[191] = 0 - v_[106];
    v_[192] = 0.3735 * v_[106];
    v_[193] = v_[189] * v_[190] + v_[191] * v_[192];
    v_[153] = v_[153] + v_[165];
    v_[194] = 0 - v_[153];
    v_[176] = v_[176] + v_[159];
    v_[195] = v_[90] * v_[194] + v_[170] * v_[176];
    v_[196] = 0.1466472 + v_[195];
    v_[197] = v_[196] / v_[183];
    v_[198] = 0 - v_[185] * v_[197];
    v_[199] = v_[193] * v_[198];
    v_[200] = v_[180] - 4.027;
    v_[201] = v_[170] * v_[179] + v_[173] * v_[200];
    v_[202] = v_[160] - 4.027;
    v_[203] = v_[170] * v_[202] + v_[173] * v_[179];
    v_[184] = v_[161] * v_[170] + v_[184] * v_[173];
    v_[161] = v_[184] / v_[183];
    v_[204] = v_[201] * v_[170] + v_[203] * v_[90] - v_[185] * v_[161];
    v_[205] = v_[188] * v_[204];
    v_[206] = v_[199] - v_[205];
    v_[194] = v_[170] * v_[194] + v_[173] * v_[176];
    v_[207] = 0.5824264 - v_[194] - v_[158] * v_[197];
    v_[208] = 0.207 * v_[189];
    v_[209] = 7.467 - v_[196] * v_[197];
    v_[210] = 0 - v_[196] * v_[161];
    v_[211] = v_[193] * v_[209] - v_[188] * v_[210];
    v_[212] = v_[187] * v_[188] + v_[206] * v_[188] - v_[207] * v_[208] - v_[211] * v_[208];
    v_[213] = v_[149] * v_[175] - v_[168] * v_[174];
    v_[174] = v_[172] * v_[175] - v_[155] * v_[174];
    v_[214] = 0 - v_[174];
    v_[215] = -5.1e-05 + v_[170] * v_[213] + v_[90] * v_[214];
    v_[197] = 0 - v_[215] * v_[197];
    v_[216] = v_[208] * v_[210];
    v_[199] = v_[216] - v_[199];
    v_[153] = v_[167] + v_[153];
    v_[176] = v_[178] + v_[176];
    v_[194] = -0.5824264 + v_[153] * v_[170] + v_[176] * v_[90] + v_[194] - v_[215] * v_[186];
    v_[203] = v_[203] * v_[170] + v_[201] * v_[173];
    v_[202] = 7.467 + v_[200] + v_[202] - v_[203] - v_[185] * v_[186];
    v_[200] = v_[208] * v_[204] - v_[193] * v_[202];
    v_[186] = v_[197] * v_[208] + v_[199] * v_[208] - v_[194] * v_[188] - v_[200] * v_[188];
    v_[201] = 0 - v_[106] * v_[212] - v_[189] * v_[186];
    v_[178] = cos(x_in[6]);
    v_[167] = 0 - v_[178];
    v_[217] = cos(x_in[7]);
    v_[218] = cos(x_in[8]);
    v_[219] = 8.81e-05 * v_[218];
    v_[220] = sin(x_in[8]);
    v_[221] = 0 - v_[220];
    v_[222] = -8.81e-05 * v_[221];
    v_[223] = 0.35 * v_[220];
    v_[224] = -8.81e-05 * v_[223];
    v_[225] = 2. * v_[224];
    v_[226] = -0.35 * v_[218];
    v_[227] = 0 - 8.81e-05 * v_[226];
    v_[228] = 2. * v_[227];
    v_[224] = 0 - v_[224];
    v_[229] = 0.000102 + v_[225] * v_[221] + v_[228] * v_[218] - v_[218] * v_[227] - v_[220] * v_[224];
    v_[230] = 0.00185880198235362 * v_[223] - 0.414812462825713 * v_[226];
    v_[231] = 0.881 * v_[226];
    v_[232] = -0.1104774 + v_[231];
    v_[233] = v_[230] + v_[232];
    v_[234] = 0.880992588508842 * v_[223] - 0.00185880198235362 * v_[226];
    v_[235] = 0 - 0.881 * v_[223];
    v_[236] = 0.0004405 + v_[235];
    v_[237] = v_[234] + v_[236];
    v_[232] = 0 - v_[232];
    v_[238] = v_[218] * v_[232] + v_[221] * v_[236];
    v_[239] = 0.47422804 + v_[233] * v_[218] + v_[237] * v_[220] + v_[238];
    v_[234] = v_[234] * v_[223] - v_[230] * v_[226];
    v_[230] = 0.089871 + v_[234];
    v_[240] = v_[239] / v_[230];
    v_[241] = v_[219] * v_[218] + v_[222] * v_[220] - v_[229] * v_[240];
    v_[242] = sin(x_in[7]);
    v_[243] = 0 - v_[242];
    v_[244] = 8.81e-05 * v_[220];
    v_[245] = -8.81e-05 * v_[218];
    v_[224] = 2.1e-05 + v_[225] * v_[218] + v_[228] * v_[220] + v_[221] * v_[227] + v_[218] * v_[224];
    v_[228] = v_[244] * v_[218] + v_[245] * v_[220] - v_[224] * v_[240];
    v_[227] = v_[217] * v_[241] + v_[243] * v_[228];
    v_[232] = v_[220] * v_[232] + v_[218] * v_[236];
    v_[237] = 0.0825825 + v_[233] * v_[221] + v_[237] * v_[218] - v_[232];
    v_[233] = v_[237] / v_[230];
    v_[222] = v_[219] * v_[221] + v_[222] * v_[218] - v_[229] * v_[233];
    v_[245] = v_[244] * v_[221] + v_[245] * v_[218] - v_[224] * v_[233];
    v_[244] = v_[217] * v_[222] + v_[243] * v_[245];
    v_[219] = 0.0004405 * v_[226] + v_[235] * v_[226] - -0.1104774 * v_[223];
    v_[231] = 0.026409 + -0.2209548 * v_[226] + v_[231] * v_[226] - v_[234];
    v_[226] = v_[220] * v_[219] + v_[218] * v_[231];
    v_[235] = 0.000468 - 0.000881 * v_[223] - v_[235] * v_[223] - v_[234];
    v_[219] = v_[220] * v_[235] + v_[218] * v_[219];
    v_[236] = v_[224] / v_[230];
    v_[225] = 0.007418 + v_[226] * v_[221] + v_[219] * v_[218] - v_[229] * v_[236];
    v_[232] = -0.0825825 + v_[232];
    v_[246] = -0.08 * v_[217];
    v_[247] = -0.08 * v_[242];
    v_[248] = -1 * v_[247];
    v_[249] = 0 - 4.027 * v_[248];
    v_[238] = -0.47422804 - v_[238];
    v_[250] = v_[225] + v_[232] * v_[246] + v_[249] * v_[246] - v_[238] * v_[248];
    v_[219] = v_[219] * v_[220] + v_[226] * v_[218];
    v_[236] = 0.087136 + v_[234] + v_[219] - v_[224] * v_[236];
    v_[226] = 4.027 * v_[246];
    v_[251] = -7.4114911576828e-06 * v_[220] + 0.00185880198235362 * v_[218];
    v_[252] = 0.00185880198235362 * v_[220] + -0.466187537174287 * v_[218];
    v_[253] = v_[251] * v_[220] + v_[252] * v_[218];
    v_[233] = 3.56080505133456 - v_[253] - v_[237] * v_[233];
    v_[252] = v_[252] * v_[221] + v_[251] * v_[218] - v_[237] * v_[240];
    v_[251] = v_[248] * v_[233] - v_[246] * v_[252];
    v_[253] = 4.027 + v_[253] - v_[239] * v_[240];
    v_[240] = v_[248] * v_[252] - v_[246] * v_[253];
    v_[254] = v_[251] * v_[248] - v_[240] * v_[246];
    v_[255] = 2. * v_[238] * v_[246] + v_[236] + v_[226] * v_[246] - v_[254];
    v_[256] = v_[242] * v_[250] + v_[217] * v_[255];
    v_[219] = 0.005495 + v_[231] + v_[235] + v_[234] - v_[219] - v_[229] * v_[229] / v_[230];
    v_[235] = v_[219] - 2. * v_[232] * v_[248] - v_[249] * v_[248] - v_[254];
    v_[250] = v_[242] * v_[235] + v_[217] * v_[250];
    v_[231] = -0.022734 + v_[256] * v_[243] + v_[250] * v_[217];
    v_[234] = v_[242] * v_[222] + v_[217] * v_[245];
    v_[257] = v_[242] * v_[241] + v_[217] * v_[228];
    v_[258] = v_[234] * v_[217] + v_[257] * v_[243];
    v_[250] = v_[250] * v_[242] + v_[256] * v_[217];
    v_[256] = 0.011033 + v_[254] + v_[250];
    v_[259] = v_[258] / v_[256];
    v_[260] = v_[227] * v_[243] + v_[244] * v_[217] - v_[231] * v_[259];
    v_[261] = -0.207 * v_[178];
    v_[262] = -1 * v_[261];
    v_[263] = sin(x_in[6]);
    v_[264] = 0 - v_[263];
    v_[265] = -0.3735 * v_[263];
    v_[266] = -0.3735 * v_[178];
    v_[267] = v_[264] * v_[265] + v_[167] * v_[266];
    v_[226] = v_[226] + v_[238];
    v_[268] = 0 - v_[226];
    v_[249] = v_[249] + v_[232];
    v_[269] = v_[217] * v_[268] + v_[243] * v_[249];
    v_[270] = 0.1466472 + v_[269];
    v_[271] = v_[270] / v_[256];
    v_[272] = 0 - v_[258] * v_[271];
    v_[273] = v_[267] * v_[272];
    v_[274] = v_[253] - 4.027;
    v_[275] = v_[242] * v_[252] + v_[217] * v_[274];
    v_[276] = v_[233] - 4.027;
    v_[277] = v_[242] * v_[276] + v_[217] * v_[252];
    v_[257] = v_[234] * v_[242] + v_[257] * v_[217];
    v_[234] = v_[257] / v_[256];
    v_[278] = v_[275] * v_[243] + v_[277] * v_[217] - v_[258] * v_[234];
    v_[279] = v_[262] * v_[278];
    v_[280] = v_[273] - v_[279];
    v_[268] = v_[242] * v_[268] + v_[217] * v_[249];
    v_[281] = -0.5824264 - v_[268] - v_[231] * v_[271];
    v_[282] = 0.207 * v_[263];
    v_[283] = 7.467 - v_[270] * v_[271];
    v_[284] = 0 - v_[270] * v_[234];
    v_[285] = v_[267] * v_[283] - v_[262] * v_[284];
    v_[286] = v_[260] * v_[262] + v_[280] * v_[262] - v_[281] * v_[282] - v_[285] * v_[282];
    v_[287] = v_[222] * v_[248] - v_[241] * v_[246];
    v_[248] = v_[245] * v_[248] - v_[228] * v_[246];
    v_[246] = 0 - v_[248];
    v_[288] = -5.1e-05 + v_[243] * v_[287] + v_[217] * v_[246];
    v_[271] = 0 - v_[288] * v_[271];
    v_[289] = v_[282] * v_[284];
    v_[273] = v_[289] - v_[273];
    v_[226] = -1 * (v_[240] + v_[226]);
    v_[249] = -1 * (v_[251] + v_[249]);
    v_[268] = 0.5824264 + v_[226] * v_[243] + v_[249] * v_[217] + v_[268] - v_[288] * v_[259];
    v_[277] = v_[277] * v_[242] + v_[275] * v_[217];
    v_[276] = 7.467 + v_[274] + v_[276] - v_[277] - v_[258] * v_[259];
    v_[274] = v_[282] * v_[278] - v_[267] * v_[276];
    v_[259] = v_[271] * v_[282] + v_[273] * v_[282] - v_[268] * v_[262] - v_[274] * v_[262];
    v_[275] = 0 - v_[167] * v_[286] - v_[264] * v_[259];
    v_[33] = -0.1466472 + v_[8] * v_[30] + v_[33] * v_[27] - v_[52] - v_[72] * v_[18];
    v_[8] = v_[72] / v_[40];
    v_[52] = 0.144171 + v_[38] - v_[72] * v_[8];
    v_[60] = 7.467 + v_[60] - v_[41] * v_[18];
    v_[251] = v_[65] * v_[60] - v_[50] * v_[61];
    v_[240] = v_[45] * v_[59] - v_[65] * v_[55];
    v_[290] = v_[45] * v_[55] - v_[65] * v_[66];
    v_[291] = v_[240] * v_[45] - v_[290] * v_[65];
    v_[292] = 2. * v_[33] * v_[65] + v_[52] + v_[251] * v_[65] - 2. * v_[51] * v_[50] - v_[57] * v_[50] - v_[291];
    v_[34] = 0.134705 + v_[39] + v_[19] + v_[38] - v_[34] - v_[15] * v_[15] / v_[40];
    v_[18] = v_[11] * v_[30] + v_[28] * v_[27] - v_[15] * v_[18];
    v_[28] = v_[50] * v_[67] - v_[45] * v_[60];
    v_[11] = 2. * v_[64] * v_[50] + v_[34] + v_[68] * v_[50] - 2. * v_[18] * v_[45] - v_[28] * v_[45] - v_[291];
    v_[104] = -0.1466472 + v_[78] * v_[74] + v_[104] * v_[92] - v_[124] - v_[143] * v_[83];
    v_[78] = v_[143] / v_[111];
    v_[124] = 0.144171 + v_[109] - v_[143] * v_[78];
    v_[132] = 7.467 + v_[132] - v_[112] * v_[83];
    v_[19] = v_[137] * v_[132] - v_[122] * v_[133];
    v_[39] = v_[117] * v_[131] - v_[137] * v_[127];
    v_[38] = v_[117] * v_[127] - v_[137] * v_[138];
    v_[293] = v_[39] * v_[117] - v_[38] * v_[137];
    v_[294] = 2. * v_[104] * v_[137] + v_[124] + v_[19] * v_[137] - 2. * v_[123] * v_[122] - v_[129] * v_[122] - v_[293];
    v_[105] = 0.134705 + v_[110] + v_[84] + v_[109] - v_[105] - v_[80] * v_[80] / v_[111];
    v_[83] = v_[95] * v_[74] + v_[97] * v_[92] - v_[80] * v_[83];
    v_[97] = v_[122] * v_[139] - v_[117] * v_[132];
    v_[95] = 2. * v_[136] * v_[122] + v_[105] + v_[140] * v_[122] - 2. * v_[83] * v_[117] - v_[97] * v_[117] - v_[293];
    v_[176] = -0.1466472 + v_[153] * v_[173] + v_[176] * v_[170] - v_[195] - v_[215] * v_[161];
    v_[153] = v_[215] / v_[183];
    v_[195] = 0.144171 + v_[181] - v_[215] * v_[153];
    v_[203] = 7.467 + v_[203] - v_[184] * v_[161];
    v_[84] = v_[208] * v_[203] - v_[193] * v_[204];
    v_[110] = v_[188] * v_[202] - v_[208] * v_[198];
    v_[109] = v_[188] * v_[198] - v_[208] * v_[209];
    v_[295] = v_[110] * v_[188] - v_[109] * v_[208];
    v_[296] = 2. * v_[176] * v_[208] + v_[195] + v_[84] * v_[208] - 2. * v_[194] * v_[193] - v_[200] * v_[193] - v_[295];
    v_[177] = 0.134705 + v_[182] + v_[162] + v_[181] - v_[177] - v_[158] * v_[158] / v_[183];
    v_[161] = v_[154] * v_[173] + v_[171] * v_[170] - v_[158] * v_[161];
    v_[171] = v_[193] * v_[210] - v_[188] * v_[203];
    v_[154] = 2. * v_[207] * v_[193] + v_[177] + v_[211] * v_[193] - 2. * v_[161] * v_[188] - v_[171] * v_[188] - v_[295];
    v_[249] = -0.1466472 + v_[226] * v_[217] + v_[249] * v_[242] - v_[269] - v_[288] * v_[234];
    v_[226] = v_[288] / v_[256];
    v_[269] = 0.144171 + v_[254] - v_[288] * v_[226];
    v_[277] = 7.467 + v_[277] - v_[257] * v_[234];
    v_[162] = v_[282] * v_[277] - v_[267] * v_[278];
    v_[182] = v_[262] * v_[276] - v_[282] * v_[272];
    v_[181] = v_[262] * v_[272] - v_[282] * v_[283];
    v_[297] = v_[182] * v_[262] - v_[181] * v_[282];
    v_[298] = 2. * v_[249] * v_[282] + v_[269] + v_[162] * v_[282] - 2. * v_[268] * v_[267] - v_[274] * v_[267] - v_[297];
    v_[250] = 0.134705 + v_[255] + v_[235] + v_[254] - v_[250] - v_[231] * v_[231] / v_[256];
    v_[234] = v_[227] * v_[217] + v_[244] * v_[242] - v_[231] * v_[234];
    v_[244] = v_[267] * v_[284] - v_[262] * v_[277];
    v_[227] = 2. * v_[281] * v_[267] + v_[250] + v_[285] * v_[267] - 2. * v_[234] * v_[262] - v_[244] * v_[262] - v_[297];
    v_[8] = -3.6e-05 + 2. * v_[31] * v_[27] + 2. * v_[70] * v_[3] + v_[30] * v_[70] + v_[27] * v_[71] - v_[15] * v_[8];
    v_[65] = v_[54] * v_[50] + v_[8] + v_[18] * v_[65] + v_[28] * v_[65] - v_[44] * v_[50] - v_[33] * v_[45] - v_[63] * v_[50];
    v_[50] = v_[46] * v_[65];
    v_[71] = (v_[46] * v_[11] + v_[10] * v_[65]) * v_[46] + (v_[50] + v_[10] * v_[292]) * v_[10];
    v_[50] = v_[48] * v_[11] + v_[50];
    v_[65] = v_[48] * v_[65] + v_[46] * v_[292];
    v_[31] = v_[50] * v_[48] + v_[65] * v_[46];
    v_[78] = 3.6e-05 + -1 * 2. * v_[103] * v_[93] + -1 * 2. * v_[142] * v_[74] + v_[74] * v_[142] + v_[92] * v_[101] - v_[80] * v_[78];
    v_[137] = v_[126] * v_[122] + v_[78] + v_[83] * v_[137] + v_[97] * v_[137] - v_[115] * v_[122] - v_[104] * v_[117] - v_[135] * v_[122];
    v_[122] = v_[24] * v_[137];
    v_[117] = (v_[119] * v_[95] + v_[122]) * v_[119] + (v_[119] * v_[137] + v_[24] * v_[294]) * v_[24];
    v_[137] = v_[24] * v_[95] + v_[118] * v_[137];
    v_[122] = v_[122] + v_[118] * v_[294];
    v_[101] = v_[137] * v_[24] + v_[122] * v_[118];
    v_[153] = 3.6e-05 + 2. * v_[174] * v_[170] + 2. * v_[213] * v_[90] + v_[173] * v_[213] + v_[170] * v_[214] - v_[158] * v_[153];
    v_[208] = v_[197] * v_[193] + v_[153] + v_[161] * v_[208] + v_[171] * v_[208] - v_[187] * v_[193] - v_[176] * v_[188] - v_[206] * v_[193];
    v_[193] = v_[189] * v_[208];
    v_[214] = (v_[189] * v_[154] + v_[106] * v_[208]) * v_[189] + (v_[193] + v_[106] * v_[296]) * v_[106];
    v_[193] = v_[191] * v_[154] + v_[193];
    v_[208] = v_[191] * v_[208] + v_[189] * v_[296];
    v_[174] = v_[193] * v_[191] + v_[208] * v_[189];
    v_[226] = -3.6e-05 + -1 * 2. * v_[248] * v_[243] + -1 * 2. * v_[287] * v_[217] + v_[217] * v_[287] + v_[242] * v_[246] - v_[231] * v_[226];
    v_[282] = v_[271] * v_[267] + v_[226] + v_[234] * v_[282] + v_[244] * v_[282] - v_[260] * v_[267] - v_[249] * v_[262] - v_[280] * v_[267];
    v_[267] = v_[167] * v_[282];
    v_[262] = (v_[264] * v_[227] + v_[267]) * v_[264] + (v_[264] * v_[282] + v_[167] * v_[298]) * v_[167];
    v_[282] = v_[167] * v_[227] + v_[263] * v_[282];
    v_[267] = v_[267] + v_[263] * v_[298];
    v_[246] = v_[282] * v_[167] + v_[267] * v_[263];
    v_[227] = 1.209488 + v_[292] + v_[11] + v_[291] + v_[294] + v_[95] + v_[293] + v_[296] + v_[154] + v_[295] + v_[298] + v_[227] + v_[297] - v_[71] - v_[31] - v_[117] - v_[101] - v_[214] - v_[174] - v_[262] - v_[246];
    v_[298] = (0.190812 + v_[58] + v_[130] + v_[201] + v_[275]) / v_[227];
    v_[154] = x_in[20] * x_in[21];
    v_[296] = x_in[18] * x_in[23];
    v_[95] = x_in[18] * x_in[19];
    v_[294] = x_in[18] * x_in[20];
    v_[11] = v_[10] * x_in[19] + v_[46] * x_in[20];
    v_[292] = 0.207 * x_in[20] + x_in[21];
    v_[248] = x_in[18] + x_in[33];
    v_[287] = -0.207 * v_[46];
    v_[213] = v_[47] * x_in[19] + v_[287] * x_in[18] + v_[49] * x_in[20] + v_[10] * x_in[22] + v_[46] * x_in[23];
    v_[103] = v_[11] * v_[292] - v_[248] * v_[213];
    v_[142] = v_[11] * v_[248];
    v_[70] = v_[248] * v_[248];
    v_[235] = v_[46] * x_in[19] + v_[48] * x_in[20];
    v_[255] = v_[235] * v_[235];
    v_[254] = v_[11] + x_in[34];
    v_[299] = -0.3735 * v_[10];
    v_[300] = -0.3735 * v_[46];
    v_[301] = 0 - v_[10];
    v_[302] = v_[299] * x_in[19] + v_[45] * x_in[18] + v_[300] * x_in[20] + v_[46] * x_in[22] + v_[301] * x_in[23];
    v_[303] = 0 - v_[26];
    v_[304] = v_[3] * v_[302] + v_[32] * v_[11] + v_[303] * v_[292];
    v_[305] = v_[254] * v_[304];
    v_[306] = v_[3] * v_[235] + v_[27] * v_[248];
    v_[307] = 0.08 * v_[248] + v_[213];
    v_[308] = v_[306] * v_[307];
    v_[309] = v_[27] * v_[235] + v_[30] * v_[248];
    v_[310] = v_[306] * v_[309];
    v_[311] = v_[306] * v_[254];
    v_[312] = v_[254] + x_in[35];
    v_[313] = 0 - v_[26];
    v_[314] = 0.08 * v_[3];
    v_[315] = 0 - v_[3];
    v_[316] = v_[313] * v_[302] + v_[314] * v_[11] + v_[315] * v_[292];
    v_[317] = v_[7] * v_[304] + v_[2] * v_[254] + v_[6] * v_[316];
    v_[318] = v_[312] * v_[317];
    v_[319] = v_[7] * v_[306] + v_[6] * v_[309];
    v_[320] = -0.35 * v_[309] + v_[307];
    v_[321] = v_[319] * v_[320];
    v_[322] = v_[5] * v_[306] + v_[7] * v_[309];
    v_[323] = v_[319] * v_[322];
    v_[324] = -0.33 * v_[3] * v_[6];
    v_[325] = -0.3735 + v_[324] - 0.33 * v_[26] * v_[7] - 0.35 * v_[26];
    v_[326] = 0.5 * x_in[0];
    v_[327] = cos(v_[326]);
    v_[328] = 0.5 * x_in[1];
    v_[329] = cos(v_[328]);
    v_[330] = v_[327] * v_[329];
    v_[331] = 0.5 * x_in[2];
    v_[332] = sin(v_[331]);
    v_[326] = sin(v_[326]);
    v_[328] = sin(v_[328]);
    v_[333] = v_[326] * v_[328];
    v_[331] = cos(v_[331]);
    v_[334] = v_[330] * v_[332] + v_[333] * v_[331];
    v_[335] = 2. * v_[334];
    v_[334] = v_[335] * v_[334];
    v_[326] = v_[326] * v_[329];
    v_[327] = v_[327] * v_[328];
    v_[336] = v_[326] * v_[331] + v_[327] * v_[332];
    v_[337] = 2. * v_[336];
    v_[338] = v_[337] * v_[336];
    v_[339] = 0.5 * x_in[0];
    v_[340] = cos(v_[339]);
    v_[341] = 0.5 * x_in[1];
    v_[342] = cos(v_[341]);
    v_[343] = v_[340] * v_[342];
    v_[344] = 0.5 * x_in[2];
    v_[345] = sin(v_[344]);
    v_[339] = sin(v_[339]);
    v_[341] = sin(v_[341]);
    v_[346] = v_[339] * v_[341];
    v_[344] = cos(v_[344]);
    v_[347] = v_[343] * v_[345] + v_[346] * v_[344];
    v_[348] = 2. * v_[347];
    v_[347] = v_[348] * v_[347];
    v_[339] = v_[339] * v_[342];
    v_[341] = v_[340] * v_[341];
    v_[340] = v_[339] * v_[344] + v_[341] * v_[345];
    v_[342] = 2. * v_[340];
    v_[349] = v_[342] * v_[340];
    v_[350] = -0.33 * v_[46];
    v_[351] = 0.33 * v_[46];
    v_[352] = 0.33 * v_[10];
    v_[324] = -0.3735 + v_[324] - 0.33 * v_[26] * v_[7] - 0.35 * v_[26];
    v_[353] = 0.33 * v_[10] * v_[26] * v_[6] - 0.33 * v_[10] * v_[3] * v_[7] - 0.35 * v_[10] * v_[3] - 0.08 * v_[10];
    v_[354] = (v_[350] * v_[3] * v_[6] - v_[351] * v_[26] * v_[7] - 0.35 * v_[46] * v_[26]) * x_in[34] + (v_[352] * v_[3] * v_[7] + -0.33 * v_[10] * v_[26] * v_[6] + 0.35 * v_[10] * v_[3] + 0.08 * v_[10]) * x_in[33] + (-0.33 * v_[46] * v_[3] * v_[6] - 0.33 * v_[46] * v_[26] * v_[7]) * x_in[35] + x_in[22] + x_in[20] * v_[324] - x_in[18] * v_[353];
    v_[341] = v_[341] * v_[344] - v_[339] * v_[345];
    v_[339] = 2. * v_[341];
    v_[355] = v_[339] * v_[340];
    v_[344] = v_[343] * v_[344] - v_[346] * v_[345];
    v_[346] = v_[348] * v_[344];
    v_[345] = -0.33 * v_[46];
    v_[343] = -0.207 + 0.33 * v_[46] * v_[3] * v_[7] + v_[345] * v_[26] * v_[6] + 0.35 * v_[46] * v_[3] + 0.08 * v_[46];
    v_[353] = (0.33 * v_[26] * v_[6] - 0.33 * v_[3] * v_[7]) * x_in[35] + (0.33 * v_[26] * v_[6] - 0.33 * v_[3] * v_[7] - 0.35 * v_[3]) * x_in[34] + x_in[21] + x_in[19] * v_[353] - x_in[20] * v_[343];
    v_[356] = v_[348] * v_[341];
    v_[342] = v_[342] * v_[344];
    v_[343] = (v_[352] * v_[26] * v_[7] + 0.33 * v_[10] * v_[3] * v_[6] + 0.35 * v_[10] * v_[26]) * x_in[34] + (v_[351] * v_[3] * v_[7] + v_[350] * v_[26] * v_[6] + 0.35 * v_[46] * v_[3] + 0.08 * v_[46]) * x_in[33] + (0.33 * v_[10] * v_[3] * v_[6] + 0.33 * v_[10] * v_[26] * v_[7]) * x_in[35] + x_in[23] + x_in[18] * v_[343] - x_in[19] * v_[324];
    v_[324] = 0.5 * x_in[0];
    v_[352] = cos(v_[324]);
    v_[351] = 0.5 * x_in[1];
    v_[350] = cos(v_[351]);
    v_[357] = v_[352] * v_[350];
    v_[358] = 0.5 * x_in[2];
    v_[359] = sin(v_[358]);
    v_[324] = sin(v_[324]);
    v_[351] = sin(v_[351]);
    v_[360] = v_[324] * v_[351];
    v_[358] = cos(v_[358]);
    v_[361] = 2. * (v_[357] * v_[359] + v_[360] * v_[358]);
    v_[351] = v_[352] * v_[351];
    v_[324] = v_[324] * v_[350];
    v_[350] = v_[351] * v_[358] - v_[324] * v_[359];
    v_[324] = v_[324] * v_[358] + v_[351] * v_[359];
    v_[351] = 2. * v_[324];
    v_[358] = v_[357] * v_[358] - v_[360] * v_[359];
    v_[360] = 2. * v_[350];
    v_[360] = (v_[361] * v_[350] + v_[351] * v_[358]) * (-0.207 + 0.33 * v_[46] * v_[3] * v_[7] + -0.33 * v_[46] * v_[26] * v_[6] + 0.35 * v_[46] * v_[3] + 0.08 * v_[46]) + (v_[361] * v_[324] - v_[360] * v_[358]) * (-0.3735 + -0.33 * v_[3] * v_[6] - 0.33 * v_[26] * v_[7] - 0.35 * v_[26]) + (1 - v_[360] * v_[350] - v_[351] * v_[324]) * (0.33 * v_[10] * v_[26] * v_[6] - 0.33 * v_[10] * v_[3] * v_[7] - 0.35 * v_[10] * v_[3] - 0.08 * v_[10]) + x_in[5];
    v_[358] = 1 / (1 + exp(100. * v_[360]));
    v_[351] = -1000. * ((1 - v_[347] - v_[349]) * v_[354] + (v_[355] + v_[346]) * v_[353] + (v_[356] - v_[342]) * v_[343]) * v_[358];
    v_[327] = v_[327] * v_[331] - v_[326] * v_[332];
    v_[326] = 2. * v_[327];
    v_[324] = v_[326] * v_[336];
    v_[333] = v_[330] * v_[331] - v_[333] * v_[332];
    v_[330] = v_[335] * v_[333];
    v_[341] = v_[339] * v_[341];
    v_[340] = v_[348] * v_[340];
    v_[344] = v_[339] * v_[344];
    v_[346] = -1000. * ((v_[355] - v_[346]) * v_[354] + (1 - v_[347] - v_[341]) * v_[353] + (v_[340] + v_[344]) * v_[343]) * v_[358];
    v_[355] = v_[335] * v_[327];
    v_[337] = v_[337] * v_[333];
    v_[344] = -1000. * ((v_[356] + v_[342]) * v_[354] + (v_[340] - v_[344]) * v_[353] + (1 - v_[341] - v_[349]) * v_[343]) * v_[358] + 5000. * exp(-100. * (v_[360] + 0.02));
    v_[340] = (1 - v_[334] - v_[338]) * v_[351] + (v_[324] - v_[330]) * v_[346] + (v_[355] + v_[337]) * v_[344];
    v_[345] = -0.207 + 0.33 * v_[46] * v_[3] * v_[7] + v_[345] * v_[26] * v_[6] + 0.35 * v_[46] * v_[3] + 0.08 * v_[46];
    v_[327] = v_[326] * v_[327];
    v_[336] = v_[335] * v_[336];
    v_[333] = v_[326] * v_[333];
    v_[330] = (v_[324] + v_[330]) * v_[351] + (1 - v_[334] - v_[327]) * v_[346] + (v_[336] - v_[333]) * v_[344];
    v_[324] = v_[325] * v_[340] - v_[345] * v_[330];
    v_[334] = 0.33 * v_[10] * v_[26] * v_[6] - 0.33 * v_[10] * v_[3] * v_[7] - 0.35 * v_[10] * v_[3] - 0.08 * v_[10];
    v_[333] = (v_[355] - v_[337]) * v_[351] + (v_[336] + v_[333]) * v_[346] + (1 - v_[327] - v_[338]) * v_[344];
    v_[325] = v_[334] * v_[330] - v_[325] * v_[333];
    v_[336] = 0 - v_[6];
    v_[327] = 0.35 * v_[7];
    v_[344] = v_[336] * v_[304] + v_[327] * v_[254] + v_[7] * v_[316];
    v_[320] = v_[322] * v_[320] - v_[312] * v_[344];
    v_[337] = 0.1104774 * (v_[318] - v_[321]) + 0.025941 * v_[323] - v_[46] * v_[324] - v_[10] * v_[325] - (0.08 + 0.35 * v_[3] - 0.207 * v_[46]) * v_[330] - (0.35 * v_[46] * v_[26] + 0.3735 * v_[46]) * v_[340] - (-0.35 * v_[10] * v_[26] - 0.3735 * v_[10]) * v_[333] - -0.0004405 * v_[320];
    v_[355] = x_in[47] - v_[337];
    v_[346] = v_[319] * v_[312];
    v_[351] = v_[344] * x_in[35];
    v_[338] = (0 - v_[319]) * x_in[35];
    v_[326] = (0 - v_[317]) * x_in[35];
    v_[335] = v_[46] * v_[26];
    v_[341] = v_[335] * v_[6];
    v_[358] = v_[26] * v_[7];
    v_[360] = v_[10] * v_[26];
    v_[343] = v_[10] * v_[3];
    v_[342] = v_[343] * v_[7];
    v_[356] = v_[312] * v_[312];
    v_[353] = v_[322] * v_[322];
    v_[354] = 0.881 * v_[320] + 8.81e-05 * v_[346] + -0.0004405 * v_[323] + 0.880992588508842 * v_[351] + 8.81e-05 * v_[338] + -0.00185880198235362 * v_[326] + (0.0004405 * v_[355]) / 0.026181 - (v_[46] * v_[3] * v_[7] - v_[341]) * v_[340] - ((0 - v_[3]) * v_[6] - v_[358]) * v_[330] - (v_[360] * v_[6] - v_[342]) * v_[333] - 0.1104774 * (v_[356] + v_[353]);
    v_[312] = v_[322] * v_[312];
    v_[349] = v_[322] * x_in[35];
    v_[335] = v_[335] * v_[7];
    v_[347] = v_[26] * v_[6] - v_[3] * v_[7];
    v_[343] = v_[343] * v_[6];
    v_[339] = v_[319] * v_[319];
    v_[356] = -0.881 * (v_[321] - v_[318]) + 0.1104774 * v_[323] + 8.81e-05 * v_[312] + -0.00185880198235362 * v_[351] + -8.81e-05 * v_[349] + 0.414812462825713 * v_[326] + (0.1104774 * v_[355]) / 0.026181 - ((0 - v_[46]) * v_[3] * v_[6] - v_[335]) * v_[340] - v_[347] * v_[330] - (v_[343] + v_[360] * v_[7]) * v_[333] - -0.0004405 * (v_[356] + v_[339]);
    v_[307] = v_[309] * v_[307] - v_[254] * v_[316];
    v_[360] = v_[309] * v_[254];
    v_[323] = v_[309] * v_[309];
    v_[348] = v_[306] * v_[306];
    v_[337] = 0.47422804 * (v_[305] - v_[308]) + 0.081641 * v_[310] + 2.1e-05 * v_[311] + (0.026181 * v_[355]) / 0.026181 + v_[337] + v_[2] * v_[354] + v_[327] * v_[356] - 0.0825825 * v_[307] - -0.000102 * v_[360] - -0.007418 * (v_[323] - v_[348]);
    v_[350] = x_in[46] - v_[337];
    v_[361] = (0 - v_[306]) * x_in[34];
    v_[359] = v_[309] * x_in[34];
    v_[357] = v_[316] * x_in[34];
    v_[352] = (0 - v_[304]) * x_in[34];
    v_[254] = v_[254] * v_[254];
    v_[307] = 3.146 * v_[307] + 0.0825825 * v_[310] + v_[336] * v_[356] + v_[7] * v_[354] + v_[29] * v_[361] + v_[1] * v_[359] + v_[17] * v_[357] + v_[36] * v_[352] + (v_[21] * v_[350]) / v_[14] - 0.47422804 * (v_[254] + v_[323]);
    v_[356] = -3.146 * (v_[308] - v_[305]) + 0.47422804 * v_[310] + v_[7] * v_[356] + v_[6] * v_[354] + v_[12] * v_[361] + v_[25] * v_[359] + v_[36] * v_[357] + v_[37] * v_[352] + (v_[23] * v_[350]) / v_[14] - 0.0825825 * (v_[254] + v_[348]);
    v_[354] = (0 - v_[235]) * x_in[33];
    v_[308] = v_[11] * x_in[33];
    v_[305] = v_[213] * x_in[33];
    v_[37] = (0 - v_[302]) * x_in[33];
    v_[36] = v_[235] * v_[11];
    v_[17] = v_[248] * v_[302];
    v_[292] = v_[235] * v_[292];
    v_[248] = v_[235] * v_[248];
    v_[334] = v_[345] * v_[333] - v_[334] * v_[340];
    v_[345] = v_[10] * v_[26];
    v_[362] = 0.207 * v_[10];
    v_[363] = 0.08 * v_[10];
    v_[344] = v_[319] * v_[344] - v_[322] * v_[317];
    v_[343] = 8.81e-05 * v_[320] + 8.81e-05 * v_[351] + 0.026409 * v_[338] - ((0 - v_[46]) * v_[3] * v_[6] - v_[335]) * v_[325] - v_[347] * v_[334] - (v_[343] + v_[345] * v_[7]) * v_[324] - (-0.207 * v_[10] * v_[3] * v_[6] - v_[362] * v_[26] * v_[7]) * v_[330] - ((0.3735 * v_[10] * v_[3] - v_[363] * v_[26]) * v_[6] + (0.08 * v_[10] * v_[3] + 0.3735 * v_[10] * v_[26] + 0.35 * v_[10]) * v_[7]) * v_[340] - (((0.207 - 0.08 * v_[46]) * v_[26] + 0.3735 * v_[46] * v_[3]) * v_[6] + ((0.08 * v_[46] - 0.207) * v_[3] + 0.3735 * v_[46] * v_[26] + 0.35 * v_[46]) * v_[7]) * v_[333] - 0.1104774 * v_[344] - 0.025713 * v_[346];
    v_[363] = -0.0004405 * v_[344] + 8.81e-05 * (v_[321] - v_[318]) + -0.000227999999999999 * v_[312] + -8.81e-05 * v_[326] + 0.000468 * v_[349] - (v_[46] * v_[3] * v_[7] - v_[341]) * v_[325] - ((0 - v_[3]) * v_[6] - v_[358]) * v_[334] - (v_[345] * v_[6] - v_[342]) * v_[324] - (0.207 * v_[10] * v_[3] * v_[7] - v_[362] * v_[26] * v_[6]) * v_[330] - ((v_[363] * v_[3] + 0.3735 * v_[10] * v_[26] + 0.35 * v_[10]) * v_[6] + (0.08 * v_[10] * v_[26] - 0.3735 * v_[10] * v_[3]) * v_[7]) * v_[340] - (((0.08 * v_[46] - 0.207) * v_[3] + 0.3735 * v_[46] * v_[26] + 0.35 * v_[46]) * v_[6] + ((0.08 * v_[46] - 0.207) * v_[26] - 0.3735 * v_[46] * v_[3]) * v_[7]) * v_[333];
    v_[344] = 0.881 * v_[344] + 0.1104774 * v_[346] + -0.0004405 * v_[312] + -0.1104774 * v_[338] + -0.0004405 * v_[349] - v_[46] * v_[333] - v_[10] * v_[340] - 8.81e-05 * (v_[353] + v_[339]);
    v_[316] = v_[306] * v_[316] - v_[309] * v_[304];
    v_[348] = -0.007418 * v_[360] + -0.000102 * (v_[254] - v_[348]) + v_[7] * v_[343] + v_[6] * v_[363] + -0.35 * v_[344] + v_[20] * v_[361] + v_[4] * v_[359] + v_[29] * v_[357] + v_[12] * v_[352] + (v_[0] * v_[350]) / v_[14] - 0.47422804 * v_[316] - 0.084376 * v_[311] - 2.1e-05 * v_[310];
    v_[363] = 0.002735 * v_[360] + 0.0825825 * v_[316] + -0.000102 * v_[310] + v_[5] * v_[343] + v_[7] * v_[363] + v_[4] * v_[361] + v_[9] * v_[359] + v_[1] * v_[357] + v_[25] * v_[352] + (v_[13] * v_[350]) / v_[14] - -0.007418 * v_[311] - 2.1e-05 * (v_[254] - v_[323]);
    v_[316] = 0.47422804 * v_[311] + 3.146 * v_[316] + 0.0825825 * v_[360] + v_[344] + v_[22] * v_[361] + v_[16] * v_[359];
    v_[344] = v_[11] * v_[11];
    v_[360] = 0.009466 * v_[36] + 0.1466472 * (v_[17] - v_[292]) + -5.1e-05 * v_[248] + v_[30] * v_[348] + v_[27] * v_[363] + 0.08 * v_[316] - -0.022734 * v_[142] - -3.6e-05 * (v_[344] - v_[255]);
    v_[311] = x_in[45] - v_[360];
    v_[302] = v_[235] * v_[213] - v_[11] * v_[302];
    v_[337] = 0.5824264 * v_[103] + -3.6e-05 * v_[142] + -0.022734 * (v_[70] - v_[255]) + (v_[14] * v_[350]) / v_[14] + v_[337] + v_[32] * v_[307] + v_[314] * v_[356] + v_[52] * v_[354] + v_[8] * v_[308] + v_[51] * v_[305] + v_[54] * v_[37] + (v_[72] * v_[311]) / v_[40] - 0.1466472 * v_[302] - -0.123672 * v_[248] - -5.1e-05 * v_[36];
    v_[363] = -0.133138 * v_[142] + 0.5824264 * (v_[292] - v_[17]) + -0.022734 * v_[36] + v_[27] * v_[348] + v_[3] * v_[363] + v_[8] * v_[354] + v_[34] * v_[308] + v_[44] * v_[305] + v_[64] * v_[37] + (v_[15] * v_[311]) / v_[40] - -3.6e-05 * v_[248] - -5.1e-05 * (v_[70] - v_[344]);
    v_[70] = 3.44 * v_[103] + 0.5824264 * v_[248] + v_[313] * v_[356] + v_[3] * v_[307] + v_[51] * v_[354] + v_[44] * v_[308] + v_[59] * v_[305] + v_[55] * v_[37] + (v_[42] * v_[311]) / v_[40] - 0.1466472 * (v_[70] + v_[344]);
    v_[316] = 0.1466472 * v_[36] + -3.44 * (v_[292] - v_[17]) + 0.5824264 * v_[142] + v_[316] + v_[54] * v_[354] + v_[64] * v_[308] + v_[55] * v_[305] + v_[66] * v_[37] + (v_[53] * v_[311]) / v_[40];
    v_[302] = 3.44 * v_[302] + 0.1466472 * v_[248] + v_[315] * v_[356] + v_[303] * v_[307] + v_[33] * v_[354] + v_[18] * v_[308] + v_[61] * v_[305] + v_[67] * v_[37] + (v_[41] * v_[311]) / v_[40] - 0.5824264 * (v_[344] + v_[255]);
    v_[344] = v_[24] * x_in[19] + v_[118] * x_in[20];
    v_[248] = 0.207 * x_in[20] + -1 * x_in[21];
    v_[356] = -1 * x_in[18] + x_in[30];
    v_[307] = 0.207 * v_[118];
    v_[255] = 0 - v_[35];
    v_[292] = v_[120] * x_in[19] + v_[307] * x_in[18] + v_[121] * x_in[20] + v_[255] * x_in[22] + v_[118] * x_in[23];
    v_[17] = v_[344] * v_[248] - v_[356] * v_[292];
    v_[36] = v_[344] * v_[356];
    v_[142] = v_[356] * v_[356];
    v_[103] = v_[119] * x_in[19] + v_[24] * x_in[20];
    v_[348] = v_[103] * v_[103];
    v_[8] = v_[93] * v_[103] + v_[74] * v_[356];
    v_[34] = -0.08 * v_[356] + -1 * v_[292];
    v_[52] = -1 * v_[344] + x_in[31];
    v_[235] = 0 - v_[92];
    v_[213] = -0.3735 * v_[35];
    v_[11] = 0.3735 * v_[118];
    v_[22] = 0 - v_[118];
    v_[16] = 0 - v_[35];
    v_[343] = v_[213] * x_in[19] + v_[116] * x_in[18] + v_[11] * x_in[20] + v_[22] * x_in[22] + v_[16] * x_in[23];
    v_[254] = -0.08 * v_[74];
    v_[323] = v_[235] * v_[343] + v_[254] * v_[344] + v_[74] * v_[248];
    v_[310] = v_[8] * v_[34] - v_[52] * v_[323];
    v_[9] = v_[74] * v_[103] + v_[92] * v_[356];
    v_[4] = v_[9] * v_[8];
    v_[1] = 0 - v_[75];
    v_[25] = v_[77] * v_[9] + v_[75] * v_[8];
    v_[5] = -0.35 * v_[8] + v_[34];
    v_[20] = v_[25] * v_[5];
    v_[29] = v_[52] + x_in[32];
    v_[12] = v_[74] * v_[343] + v_[102] * v_[344] + v_[92] * v_[248];
    v_[309] = v_[77] * v_[12] + v_[76] * v_[52] + v_[75] * v_[323];
    v_[306] = v_[29] * v_[309];
    v_[304] = v_[87] * v_[9] + v_[77] * v_[8];
    v_[339] = v_[25] * v_[304];
    v_[349] = (0 - v_[309]) * x_in[32];
    v_[312] = 0.35 * v_[77];
    v_[353] = v_[1] * v_[12] + v_[312] * v_[52] + v_[77] * v_[323];
    v_[338] = v_[353] * x_in[32];
    v_[346] = -0.33 * v_[74];
    v_[333] = cos(x_in[14]);
    v_[340] = -0.3735 + v_[346] * v_[75] - 0.33 * v_[92] * v_[333] - 0.35 * v_[92];
    v_[362] = 0.5 * x_in[0];
    v_[345] = cos(v_[362]);
    v_[334] = 0.5 * x_in[1];
    v_[342] = cos(v_[334]);
    v_[358] = v_[345] * v_[342];
    v_[341] = 0.5 * x_in[2];
    v_[325] = sin(v_[341]);
    v_[362] = sin(v_[362]);
    v_[334] = sin(v_[334]);
    v_[324] = v_[362] * v_[334];
    v_[341] = cos(v_[341]);
    v_[330] = v_[358] * v_[325] + v_[324] * v_[341];
    v_[321] = 2. * v_[330];
    v_[330] = v_[321] * v_[330];
    v_[362] = v_[362] * v_[342];
    v_[334] = v_[345] * v_[334];
    v_[345] = v_[362] * v_[341] + v_[334] * v_[325];
    v_[342] = 2. * v_[345];
    v_[318] = v_[342] * v_[345];
    v_[26] = 0.5 * x_in[0];
    v_[347] = cos(v_[26]);
    v_[335] = 0.5 * x_in[1];
    v_[320] = cos(v_[335]);
    v_[322] = v_[347] * v_[320];
    v_[319] = 0.5 * x_in[2];
    v_[317] = sin(v_[319]);
    v_[26] = sin(v_[26]);
    v_[335] = sin(v_[335]);
    v_[364] = v_[26] * v_[335];
    v_[319] = cos(v_[319]);
    v_[365] = v_[322] * v_[317] + v_[364] * v_[319];
    v_[366] = 2. * v_[365];
    v_[365] = v_[366] * v_[365];
    v_[26] = v_[26] * v_[320];
    v_[335] = v_[347] * v_[335];
    v_[347] = v_[26] * v_[319] + v_[335] * v_[317];
    v_[320] = 2. * v_[347];
    v_[367] = v_[320] * v_[347];
    v_[368] = 0.33 * v_[118];
    v_[369] = cos(x_in[14]);
    v_[370] = 0.33 * v_[35];
    v_[371] = 0.33 * v_[35];
    v_[372] = 0.33 * v_[92] * v_[369];
    v_[373] = -0.3735 + -0.33 * v_[74] * v_[75] - v_[372] - 0.35 * v_[92];
    v_[374] = 0.33 * v_[35] * v_[92] * v_[75] - 0.33 * v_[35] * v_[74] * v_[369] - 0.35 * v_[35] * v_[74] - 0.08 * v_[35];
    v_[375] = (v_[368] * v_[92] * v_[369] + 0.33 * v_[118] * v_[74] * v_[75] + 0.35 * v_[118] * v_[92]) * x_in[31] + (v_[370] * v_[92] * v_[75] - v_[371] * v_[74] * v_[369] - 0.35 * v_[35] * v_[74] - 0.08 * v_[35]) * x_in[30] + (0.33 * v_[118] * v_[74] * v_[75] + 0.33 * v_[118] * v_[92] * v_[369]) * x_in[32] + x_in[22] + x_in[20] * v_[373] - x_in[18] * v_[374];
    v_[335] = v_[335] * v_[319] - v_[26] * v_[317];
    v_[26] = 2. * v_[335];
    v_[376] = v_[26] * v_[347];
    v_[319] = v_[322] * v_[319] - v_[364] * v_[317];
    v_[364] = v_[366] * v_[319];
    v_[317] = 0.33 * v_[74] * v_[369];
    v_[322] = 0.33 * v_[118] * v_[74];
    v_[377] = 0.207 + 0.33 * v_[118] * v_[92] * v_[75] - v_[322] * v_[369] - 0.35 * v_[118] * v_[74] - 0.08 * v_[118];
    v_[317] = (0.33 * v_[92] * v_[75] - v_[317]) * x_in[32] + (0.33 * v_[92] * v_[75] - v_[317] - 0.35 * v_[74]) * x_in[31] + x_in[21] + x_in[19] * v_[374] - x_in[20] * v_[377];
    v_[374] = v_[366] * v_[335];
    v_[320] = v_[320] * v_[319];
    v_[377] = (v_[371] * v_[92] * v_[369] + v_[370] * v_[74] * v_[75] + 0.35 * v_[35] * v_[92]) * x_in[31] + (v_[368] * v_[74] * v_[369] + -0.33 * v_[118] * v_[92] * v_[75] + 0.35 * v_[118] * v_[74] + 0.08 * v_[118]) * x_in[30] + (0.33 * v_[35] * v_[74] * v_[75] + 0.33 * v_[35] * v_[92] * v_[369]) * x_in[32] + x_in[23] + x_in[18] * v_[377] - x_in[19] * v_[373];
    v_[373] = 0.5 * x_in[0];
    v_[371] = cos(v_[373]);
    v_[370] = 0.5 * x_in[1];
    v_[368] = cos(v_[370]);
    v_[378] = v_[371] * v_[368];
    v_[379] = 0.5 * x_in[2];
    v_[380] = sin(v_[379]);
    v_[373] = sin(v_[373]);
    v_[370] = sin(v_[370]);
    v_[381] = v_[373] * v_[370];
    v_[379] = cos(v_[379]);
    v_[382] = 2. * (v_[378] * v_[380] + v_[381] * v_[379]);
    v_[370] = v_[371] * v_[370];
    v_[368] = v_[373] * v_[368];
    v_[383] = v_[370] * v_[379] - v_[368] * v_[380];
    v_[368] = v_[368] * v_[379] + v_[370] * v_[380];
    v_[370] = 2. * v_[368];
    v_[379] = v_[378] * v_[379] - v_[381] * v_[380];
    v_[381] = 2. * v_[383];
    v_[381] = (v_[382] * v_[383] + v_[370] * v_[379]) * (0.207 + 0.33 * v_[118] * v_[92] * v_[75] - v_[322] * v_[369] - 0.35 * v_[118] * v_[74] - 0.08 * v_[118]) + (v_[382] * v_[368] - v_[381] * v_[379]) * (-0.3735 + v_[346] * v_[75] - v_[372] - 0.35 * v_[92]) + (1 - v_[381] * v_[383] - v_[370] * v_[368]) * (0.33 * v_[35] * v_[92] * v_[75] - 0.33 * v_[35] * v_[74] * v_[369] - 0.35 * v_[35] * v_[74] - 0.08 * v_[35]) + x_in[5];
    v_[379] = 1 / (1 + exp(100. * v_[381]));
    v_[370] = -1000. * ((1 - v_[365] - v_[367]) * v_[375] + (v_[376] + v_[364]) * v_[317] + (v_[374] - v_[320]) * v_[377]) * v_[379];
    v_[334] = v_[334] * v_[341] - v_[362] * v_[325];
    v_[362] = 2. * v_[334];
    v_[368] = v_[362] * v_[345];
    v_[341] = v_[358] * v_[341] - v_[324] * v_[325];
    v_[324] = v_[321] * v_[341];
    v_[335] = v_[26] * v_[335];
    v_[347] = v_[366] * v_[347];
    v_[319] = v_[26] * v_[319];
    v_[364] = -1000. * ((v_[376] - v_[364]) * v_[375] + (1 - v_[365] - v_[335]) * v_[317] + (v_[347] + v_[319]) * v_[377]) * v_[379];
    v_[376] = v_[321] * v_[334];
    v_[342] = v_[342] * v_[341];
    v_[319] = -1000. * ((v_[374] + v_[320]) * v_[375] + (v_[347] - v_[319]) * v_[317] + (1 - v_[335] - v_[367]) * v_[377]) * v_[379] + 5000. * exp(-100. * (v_[381] + 0.02));
    v_[347] = (1 - v_[330] - v_[318]) * v_[370] + (v_[368] - v_[324]) * v_[364] + (v_[376] + v_[342]) * v_[319];
    v_[335] = 0.207 + 0.33 * v_[118] * v_[92] * v_[75] - 0.33 * v_[118] * v_[74] * v_[333] - 0.35 * v_[118] * v_[74] - 0.08 * v_[118];
    v_[334] = v_[362] * v_[334];
    v_[345] = v_[321] * v_[345];
    v_[341] = v_[362] * v_[341];
    v_[324] = (v_[368] + v_[324]) * v_[370] + (1 - v_[330] - v_[334]) * v_[364] + (v_[345] - v_[341]) * v_[319];
    v_[368] = v_[340] * v_[347] - v_[335] * v_[324];
    v_[330] = 0.33 * v_[35] * v_[92] * v_[75] - 0.33 * v_[35] * v_[74] * v_[333] - 0.35 * v_[35] * v_[74] - 0.08 * v_[35];
    v_[341] = (v_[376] - v_[342]) * v_[370] + (v_[345] + v_[341]) * v_[364] + (1 - v_[334] - v_[318]) * v_[319];
    v_[340] = v_[330] * v_[324] - v_[340] * v_[341];
    v_[5] = v_[304] * v_[5] - v_[29] * v_[353];
    v_[345] = 0.110125 * (v_[306] - v_[20]) + 0.025941 * v_[339] - (0 - v_[118]) * v_[368] - v_[35] * v_[340] - (0.08 + 0.35 * v_[74] - 0.207 * v_[118]) * v_[324] - (-0.35 * v_[118] * v_[92] - 0.3735 * v_[118]) * v_[347] - (-0.35 * v_[35] * v_[92] - 0.3735 * v_[35]) * v_[341] - -0.000881 * v_[5];
    v_[334] = x_in[44] - v_[345];
    v_[319] = v_[118] * v_[92];
    v_[342] = v_[319] * v_[333];
    v_[376] = v_[92] * v_[75] - v_[74] * v_[333];
    v_[364] = v_[35] * v_[74];
    v_[370] = v_[364] * v_[75];
    v_[318] = v_[29] * v_[29];
    v_[306] = -0.881 * (v_[20] - v_[306]) + 0.110125 * v_[339] + 0.417781802643138 * v_[349] + -0.00370574557885489 * v_[338] + (0.110125 * v_[334]) / 0.026181 - (v_[118] * v_[74] * v_[75] + v_[342]) * v_[347] - v_[376] * v_[324] - (v_[370] + v_[35] * v_[92] * v_[333]) * v_[341] - -0.000881 * (v_[318] + v_[25] * v_[25]);
    v_[319] = v_[319] * v_[75];
    v_[20] = v_[92] * v_[333];
    v_[364] = v_[364] * v_[333];
    v_[318] = 0.881 * v_[5] + -0.000881 * v_[339] + -0.00370574557885489 * v_[349] + 0.880970354035369 * v_[338] + (0.000881 * v_[334]) / 0.026181 - (v_[319] - v_[118] * v_[74] * v_[333]) * v_[347] - ((0 - v_[74]) * v_[75] - v_[20]) * v_[324] - (v_[35] * v_[92] * v_[75] - v_[364]) * v_[341] - 0.110125 * (v_[318] + v_[304] * v_[304]);
    v_[5] = (0 - v_[9]) * x_in[31];
    v_[339] = v_[8] * x_in[31];
    v_[362] = v_[323] * x_in[31];
    v_[321] = (0 - v_[12]) * x_in[31];
    v_[379] = v_[52] * v_[12];
    v_[34] = v_[9] * v_[34];
    v_[381] = v_[9] * v_[52];
    v_[377] = v_[8] * v_[52];
    v_[320] = v_[8] * v_[8];
    v_[374] = v_[9] * v_[9];
    v_[345] = 0.47422804 * (v_[379] - v_[34]) + 0.081641 * v_[4] + 2.1e-05 * v_[381] + (0.026181 * v_[334]) / 0.026181 + v_[345] + v_[76] * v_[318] + v_[312] * v_[306] - 0.0825825 * v_[310] - -0.000102 * v_[377] - -0.007418 * (v_[320] - v_[374]);
    v_[317] = x_in[43] - v_[345];
    v_[52] = v_[52] * v_[52];
    v_[310] = 3.146 * v_[310] + 0.0825825 * v_[4] + v_[1] * v_[306] + v_[77] * v_[318] + v_[96] * v_[5] + v_[85] * v_[339] + v_[82] * v_[362] + v_[107] * v_[321] + (v_[86] * v_[317]) / v_[79] - 0.47422804 * (v_[52] + v_[320]);
    v_[34] = -3.146 * (v_[34] - v_[379]) + 0.47422804 * v_[4] + v_[77] * v_[306] + v_[75] * v_[318] + v_[94] * v_[5] + v_[91] * v_[339] + v_[107] * v_[362] + v_[108] * v_[321] + (v_[89] * v_[317]) / v_[79] - 0.0825825 * (v_[52] + v_[374]);
    v_[379] = (0 - v_[103]) * x_in[30];
    v_[318] = v_[344] * x_in[30];
    v_[306] = v_[292] * x_in[30];
    v_[108] = (0 - v_[343]) * x_in[30];
    v_[107] = v_[103] * v_[344];
    v_[82] = v_[356] * v_[343];
    v_[248] = v_[103] * v_[248];
    v_[356] = v_[103] * v_[356];
    v_[375] = (0 - v_[25]) * x_in[32];
    v_[330] = v_[335] * v_[341] - v_[330] * v_[347];
    v_[335] = 0.207 * v_[35];
    v_[367] = 0.08 * v_[35];
    v_[353] = v_[25] * v_[353] - v_[304] * v_[309];
    v_[25] = v_[25] * v_[29];
    v_[370] = 0.026409 * v_[375] - (v_[118] * v_[74] * v_[75] + v_[342]) * v_[340] - v_[376] * v_[330] - (v_[370] + v_[35] * v_[92] * v_[333]) * v_[368] - (0.207 * v_[35] * v_[74] * v_[75] + v_[335] * v_[92] * v_[333]) * v_[324] - ((0.3735 * v_[35] * v_[74] - v_[367] * v_[92]) * v_[75] + (0.08 * v_[35] * v_[74] + 0.3735 * v_[35] * v_[92] + 0.35 * v_[35]) * v_[333]) * v_[347] - (((0.08 * v_[118] - 0.207) * v_[92] - 0.3735 * v_[118] * v_[74]) * v_[75] + ((0.207 - 0.08 * v_[118]) * v_[74] + -0.3735 * v_[118] * v_[92] - 0.35 * v_[118]) * v_[333]) * v_[341] - 0.110125 * v_[353] - 0.025713 * v_[25];
    v_[29] = v_[304] * v_[29];
    v_[304] = v_[304] * x_in[32];
    v_[367] = -0.000227999999999999 * v_[29] + -0.000881 * v_[353] + 0.000468 * v_[304] - (v_[319] - v_[118] * v_[74] * v_[333]) * v_[340] - ((0 - v_[74]) * v_[75] - v_[20]) * v_[330] - (v_[35] * v_[92] * v_[75] - v_[364]) * v_[368] - (0.207 * v_[35] * v_[92] * v_[75] - v_[335] * v_[74] * v_[333]) * v_[324] - ((v_[367] * v_[74] + 0.3735 * v_[35] * v_[92] + 0.35 * v_[35]) * v_[75] + (0.08 * v_[35] * v_[92] - 0.3735 * v_[35] * v_[74]) * v_[333]) * v_[347] - (((0.207 - 0.08 * v_[118]) * v_[74] + -0.3735 * v_[118] * v_[92] - 0.35 * v_[118]) * v_[75] + ((0.207 - 0.08 * v_[118]) * v_[92] + 0.3735 * v_[118] * v_[74]) * v_[333]) * v_[341];
    v_[304] = 0.110125 * v_[25] + 0.881 * v_[353] + -0.000881 * v_[29] + -0.110125 * v_[375] + -0.000881 * v_[304] - (0 - v_[118]) * v_[341] - v_[35] * v_[347];
    v_[12] = v_[9] * v_[323] - v_[8] * v_[12];
    v_[374] = -0.007418 * v_[377] + -0.000102 * (v_[52] - v_[374]) + v_[77] * v_[370] + v_[75] * v_[367] + -0.35 * v_[304] + v_[99] * v_[5] + v_[100] * v_[339] + v_[96] * v_[362] + v_[94] * v_[321] + (2.1e-05 * v_[317]) / v_[79] - 0.47422804 * v_[12] - 0.084376 * v_[381] - 2.1e-05 * v_[4];
    v_[367] = 0.002735 * v_[377] + 0.0825825 * v_[12] + -0.000102 * v_[4] + v_[87] * v_[370] + v_[77] * v_[367] + v_[100] * v_[5] + v_[98] * v_[339] + v_[85] * v_[362] + v_[91] * v_[321] + (-0.000102 * v_[317]) / v_[79] - -0.007418 * v_[381] - 2.1e-05 * (v_[52] - v_[320]);
    v_[12] = 0.47422804 * v_[381] + 3.146 * v_[12] + 0.0825825 * v_[377] + v_[304] + v_[88] * v_[5] + v_[81] * v_[339];
    v_[304] = v_[344] * v_[344];
    v_[377] = 0.009466 * v_[107] + 0.1466472 * (v_[82] - v_[248]) + -5.1e-05 * v_[356] + v_[74] * v_[374] + v_[92] * v_[367] + -0.08 * v_[12] - 0.022734 * v_[36] - 3.6e-05 * (v_[304] - v_[348]);
    v_[381] = x_in[42] - v_[377];
    v_[343] = v_[103] * v_[292] - v_[344] * v_[343];
    v_[345] = -0.5824264 * v_[17] + 3.6e-05 * v_[36] + 0.022734 * (v_[142] - v_[348]) + v_[102] * v_[310] + -1 * (v_[345] + (v_[79] * v_[317]) / v_[79]) + v_[254] * v_[34] + v_[124] * v_[379] + v_[78] * v_[318] + v_[123] * v_[306] + v_[126] * v_[108] + (v_[143] * v_[381]) / v_[111] - 0.1466472 * v_[343] - -0.123672 * v_[356] - -5.1e-05 * v_[107];
    v_[367] = -0.133138 * v_[36] + -0.5824264 * (v_[248] - v_[82]) + 0.022734 * v_[107] + v_[93] * v_[374] + v_[74] * v_[367] + v_[78] * v_[379] + v_[105] * v_[318] + v_[115] * v_[306] + v_[136] * v_[108] + (v_[80] * v_[381]) / v_[111] - 3.6e-05 * v_[356] - -5.1e-05 * (v_[142] - v_[304]);
    v_[142] = 3.44 * v_[17] + -0.5824264 * v_[356] + v_[235] * v_[34] + v_[74] * v_[310] + v_[123] * v_[379] + v_[115] * v_[318] + v_[131] * v_[306] + v_[127] * v_[108] + (v_[113] * v_[381]) / v_[111] - 0.1466472 * (v_[142] + v_[304]);
    v_[12] = 0.1466472 * v_[107] + -3.44 * (v_[248] - v_[82]) + -0.5824264 * v_[36] + -1 * v_[12] + v_[126] * v_[379] + v_[136] * v_[318] + v_[127] * v_[306] + v_[138] * v_[108] + (v_[125] * v_[381]) / v_[111];
    v_[343] = 3.44 * v_[343] + 0.1466472 * v_[356] + v_[74] * v_[34] + v_[92] * v_[310] + v_[104] * v_[379] + v_[83] * v_[318] + v_[133] * v_[306] + v_[139] * v_[108] + (v_[112] * v_[381]) / v_[111] - -0.5824264 * (v_[304] + v_[348]);
    v_[304] = v_[106] * x_in[19] + v_[189] * x_in[20];
    v_[356] = 0.207 * x_in[20] + x_in[21];
    v_[34] = x_in[18] + x_in[27];
    v_[310] = -0.207 * v_[189];
    v_[348] = v_[190] * x_in[19] + v_[310] * x_in[18] + v_[192] * x_in[20] + v_[106] * x_in[22] + v_[189] * x_in[23];
    v_[248] = v_[304] * v_[356] - v_[34] * v_[348];
    v_[82] = v_[304] * v_[34];
    v_[107] = v_[34] * v_[34];
    v_[36] = v_[189] * x_in[19] + v_[191] * x_in[20];
    v_[17] = v_[36] * v_[36];
    v_[374] = v_[304] + x_in[28];
    v_[78] = 0.3735 * v_[106];
    v_[105] = 0.3735 * v_[189];
    v_[124] = 0 - v_[106];
    v_[103] = v_[78] * x_in[19] + v_[188] * x_in[18] + v_[105] * x_in[20] + v_[189] * x_in[22] + v_[124] * x_in[23];
    v_[292] = 0 - v_[169];
    v_[344] = v_[90] * v_[103] + v_[175] * v_[304] + v_[292] * v_[356];
    v_[88] = v_[374] * v_[344];
    v_[81] = v_[90] * v_[36] + v_[170] * v_[34];
    v_[370] = 0.08 * v_[34] + v_[348];
    v_[52] = v_[81] * v_[370];
    v_[320] = v_[170] * v_[36] + v_[173] * v_[34];
    v_[4] = v_[81] * v_[320];
    v_[98] = v_[81] * v_[374];
    v_[100] = v_[374] + x_in[29];
    v_[85] = 0 - v_[169];
    v_[91] = 0.08 * v_[90];
    v_[87] = 0 - v_[90];
    v_[99] = v_[85] * v_[103] + v_[91] * v_[304] + v_[87] * v_[356];
    v_[96] = v_[145] * v_[344] + v_[150] * v_[374] + v_[147] * v_[99];
    v_[94] = v_[100] * v_[96];
    v_[9] = v_[145] * v_[81] + v_[147] * v_[320];
    v_[323] = -0.35 * v_[320] + v_[370];
    v_[8] = v_[9] * v_[323];
    v_[29] = v_[148] * v_[81] + v_[145] * v_[320];
    v_[25] = v_[9] * v_[29];
    v_[353] = 0.3735 + -0.33 * v_[90] * v_[147] - 0.33 * v_[169] * v_[145] - 0.35 * v_[169];
    v_[375] = 0.5 * x_in[0];
    v_[341] = cos(v_[375]);
    v_[347] = 0.5 * x_in[1];
    v_[35] = cos(v_[347]);
    v_[335] = v_[341] * v_[35];
    v_[330] = 0.5 * x_in[2];
    v_[364] = sin(v_[330]);
    v_[375] = sin(v_[375]);
    v_[347] = sin(v_[347]);
    v_[20] = v_[375] * v_[347];
    v_[330] = cos(v_[330]);
    v_[319] = v_[335] * v_[364] + v_[20] * v_[330];
    v_[340] = 2. * v_[319];
    v_[319] = v_[340] * v_[319];
    v_[375] = v_[375] * v_[35];
    v_[347] = v_[341] * v_[347];
    v_[341] = v_[375] * v_[330] + v_[347] * v_[364];
    v_[35] = 2. * v_[341];
    v_[368] = v_[35] * v_[341];
    v_[324] = 0.5 * x_in[0];
    v_[333] = cos(v_[324]);
    v_[376] = 0.5 * x_in[1];
    v_[342] = cos(v_[376]);
    v_[309] = v_[333] * v_[342];
    v_[365] = 0.5 * x_in[2];
    v_[26] = sin(v_[365]);
    v_[324] = sin(v_[324]);
    v_[376] = sin(v_[376]);
    v_[366] = v_[324] * v_[376];
    v_[365] = cos(v_[365]);
    v_[325] = v_[309] * v_[26] + v_[366] * v_[365];
    v_[358] = 2. * v_[325];
    v_[325] = v_[358] * v_[325];
    v_[324] = v_[324] * v_[342];
    v_[376] = v_[333] * v_[376];
    v_[333] = v_[324] * v_[365] + v_[376] * v_[26];
    v_[342] = 2. * v_[333];
    v_[383] = v_[342] * v_[333];
    v_[382] = -0.33 * v_[189];
    v_[322] = 0.33 * v_[189];
    v_[372] = 0.33 * v_[106];
    v_[369] = 0.33 * v_[169] * v_[145];
    v_[346] = 0.3735 + -0.33 * v_[90] * v_[147] - v_[369] - 0.35 * v_[169];
    v_[380] = 0.33 * v_[106] * v_[169] * v_[147] - 0.33 * v_[106] * v_[90] * v_[145] - 0.35 * v_[106] * v_[90] - 0.08 * v_[106];
    v_[378] = (v_[382] * v_[90] * v_[147] - v_[322] * v_[169] * v_[145] - 0.35 * v_[189] * v_[169]) * x_in[28] + (v_[372] * v_[90] * v_[145] + -0.33 * v_[106] * v_[169] * v_[147] + 0.35 * v_[106] * v_[90] + 0.08 * v_[106]) * x_in[27] + (-0.33 * v_[189] * v_[90] * v_[147] - 0.33 * v_[189] * v_[169] * v_[145]) * x_in[29] + x_in[22] + x_in[20] * v_[346] - x_in[18] * v_[380];
    v_[376] = v_[376] * v_[365] - v_[324] * v_[26];
    v_[324] = 2. * v_[376];
    v_[384] = v_[324] * v_[333];
    v_[365] = v_[309] * v_[365] - v_[366] * v_[26];
    v_[366] = v_[358] * v_[365];
    v_[26] = 0.33 * v_[189] * v_[90];
    v_[309] = -0.33 * v_[189] * v_[169] * v_[147];
    v_[385] = -0.207 + v_[26] * v_[145] + v_[309] + 0.35 * v_[189] * v_[90] + 0.08 * v_[189];
    v_[380] = (0.33 * v_[169] * v_[147] - 0.33 * v_[90] * v_[145]) * x_in[29] + (0.33 * v_[169] * v_[147] - 0.33 * v_[90] * v_[145] - 0.35 * v_[90]) * x_in[28] + x_in[21] + x_in[19] * v_[380] - x_in[20] * v_[385];
    v_[386] = v_[358] * v_[376];
    v_[342] = v_[342] * v_[365];
    v_[385] = (v_[372] * v_[169] * v_[145] + 0.33 * v_[106] * v_[90] * v_[147] + 0.35 * v_[106] * v_[169]) * x_in[28] + (v_[322] * v_[90] * v_[145] + v_[382] * v_[169] * v_[147] + 0.35 * v_[189] * v_[90] + 0.08 * v_[189]) * x_in[27] + (0.33 * v_[106] * v_[90] * v_[147] + 0.33 * v_[106] * v_[169] * v_[145]) * x_in[29] + x_in[23] + x_in[18] * v_[385] - x_in[19] * v_[346];
    v_[346] = 0.5 * x_in[0];
    v_[372] = cos(v_[346]);
    v_[322] = 0.5 * x_in[1];
    v_[382] = cos(v_[322]);
    v_[387] = v_[372] * v_[382];
    v_[388] = 0.5 * x_in[2];
    v_[389] = sin(v_[388]);
    v_[346] = sin(v_[346]);
    v_[322] = sin(v_[322]);
    v_[390] = v_[346] * v_[322];
    v_[388] = cos(v_[388]);
    v_[391] = 2. * (v_[387] * v_[389] + v_[390] * v_[388]);
    v_[322] = v_[372] * v_[322];
    v_[346] = v_[346] * v_[382];
    v_[382] = v_[322] * v_[388] - v_[346] * v_[389];
    v_[346] = v_[346] * v_[388] + v_[322] * v_[389];
    v_[322] = 2. * v_[346];
    v_[388] = v_[387] * v_[388] - v_[390] * v_[389];
    v_[390] = 2. * v_[382];
    v_[390] = (v_[391] * v_[382] + v_[322] * v_[388]) * (-0.207 + v_[26] * v_[145] + v_[309] + 0.35 * v_[189] * v_[90] + 0.08 * v_[189]) + (v_[391] * v_[346] - v_[390] * v_[388]) * (0.3735 + -0.33 * v_[90] * v_[147] - v_[369] - 0.35 * v_[169]) + (1 - v_[390] * v_[382] - v_[322] * v_[346]) * (0.33 * v_[106] * v_[169] * v_[147] - 0.33 * v_[106] * v_[90] * v_[145] - 0.35 * v_[106] * v_[90] - 0.08 * v_[106]) + x_in[5];
    v_[388] = 1 / (1 + exp(100. * v_[390]));
    v_[322] = -1000. * ((1 - v_[325] - v_[383]) * v_[378] + (v_[384] + v_[366]) * v_[380] + (v_[386] - v_[342]) * v_[385]) * v_[388];
    v_[347] = v_[347] * v_[330] - v_[375] * v_[364];
    v_[375] = 2. * v_[347];
    v_[346] = v_[375] * v_[341];
    v_[330] = v_[335] * v_[330] - v_[20] * v_[364];
    v_[20] = v_[340] * v_[330];
    v_[376] = v_[324] * v_[376];
    v_[333] = v_[358] * v_[333];
    v_[365] = v_[324] * v_[365];
    v_[366] = -1000. * ((v_[384] - v_[366]) * v_[378] + (1 - v_[325] - v_[376]) * v_[380] + (v_[333] + v_[365]) * v_[385]) * v_[388];
    v_[384] = v_[340] * v_[347];
    v_[35] = v_[35] * v_[330];
    v_[365] = -1000. * ((v_[386] + v_[342]) * v_[378] + (v_[333] - v_[365]) * v_[380] + (1 - v_[376] - v_[383]) * v_[385]) * v_[388] + 5000. * exp(-100. * (v_[390] + 0.02));
    v_[333] = (1 - v_[319] - v_[368]) * v_[322] + (v_[346] - v_[20]) * v_[366] + (v_[384] + v_[35]) * v_[365];
    v_[376] = -0.207 + 0.33 * v_[189] * v_[90] * v_[145] + -0.33 * v_[189] * v_[169] * v_[147] + 0.35 * v_[189] * v_[90] + 0.08 * v_[189];
    v_[347] = v_[375] * v_[347];
    v_[341] = v_[340] * v_[341];
    v_[330] = v_[375] * v_[330];
    v_[20] = (v_[346] + v_[20]) * v_[322] + (1 - v_[319] - v_[347]) * v_[366] + (v_[341] - v_[330]) * v_[365];
    v_[346] = v_[353] * v_[333] - v_[376] * v_[20];
    v_[319] = 0.33 * v_[106] * v_[169] * v_[147] - 0.33 * v_[106] * v_[90] * v_[145] - 0.35 * v_[106] * v_[90] - 0.08 * v_[106];
    v_[330] = (v_[384] - v_[35]) * v_[322] + (v_[341] + v_[330]) * v_[366] + (1 - v_[347] - v_[368]) * v_[365];
    v_[353] = v_[319] * v_[20] - v_[353] * v_[330];
    v_[341] = 0 - v_[147];
    v_[347] = 0.35 * v_[145];
    v_[365] = v_[341] * v_[344] + v_[347] * v_[374] + v_[145] * v_[99];
    v_[323] = v_[29] * v_[323] - v_[100] * v_[365];
    v_[35] = 0.1104774 * (v_[94] - v_[8]) + 0.025941 * v_[25] - v_[189] * v_[346] - v_[106] * v_[353] - (0.08 + 0.35 * v_[90] - 0.207 * v_[189]) * v_[20] - (0.35 * v_[189] * v_[169] - 0.3735 * v_[189]) * v_[333] - (0.3735 * v_[106] - 0.35 * v_[106] * v_[169]) * v_[330] - 0.0004405 * v_[323];
    v_[384] = x_in[41] - v_[35];
    v_[366] = v_[9] * v_[100];
    v_[322] = v_[365] * x_in[29];
    v_[368] = (0 - v_[9]) * x_in[29];
    v_[375] = (0 - v_[96]) * x_in[29];
    v_[340] = v_[189] * v_[169];
    v_[388] = v_[340] * v_[147];
    v_[390] = v_[169] * v_[145];
    v_[385] = v_[106] * v_[169];
    v_[342] = v_[106] * v_[90];
    v_[386] = v_[342] * v_[145];
    v_[380] = v_[100] * v_[100];
    v_[378] = v_[29] * v_[29];
    v_[383] = 0.881 * v_[323] + -8.81e-05 * v_[366] + 0.0004405 * v_[25] + 0.880992588508842 * v_[322] + -8.81e-05 * v_[368] + 0.00185880198235362 * v_[375] + (-0.0004405 * v_[384]) / 0.026181 - (v_[189] * v_[90] * v_[145] - v_[388]) * v_[333] - ((0 - v_[90]) * v_[147] - v_[390]) * v_[20] - (v_[385] * v_[147] - v_[386]) * v_[330] - 0.1104774 * (v_[380] + v_[378]);
    v_[100] = v_[29] * v_[100];
    v_[325] = v_[29] * x_in[29];
    v_[340] = v_[340] * v_[145];
    v_[324] = v_[169] * v_[147] - v_[90] * v_[145];
    v_[342] = v_[342] * v_[147];
    v_[358] = v_[9] * v_[9];
    v_[380] = -0.881 * (v_[8] - v_[94]) + 0.1104774 * v_[25] + -8.81e-05 * v_[100] + 0.00185880198235362 * v_[322] + 8.81e-05 * v_[325] + 0.414812462825713 * v_[375] + (0.1104774 * v_[384]) / 0.026181 - ((0 - v_[189]) * v_[90] * v_[147] - v_[340]) * v_[333] - v_[324] * v_[20] - (v_[342] + v_[385] * v_[145]) * v_[330] - 0.0004405 * (v_[380] + v_[358]);
    v_[370] = v_[320] * v_[370] - v_[374] * v_[99];
    v_[385] = v_[320] * v_[374];
    v_[25] = v_[320] * v_[320];
    v_[364] = v_[81] * v_[81];
    v_[35] = 0.47422804 * (v_[88] - v_[52]) + 0.081641 * v_[4] + 2.1e-05 * v_[98] + (0.026181 * v_[384]) / 0.026181 + v_[35] + v_[150] * v_[383] + v_[347] * v_[380] - -0.0825825 * v_[370] - 0.000102 * v_[385] - 0.007418 * (v_[25] - v_[364]);
    v_[335] = x_in[40] - v_[35];
    v_[382] = (0 - v_[81]) * x_in[28];
    v_[391] = v_[320] * x_in[28];
    v_[309] = v_[99] * x_in[28];
    v_[26] = (0 - v_[344]) * x_in[28];
    v_[374] = v_[374] * v_[374];
    v_[370] = 3.146 * v_[370] + -0.0825825 * v_[4] + v_[341] * v_[380] + v_[145] * v_[383] + v_[172] * v_[382] + v_[149] * v_[391] + v_[160] * v_[309] + v_[179] * v_[26] + (v_[164] * v_[335]) / v_[157] - 0.47422804 * (v_[374] + v_[25]);
    v_[380] = -3.146 * (v_[52] - v_[88]) + 0.47422804 * v_[4] + v_[145] * v_[380] + v_[147] * v_[383] + v_[155] * v_[382] + v_[168] * v_[391] + v_[179] * v_[309] + v_[180] * v_[26] + (v_[166] * v_[335]) / v_[157] - -0.0825825 * (v_[374] + v_[364]);
    v_[383] = (0 - v_[36]) * x_in[27];
    v_[52] = v_[304] * x_in[27];
    v_[88] = v_[348] * x_in[27];
    v_[180] = (0 - v_[103]) * x_in[27];
    v_[179] = v_[36] * v_[304];
    v_[160] = v_[34] * v_[103];
    v_[356] = v_[36] * v_[356];
    v_[34] = v_[36] * v_[34];
    v_[319] = v_[376] * v_[330] - v_[319] * v_[333];
    v_[376] = v_[106] * v_[169];
    v_[369] = 0.207 * v_[106];
    v_[365] = v_[9] * v_[365] - v_[29] * v_[96];
    v_[342] = -8.81e-05 * v_[323] + -8.81e-05 * v_[322] + 0.026409 * v_[368] - ((0 - v_[189]) * v_[90] * v_[147] - v_[340]) * v_[353] - v_[324] * v_[319] - (v_[342] + v_[376] * v_[145]) * v_[346] - (-0.207 * v_[106] * v_[90] * v_[147] - v_[369] * v_[169] * v_[145]) * v_[20] - ((-0.08 * v_[106] * v_[169] - 0.3735 * v_[106] * v_[90]) * v_[147] + (0.08 * v_[106] * v_[90] + -0.3735 * v_[106] * v_[169] + 0.35 * v_[106]) * v_[145]) * v_[333] - (((0.207 - 0.08 * v_[189]) * v_[169] - 0.3735 * v_[189] * v_[90]) * v_[147] + ((0.08 * v_[189] - 0.207) * v_[90] + -0.3735 * v_[189] * v_[169] + 0.35 * v_[189]) * v_[145]) * v_[330] - 0.1104774 * v_[365] - 0.025713 * v_[366];
    v_[369] = 0.0004405 * v_[365] + -8.81e-05 * (v_[8] - v_[94]) + -0.000227999999999999 * v_[100] + 8.81e-05 * v_[375] + 0.000468 * v_[325] - (v_[189] * v_[90] * v_[145] - v_[388]) * v_[353] - ((0 - v_[90]) * v_[147] - v_[390]) * v_[319] - (v_[376] * v_[147] - v_[386]) * v_[346] - (0.207 * v_[106] * v_[90] * v_[145] - v_[369] * v_[169] * v_[147]) * v_[20] - ((0.08 * v_[106] * v_[90] + -0.3735 * v_[106] * v_[169] + 0.35 * v_[106]) * v_[147] + (0.08 * v_[106] * v_[169] + 0.3735 * v_[106] * v_[90]) * v_[145]) * v_[333] - (((0.08 * v_[189] - 0.207) * v_[90] + -0.3735 * v_[189] * v_[169] + 0.35 * v_[189]) * v_[147] + ((0.08 * v_[189] - 0.207) * v_[169] + 0.3735 * v_[189] * v_[90]) * v_[145]) * v_[330];
    v_[365] = 0.881 * v_[365] + 0.1104774 * v_[366] + 0.0004405 * v_[100] + -0.1104774 * v_[368] + 0.0004405 * v_[325] - v_[189] * v_[330] - v_[106] * v_[333] - -8.81e-05 * (v_[378] + v_[358]);
    v_[99] = v_[81] * v_[99] - v_[320] * v_[344];
    v_[364] = 0.007418 * v_[385] + 0.000102 * (v_[374] - v_[364]) + v_[145] * v_[342] + v_[147] * v_[369] + -0.35 * v_[365] + v_[163] * v_[382] + v_[152] * v_[391] + v_[172] * v_[309] + v_[155] * v_[26] + (v_[151] * v_[335]) / v_[157] - 0.47422804 * v_[99] - 0.084376 * v_[98] - 2.1e-05 * v_[4];
    v_[369] = 0.002735 * v_[385] + -0.0825825 * v_[99] + 0.000102 * v_[4] + v_[148] * v_[342] + v_[145] * v_[369] + v_[152] * v_[382] + v_[146] * v_[391] + v_[149] * v_[309] + v_[168] * v_[26] + (v_[156] * v_[335]) / v_[157] - 0.007418 * v_[98] - 2.1e-05 * (v_[374] - v_[25]);
    v_[99] = 0.47422804 * v_[98] + 3.146 * v_[99] + -0.0825825 * v_[385] + v_[365] + v_[165] * v_[382] + v_[159] * v_[391];
    v_[365] = v_[304] * v_[304];
    v_[385] = 0.009466 * v_[179] + 0.1466472 * (v_[160] - v_[356]) + -5.1e-05 * v_[34] + v_[173] * v_[364] + v_[170] * v_[369] + 0.08 * v_[99] - 0.022734 * v_[82] - 3.6e-05 * (v_[365] - v_[17]);
    v_[98] = x_in[39] - v_[385];
    v_[103] = v_[36] * v_[348] - v_[304] * v_[103];
    v_[35] = -0.5824264 * v_[248] + 3.6e-05 * v_[82] + 0.022734 * (v_[107] - v_[17]) + (v_[157] * v_[335]) / v_[157] + v_[35] + v_[175] * v_[370] + v_[91] * v_[380] + v_[195] * v_[383] + v_[153] * v_[52] + v_[194] * v_[88] + v_[197] * v_[180] + (v_[215] * v_[98]) / v_[183] - 0.1466472 * v_[103] - -0.123672 * v_[34] - -5.1e-05 * v_[179];
    v_[369] = -0.133138 * v_[82] + -0.5824264 * (v_[356] - v_[160]) + 0.022734 * v_[179] + v_[170] * v_[364] + v_[90] * v_[369] + v_[153] * v_[383] + v_[177] * v_[52] + v_[187] * v_[88] + v_[207] * v_[180] + (v_[158] * v_[98]) / v_[183] - 3.6e-05 * v_[34] - -5.1e-05 * (v_[107] - v_[365]);
    v_[107] = 3.44 * v_[248] + -0.5824264 * v_[34] + v_[85] * v_[380] + v_[90] * v_[370] + v_[194] * v_[383] + v_[187] * v_[52] + v_[202] * v_[88] + v_[198] * v_[180] + (v_[185] * v_[98]) / v_[183] - 0.1466472 * (v_[107] + v_[365]);
    v_[99] = 0.1466472 * v_[179] + -3.44 * (v_[356] - v_[160]) + -0.5824264 * v_[82] + v_[99] + v_[197] * v_[383] + v_[207] * v_[52] + v_[198] * v_[88] + v_[209] * v_[180] + (v_[196] * v_[98]) / v_[183];
    v_[103] = 3.44 * v_[103] + 0.1466472 * v_[34] + v_[87] * v_[380] + v_[292] * v_[370] + v_[176] * v_[383] + v_[161] * v_[52] + v_[204] * v_[88] + v_[210] * v_[180] + (v_[184] * v_[98]) / v_[183] - -0.5824264 * (v_[365] + v_[17]);
    v_[365] = v_[167] * x_in[19] + v_[263] * x_in[20];
    v_[34] = 0.207 * x_in[20] + -1 * x_in[21];
    v_[380] = -1 * x_in[18] + x_in[24];
    v_[370] = 0.207 * v_[263];
    v_[17] = 0 - v_[178];
    v_[356] = v_[265] * x_in[19] + v_[370] * x_in[18] + v_[266] * x_in[20] + v_[17] * x_in[22] + v_[263] * x_in[23];
    v_[160] = v_[365] * v_[34] - v_[380] * v_[356];
    v_[179] = v_[365] * v_[380];
    v_[82] = v_[380] * v_[380];
    v_[248] = v_[264] * x_in[19] + v_[167] * x_in[20];
    v_[364] = v_[248] * v_[248];
    v_[153] = v_[243] * v_[248] + v_[217] * v_[380];
    v_[177] = -0.08 * v_[380] + -1 * v_[356];
    v_[195] = -1 * v_[365] + x_in[25];
    v_[36] = 0 - v_[242];
    v_[348] = 0.3735 * v_[178];
    v_[304] = -0.3735 * v_[263];
    v_[165] = 0 - v_[263];
    v_[178] = 0 - v_[178];
    v_[159] = v_[348] * x_in[19] + v_[261] * x_in[18] + v_[304] * x_in[20] + v_[165] * x_in[22] + v_[178] * x_in[23];
    v_[342] = -0.08 * v_[217];
    v_[374] = v_[36] * v_[159] + v_[342] * v_[365] + v_[217] * v_[34];
    v_[25] = v_[153] * v_[177] - v_[195] * v_[374];
    v_[4] = v_[217] * v_[248] + v_[242] * v_[380];
    v_[146] = v_[4] * v_[153];
    v_[152] = 0 - v_[220];
    v_[149] = v_[218] * v_[4] + v_[220] * v_[153];
    v_[168] = -0.35 * v_[153] + v_[177];
    v_[148] = v_[149] * v_[168];
    v_[163] = v_[195] + x_in[26];
    v_[172] = v_[217] * v_[159] + v_[247] * v_[365] + v_[242] * v_[34];
    v_[155] = v_[218] * v_[172] + v_[223] * v_[195] + v_[220] * v_[374];
    v_[320] = v_[163] * v_[155];
    v_[81] = v_[221] * v_[4] + v_[218] * v_[153];
    v_[344] = v_[149] * v_[81];
    v_[358] = v_[81] * v_[163];
    v_[325] = 0.35 * v_[218];
    v_[100] = v_[152] * v_[172] + v_[325] * v_[195] + v_[218] * v_[374];
    v_[378] = v_[100] * x_in[26];
    v_[368] = v_[81] * x_in[26];
    v_[366] = (0 - v_[155]) * x_in[26];
    v_[330] = -0.33 * v_[217] * v_[220];
    v_[333] = 0.3735 + v_[330] - 0.33 * v_[242] * v_[218] - 0.35 * v_[242];
    v_[376] = 0.5 * x_in[0];
    v_[319] = cos(v_[376]);
    v_[386] = 0.5 * x_in[1];
    v_[390] = cos(v_[386]);
    v_[388] = v_[319] * v_[390];
    v_[353] = 0.5 * x_in[2];
    v_[346] = sin(v_[353]);
    v_[376] = sin(v_[376]);
    v_[386] = sin(v_[386]);
    v_[20] = v_[376] * v_[386];
    v_[353] = cos(v_[353]);
    v_[8] = v_[388] * v_[346] + v_[20] * v_[353];
    v_[94] = 2. * v_[8];
    v_[8] = v_[94] * v_[8];
    v_[376] = v_[376] * v_[390];
    v_[386] = v_[319] * v_[386];
    v_[319] = v_[376] * v_[353] + v_[386] * v_[346];
    v_[390] = 2. * v_[319];
    v_[169] = v_[390] * v_[319];
    v_[324] = 0.5 * x_in[1];
    v_[340] = cos(v_[324]);
    v_[323] = v_[371] * v_[340];
    v_[29] = 0.5 * x_in[2];
    v_[9] = sin(v_[29]);
    v_[324] = sin(v_[324]);
    v_[96] = v_[373] * v_[324];
    v_[29] = cos(v_[29]);
    v_[389] = v_[323] * v_[9] + v_[96] * v_[29];
    v_[387] = 2. * v_[389];
    v_[389] = v_[387] * v_[389];
    v_[340] = v_[373] * v_[340];
    v_[324] = v_[371] * v_[324];
    v_[371] = v_[340] * v_[29] + v_[324] * v_[9];
    v_[373] = 2. * v_[371];
    v_[372] = v_[373] * v_[371];
    v_[392] = 0.33 * v_[263];
    v_[393] = cos(x_in[8]);
    v_[394] = cos(x_in[6]);
    v_[395] = 0.33 * v_[394];
    v_[396] = 0.33 * v_[394];
    v_[397] = 0.35 * v_[394] * v_[217];
    v_[398] = 0.08 * v_[394];
    v_[399] = 0.33 * v_[263] * v_[242];
    v_[400] = 0.3735 + -0.33 * v_[217] * v_[220] - 0.33 * v_[242] * v_[393] - 0.35 * v_[242];
    v_[401] = 0.33 * v_[394] * v_[242] * v_[220] - 0.33 * v_[394] * v_[217] * v_[393] - v_[397] - v_[398];
    v_[398] = (v_[392] * v_[242] * v_[393] + 0.33 * v_[263] * v_[217] * v_[220] + 0.35 * v_[263] * v_[242]) * x_in[25] + (v_[395] * v_[242] * v_[220] - v_[396] * v_[217] * v_[393] - v_[397] - v_[398]) * x_in[24] + (0.33 * v_[263] * v_[217] * v_[220] + v_[399] * v_[393]) * x_in[26] + x_in[22] + x_in[20] * v_[400] - x_in[18] * v_[401];
    v_[324] = v_[324] * v_[29] - v_[340] * v_[9];
    v_[340] = 2. * v_[324];
    v_[397] = v_[340] * v_[371];
    v_[29] = v_[323] * v_[29] - v_[96] * v_[9];
    v_[96] = v_[387] * v_[29];
    v_[9] = 0.33 * v_[263] * v_[217];
    v_[323] = 0.207 + 0.33 * v_[263] * v_[242] * v_[220] - v_[9] * v_[393] - 0.35 * v_[263] * v_[217] - 0.08 * v_[263];
    v_[401] = (0.33 * v_[242] * v_[220] - 0.33 * v_[217] * v_[393]) * x_in[26] + (0.33 * v_[242] * v_[220] - 0.33 * v_[217] * v_[393] - 0.35 * v_[217]) * x_in[25] + x_in[21] + x_in[19] * v_[401] - x_in[20] * v_[323];
    v_[402] = v_[387] * v_[324];
    v_[373] = v_[373] * v_[29];
    v_[323] = (v_[396] * v_[242] * v_[393] + v_[395] * v_[217] * v_[220] + 0.35 * v_[394] * v_[242]) * x_in[25] + (v_[392] * v_[217] * v_[393] + -0.33 * v_[263] * v_[242] * v_[220] + 0.35 * v_[263] * v_[217] + 0.08 * v_[263]) * x_in[24] + (0.33 * v_[394] * v_[217] * v_[220] + 0.33 * v_[394] * v_[242] * v_[393]) * x_in[26] + x_in[23] + x_in[18] * v_[323] - x_in[19] * v_[400];
    v_[400] = 0.5 * x_in[0];
    v_[396] = cos(v_[400]);
    v_[395] = 0.5 * x_in[1];
    v_[392] = cos(v_[395]);
    v_[403] = v_[396] * v_[392];
    v_[404] = 0.5 * x_in[2];
    v_[405] = sin(v_[404]);
    v_[400] = sin(v_[400]);
    v_[395] = sin(v_[395]);
    v_[406] = v_[400] * v_[395];
    v_[404] = cos(v_[404]);
    v_[407] = 2. * (v_[403] * v_[405] + v_[406] * v_[404]);
    v_[395] = v_[396] * v_[395];
    v_[400] = v_[400] * v_[392];
    v_[392] = v_[395] * v_[404] - v_[400] * v_[405];
    v_[400] = v_[400] * v_[404] + v_[395] * v_[405];
    v_[395] = 2. * v_[400];
    v_[404] = v_[403] * v_[404] - v_[406] * v_[405];
    v_[406] = 2. * v_[392];
    v_[405] = 0.33 * v_[394] * v_[242] * v_[220];
    v_[403] = 0.33 * v_[394] * v_[217];
    v_[396] = 0.35 * v_[394] * v_[217];
    v_[406] = (v_[407] * v_[392] + v_[395] * v_[404]) * (0.207 + 0.33 * v_[263] * v_[242] * v_[220] - v_[9] * v_[393] - 0.35 * v_[263] * v_[217] - 0.08 * v_[263]) + (v_[407] * v_[400] - v_[406] * v_[404]) * (0.3735 + v_[330] - 0.33 * v_[242] * v_[393] - 0.35 * v_[242]) + (1 - v_[406] * v_[392] - v_[395] * v_[400]) * (v_[405] - v_[403] * v_[393] - v_[396] - 0.08 * v_[394]) + x_in[5];
    v_[404] = 1 / (1 + exp(100. * v_[406]));
    v_[395] = -1000. * ((1 - v_[389] - v_[372]) * v_[398] + (v_[397] + v_[96]) * v_[401] + (v_[402] - v_[373]) * v_[323]) * v_[404];
    v_[386] = v_[386] * v_[353] - v_[376] * v_[346];
    v_[376] = 2. * v_[386];
    v_[400] = v_[376] * v_[319];
    v_[353] = v_[388] * v_[353] - v_[20] * v_[346];
    v_[20] = v_[94] * v_[353];
    v_[324] = v_[340] * v_[324];
    v_[371] = v_[387] * v_[371];
    v_[29] = v_[340] * v_[29];
    v_[96] = -1000. * ((v_[397] - v_[96]) * v_[398] + (1 - v_[389] - v_[324]) * v_[401] + (v_[371] + v_[29]) * v_[323]) * v_[404];
    v_[397] = v_[94] * v_[386];
    v_[390] = v_[390] * v_[353];
    v_[29] = -1000. * ((v_[402] + v_[373]) * v_[398] + (v_[371] - v_[29]) * v_[401] + (1 - v_[324] - v_[372]) * v_[323]) * v_[404] + 5000. * exp(-100. * (v_[406] + 0.02));
    v_[371] = (1 - v_[8] - v_[169]) * v_[395] + (v_[400] - v_[20]) * v_[96] + (v_[397] + v_[390]) * v_[29];
    v_[399] = 0.207 + v_[399] * v_[220] - 0.33 * v_[263] * v_[217] * v_[218] - 0.35 * v_[263] * v_[217] - 0.08 * v_[263];
    v_[386] = v_[376] * v_[386];
    v_[319] = v_[94] * v_[319];
    v_[353] = v_[376] * v_[353];
    v_[20] = (v_[400] + v_[20]) * v_[395] + (1 - v_[8] - v_[386]) * v_[96] + (v_[319] - v_[353]) * v_[29];
    v_[400] = v_[333] * v_[371] - v_[399] * v_[20];
    v_[396] = v_[405] - v_[403] * v_[218] - v_[396] - 0.08 * v_[394];
    v_[353] = (v_[397] - v_[390]) * v_[395] + (v_[319] + v_[353]) * v_[96] + (1 - v_[386] - v_[169]) * v_[29];
    v_[333] = v_[396] * v_[20] - v_[333] * v_[353];
    v_[168] = v_[81] * v_[168] - v_[163] * v_[100];
    v_[319] = 0.1104774 * (v_[320] - v_[148]) + 0.025941 * v_[344] - (0 - v_[263]) * v_[400] - v_[394] * v_[333] - (0.08 + 0.35 * v_[217] - 0.207 * v_[263]) * v_[20] - (0.3735 * v_[263] - 0.35 * v_[263] * v_[242]) * v_[371] - (0.3735 * v_[394] - 0.35 * v_[394] * v_[242]) * v_[353] - 0.0004405 * v_[168];
    v_[386] = x_in[38] - v_[319];
    v_[29] = v_[263] * v_[242];
    v_[390] = v_[29] * v_[218];
    v_[397] = v_[242] * v_[220] - v_[217] * v_[218];
    v_[96] = v_[394] * v_[217];
    v_[395] = v_[96] * v_[220];
    v_[169] = v_[163] * v_[163];
    v_[403] = v_[149] * v_[149];
    v_[405] = -0.881 * (v_[148] - v_[320]) + 0.1104774 * v_[344] + -8.81e-05 * v_[358] + 0.00185880198235362 * v_[378] + 8.81e-05 * v_[368] + 0.414812462825713 * v_[366] + (0.1104774 * v_[386]) / 0.026181 - (v_[263] * v_[217] * v_[220] + v_[390]) * v_[371] - v_[397] * v_[20] - (v_[395] + v_[394] * v_[242] * v_[218]) * v_[353] - 0.0004405 * (v_[169] + v_[403]);
    v_[163] = v_[149] * v_[163];
    v_[8] = (0 - v_[149]) * x_in[26];
    v_[29] = v_[29] * v_[220];
    v_[376] = v_[242] * v_[218];
    v_[96] = v_[96] * v_[218];
    v_[94] = v_[81] * v_[81];
    v_[169] = 0.881 * v_[168] + -8.81e-05 * v_[163] + 0.0004405 * v_[344] + 0.880992588508842 * v_[378] + -8.81e-05 * v_[8] + 0.00185880198235362 * v_[366] + (-0.0004405 * v_[386]) / 0.026181 - (v_[29] - v_[263] * v_[217] * v_[218]) * v_[371] - ((0 - v_[217]) * v_[220] - v_[376]) * v_[20] - (v_[394] * v_[242] * v_[220] - v_[96]) * v_[353] - 0.1104774 * (v_[169] + v_[94]);
    v_[344] = (0 - v_[4]) * x_in[25];
    v_[324] = v_[153] * x_in[25];
    v_[404] = v_[374] * x_in[25];
    v_[406] = (0 - v_[172]) * x_in[25];
    v_[323] = v_[195] * v_[172];
    v_[177] = v_[4] * v_[177];
    v_[373] = v_[4] * v_[195];
    v_[402] = v_[153] * v_[195];
    v_[401] = v_[153] * v_[153];
    v_[398] = v_[4] * v_[4];
    v_[319] = 0.47422804 * (v_[323] - v_[177]) + 0.081641 * v_[146] + 2.1e-05 * v_[373] + (0.026181 * v_[386]) / 0.026181 + v_[319] + v_[223] * v_[169] + v_[325] * v_[405] - -0.0825825 * v_[25] - 0.000102 * v_[402] - 0.007418 * (v_[401] - v_[398]);
    v_[372] = x_in[37] - v_[319];
    v_[195] = v_[195] * v_[195];
    v_[25] = 3.146 * v_[25] + -0.0825825 * v_[146] + v_[152] * v_[405] + v_[218] * v_[169] + v_[245] * v_[344] + v_[222] * v_[324] + v_[233] * v_[404] + v_[252] * v_[406] + (v_[237] * v_[372]) / v_[230] - 0.47422804 * (v_[195] + v_[401]);
    v_[177] = -3.146 * (v_[177] - v_[323]) + 0.47422804 * v_[146] + v_[218] * v_[405] + v_[220] * v_[169] + v_[228] * v_[344] + v_[241] * v_[324] + v_[252] * v_[404] + v_[253] * v_[406] + (v_[239] * v_[372]) / v_[230] - -0.0825825 * (v_[195] + v_[398]);
    v_[323] = (0 - v_[248]) * x_in[24];
    v_[169] = v_[365] * x_in[24];
    v_[405] = v_[356] * x_in[24];
    v_[253] = (0 - v_[159]) * x_in[24];
    v_[252] = v_[248] * v_[365];
    v_[233] = v_[380] * v_[159];
    v_[34] = v_[248] * v_[34];
    v_[380] = v_[248] * v_[380];
    v_[396] = v_[399] * v_[353] - v_[396] * v_[371];
    v_[399] = 0.207 * v_[394];
    v_[100] = v_[149] * v_[100] - v_[81] * v_[155];
    v_[395] = -8.81e-05 * v_[168] + -8.81e-05 * v_[378] + 0.026409 * v_[8] - (v_[263] * v_[217] * v_[220] + v_[390]) * v_[333] - v_[397] * v_[396] - (v_[395] + v_[394] * v_[242] * v_[218]) * v_[400] - (0.207 * v_[394] * v_[217] * v_[220] + v_[399] * v_[242] * v_[218]) * v_[20] - ((-0.08 * v_[394] * v_[242] - 0.3735 * v_[394] * v_[217]) * v_[220] + (0.08 * v_[394] * v_[217] + -0.3735 * v_[394] * v_[242] + 0.35 * v_[394]) * v_[218]) * v_[371] - (((0.08 * v_[263] - 0.207) * v_[242] + 0.3735 * v_[263] * v_[217]) * v_[220] + ((0.207 - 0.08 * v_[263]) * v_[217] + 0.3735 * v_[263] * v_[242] - 0.35 * v_[263]) * v_[218]) * v_[353] - 0.1104774 * v_[100] - 0.025713 * v_[163];
    v_[399] = 0.0004405 * v_[100] + -8.81e-05 * (v_[148] - v_[320]) + -0.000227999999999999 * v_[358] + 8.81e-05 * v_[366] + 0.000468 * v_[368] - (v_[29] - v_[263] * v_[217] * v_[218]) * v_[333] - ((0 - v_[217]) * v_[220] - v_[376]) * v_[396] - (v_[394] * v_[242] * v_[220] - v_[96]) * v_[400] - (0.207 * v_[394] * v_[242] * v_[220] - v_[399] * v_[217] * v_[218]) * v_[20] - ((0.08 * v_[394] * v_[217] + -0.3735 * v_[394] * v_[242] + 0.35 * v_[394]) * v_[220] + (0.08 * v_[394] * v_[242] + 0.3735 * v_[394] * v_[217]) * v_[218]) * v_[371] - (((0.207 - 0.08 * v_[263]) * v_[217] + 0.3735 * v_[263] * v_[242] - 0.35 * v_[263]) * v_[220] + ((0.207 - 0.08 * v_[263]) * v_[242] - 0.3735 * v_[263] * v_[217]) * v_[218]) * v_[353];
    v_[100] = 0.881 * v_[100] + 0.1104774 * v_[163] + 0.0004405 * v_[358] + -0.1104774 * v_[8] + 0.0004405 * v_[368] - (0 - v_[263]) * v_[353] - v_[394] * v_[371] - -8.81e-05 * (v_[94] + v_[403]);
    v_[172] = v_[4] * v_[374] - v_[153] * v_[172];
    v_[398] = 0.007418 * v_[402] + 0.000102 * (v_[195] - v_[398]) + v_[218] * v_[395] + v_[220] * v_[399] + -0.35 * v_[100] + v_[236] * v_[344] + v_[225] * v_[324] + v_[245] * v_[404] + v_[228] * v_[406] + (v_[224] * v_[372]) / v_[230] - 0.47422804 * v_[172] - 0.084376 * v_[373] - 2.1e-05 * v_[146];
    v_[399] = 0.002735 * v_[402] + -0.0825825 * v_[172] + 0.000102 * v_[146] + v_[221] * v_[395] + v_[218] * v_[399] + v_[225] * v_[344] + v_[219] * v_[324] + v_[222] * v_[404] + v_[241] * v_[406] + (v_[229] * v_[372]) / v_[230] - 0.007418 * v_[373] - 2.1e-05 * (v_[195] - v_[401]);
    v_[172] = 0.47422804 * v_[373] + 3.146 * v_[172] + -0.0825825 * v_[402] + v_[100] + v_[238] * v_[344] + v_[232] * v_[324];
    v_[100] = v_[365] * v_[365];
    v_[402] = 0.009466 * v_[252] + 0.1466472 * (v_[233] - v_[34]) + -5.1e-05 * v_[380] + v_[217] * v_[398] + v_[242] * v_[399] + -0.08 * v_[172] - -0.022734 * v_[179] - -3.6e-05 * (v_[100] - v_[364]);
    v_[373] = x_in[36] - v_[402];
    v_[159] = v_[248] * v_[356] - v_[365] * v_[159];
    v_[319] = 0.5824264 * v_[160] + -3.6e-05 * v_[179] + -0.022734 * (v_[82] - v_[364]) + v_[247] * v_[25] + -1 * (v_[319] + (v_[230] * v_[372]) / v_[230]) + v_[342] * v_[177] + v_[269] * v_[323] + v_[226] * v_[169] + v_[268] * v_[405] + v_[271] * v_[253] + (v_[288] * v_[373]) / v_[256] - 0.1466472 * v_[159] - -0.123672 * v_[380] - -5.1e-05 * v_[252];
    v_[399] = -0.133138 * v_[179] + 0.5824264 * (v_[34] - v_[233]) + -0.022734 * v_[252] + v_[243] * v_[398] + v_[217] * v_[399] + v_[226] * v_[323] + v_[250] * v_[169] + v_[260] * v_[405] + v_[281] * v_[253] + (v_[231] * v_[373]) / v_[256] - -3.6e-05 * v_[380] - -5.1e-05 * (v_[82] - v_[100]);
    v_[82] = 3.44 * v_[160] + 0.5824264 * v_[380] + v_[36] * v_[177] + v_[217] * v_[25] + v_[268] * v_[323] + v_[260] * v_[169] + v_[276] * v_[405] + v_[272] * v_[253] + (v_[258] * v_[373]) / v_[256] - 0.1466472 * (v_[82] + v_[100]);
    v_[172] = 0.1466472 * v_[252] + -3.44 * (v_[34] - v_[233]) + 0.5824264 * v_[179] + -1 * v_[172] + v_[271] * v_[323] + v_[281] * v_[169] + v_[272] * v_[405] + v_[283] * v_[253] + (v_[270] * v_[373]) / v_[256];
    v_[159] = 3.44 * v_[159] + 0.1466472 * v_[380] + v_[217] * v_[177] + v_[242] * v_[25] + v_[249] * v_[323] + v_[234] * v_[169] + v_[278] * v_[405] + v_[284] * v_[253] + (v_[257] * v_[373]) / v_[256] - 0.5824264 * (v_[100] + v_[364]);
    v_[100] = x_in[19] * x_in[23] - x_in[20] * x_in[22];
    v_[380] = x_in[19] * x_in[20];
    v_[177] = x_in[19] * x_in[19];
    v_[25] = x_in[18] * x_in[18];
    v_[65] = v_[50] * v_[46] + v_[65] * v_[10];
    v_[122] = v_[137] * v_[119] + v_[122] * v_[24];
    v_[208] = v_[193] * v_[189] + v_[208] * v_[106];
    v_[267] = v_[282] * v_[264] + v_[267] * v_[167];
    v_[275] = 0.190812 + v_[58] + v_[130] + v_[201] + v_[275];
    v_[43] = v_[48] * v_[43] + v_[46] * v_[69];
    v_[114] = v_[24] * v_[114] + v_[118] * v_[141];
    v_[186] = v_[191] * v_[186] + v_[189] * v_[212];
    v_[259] = v_[167] * v_[259] + v_[263] * v_[286];
    v_[286] = (-0.00571 + v_[43] + v_[114] + v_[186] + v_[259]) / v_[227];
    v_[212] = 0.012668 + v_[65] + v_[122] + v_[208] + v_[267] - v_[275] * v_[286];
    v_[141] = x_in[20] * x_in[20];
    v_[69] = x_in[18] * x_in[22] - x_in[19] * x_in[21];
    v_[259] = -0.00571 + v_[43] + v_[114] + v_[186] + v_[259];
    v_[402] = (-0.0053433 * v_[69] + 2.0678571 * (v_[296] - v_[154]) + 0.473273 * v_[380] + 0.190812 * v_[95] + (v_[40] * v_[311]) / v_[40] + v_[360] + v_[45] * v_[70] + v_[287] * v_[316] + v_[116] * v_[142] + -1 * (v_[377] + (v_[111] * v_[381]) / v_[111]) + v_[307] * v_[12] + (v_[183] * v_[98]) / v_[183] + v_[385] + v_[188] * v_[107] + v_[310] * v_[99] + v_[261] * v_[82] + -1 * (v_[402] + (v_[256] * v_[373]) / v_[256]) + v_[370] * v_[172] - -0.00571 * v_[294] - 0.012668 * (v_[141] - v_[177])) / v_[227];
    v_[262] = 5.5837 + v_[291] + v_[71] + v_[293] + v_[117] + v_[295] + v_[214] + v_[297] + v_[262] - v_[259] * v_[286];
    v_[214] = (2.0678571 * v_[100] + -0.00571 * v_[380] + 0.190812 * (v_[141] - v_[25]) + v_[10] * v_[337] + v_[46] * v_[363] + v_[299] * v_[70] + v_[47] * v_[316] + v_[24] * v_[345] + v_[119] * v_[367] + v_[213] * v_[142] + v_[120] * v_[12] + v_[106] * v_[35] + v_[189] * v_[369] + v_[78] * v_[107] + v_[190] * v_[99] + v_[167] * v_[319] + v_[264] * v_[399] + v_[348] * v_[82] + v_[265] * v_[172] - -1.1915559 * v_[69] - 4.847485 * v_[294] - 0.012668 * v_[95] - v_[259] * v_[402]) / v_[262];
    v_[267] = (0.012668 + v_[65] + v_[122] + v_[208] + v_[267] - v_[259] * v_[298]) / v_[262];
    v_[246] = 6.056973 + v_[291] + v_[31] + v_[293] + v_[101] + v_[295] + v_[174] + v_[297] + v_[246] - v_[212] * v_[267] - v_[275] * v_[298];
    v_[399] = (-1.1915559 * (v_[154] - v_[296]) + 4.374212 * v_[95] + 0.012668 * v_[294] + v_[46] * v_[337] + v_[48] * v_[363] + v_[300] * v_[70] + v_[49] * v_[316] + 0.207 * v_[302] + v_[118] * v_[345] + v_[24] * v_[367] + v_[11] * v_[142] + v_[121] * v_[12] + 0.207 * v_[343] + v_[189] * v_[35] + v_[191] * v_[369] + v_[105] * v_[107] + v_[192] * v_[99] + 0.207 * v_[103] + v_[263] * v_[319] + v_[167] * v_[399] + v_[304] * v_[82] + v_[266] * v_[172] + 0.207 * v_[159] - -0.0053433 * v_[100] - 0.190812 * v_[380] - -0.00571 * (v_[177] - v_[25]) - v_[212] * v_[214] - v_[275] * v_[402]) / v_[246];
    v_[73] = v_[62] - v_[73];
    v_[63] = v_[44] + v_[63] - v_[73];
    v_[57] = v_[57] + v_[51];
    v_[51] = v_[48] * v_[63] + v_[46] * v_[57];
    v_[68] = v_[68] + v_[64];
    v_[56] = v_[54] + v_[56] - v_[73];
    v_[54] = v_[48] * v_[68] + v_[46] * v_[56];
    v_[64] = v_[51] * v_[46] + v_[54] * v_[10];
    v_[144] = v_[134] - v_[144];
    v_[135] = v_[115] + v_[135] - v_[144];
    v_[129] = v_[129] + v_[123];
    v_[123] = v_[24] * v_[135] + v_[118] * v_[129];
    v_[140] = v_[140] + v_[136];
    v_[128] = v_[126] + v_[128] - v_[144];
    v_[126] = v_[24] * v_[140] + v_[118] * v_[128];
    v_[136] = v_[123] * v_[119] + v_[126] * v_[24];
    v_[216] = v_[205] - v_[216];
    v_[206] = v_[187] + v_[206] - v_[216];
    v_[200] = v_[200] + v_[194];
    v_[194] = v_[191] * v_[206] + v_[189] * v_[200];
    v_[211] = v_[211] + v_[207];
    v_[199] = v_[197] + v_[199] - v_[216];
    v_[197] = v_[191] * v_[211] + v_[189] * v_[199];
    v_[207] = v_[194] * v_[189] + v_[197] * v_[106];
    v_[289] = v_[279] - v_[289];
    v_[280] = v_[260] + v_[280] - v_[289];
    v_[274] = v_[274] + v_[268];
    v_[268] = v_[167] * v_[280] + v_[263] * v_[274];
    v_[285] = v_[285] + v_[281];
    v_[273] = v_[271] + v_[273] - v_[289];
    v_[271] = v_[167] * v_[285] + v_[263] * v_[273];
    v_[281] = v_[268] * v_[264] + v_[271] * v_[167];
    v_[128] = v_[119] * v_[140] + v_[24] * v_[128];
    v_[129] = v_[119] * v_[135] + v_[24] * v_[129];
    v_[135] = v_[128] * v_[24] + v_[129] * v_[119] + v_[144];
    v_[56] = v_[46] * v_[68] + v_[10] * v_[56];
    v_[57] = v_[46] * v_[63] + v_[10] * v_[57];
    v_[63] = v_[56] * v_[10] + v_[57] * v_[46] + v_[73];
    v_[199] = v_[189] * v_[211] + v_[106] * v_[199];
    v_[200] = v_[189] * v_[206] + v_[106] * v_[200];
    v_[206] = v_[199] * v_[106] + v_[200] * v_[189] + v_[216];
    v_[273] = v_[264] * v_[285] + v_[167] * v_[273];
    v_[274] = v_[264] * v_[280] + v_[167] * v_[274];
    v_[280] = v_[273] * v_[167] + v_[274] * v_[264] + v_[289];
    v_[251] = v_[251] + v_[33];
    v_[290] = v_[290] + v_[251];
    v_[28] = v_[28] + v_[18];
    v_[240] = v_[240] + v_[28];
    v_[251] = 0 - v_[251];
    v_[18] = v_[48] * v_[251] + v_[46] * v_[28];
    v_[33] = v_[290] * v_[10] + v_[240] * v_[46] - v_[18];
    v_[19] = v_[19] + v_[104];
    v_[38] = -1 * (v_[38] + v_[19]);
    v_[97] = v_[97] + v_[83];
    v_[39] = -1 * (v_[39] + v_[97]);
    v_[19] = 0 - v_[19];
    v_[83] = v_[24] * v_[19] + v_[118] * v_[97];
    v_[104] = v_[38] * v_[24] + v_[39] * v_[119] - v_[83];
    v_[84] = v_[84] + v_[176];
    v_[109] = v_[109] + v_[84];
    v_[171] = v_[171] + v_[161];
    v_[110] = v_[110] + v_[171];
    v_[84] = 0 - v_[84];
    v_[161] = v_[191] * v_[84] + v_[189] * v_[171];
    v_[176] = v_[109] * v_[106] + v_[110] * v_[189] - v_[161];
    v_[162] = v_[162] + v_[249];
    v_[181] = -1 * (v_[181] + v_[162]);
    v_[244] = v_[244] + v_[234];
    v_[182] = -1 * (v_[182] + v_[244]);
    v_[162] = 0 - v_[162];
    v_[234] = v_[167] * v_[162] + v_[263] * v_[244];
    v_[249] = v_[181] * v_[167] + v_[182] * v_[264] - v_[234];
    v_[285] = (-2.0678571 + v_[33] + v_[104] + v_[176] + v_[249]) / v_[227];
    v_[211] = (v_[135] + v_[63] + v_[206] + v_[280] - v_[259] * v_[285]) / v_[262];
    v_[68] = (-1.1915559 + v_[64] + v_[136] + v_[207] + v_[281] - v_[212] * v_[211] - v_[275] * v_[285]) / v_[246];
    v_[249] = -2.0678571 + v_[33] + v_[104] + v_[176] + v_[249];
    v_[280] = v_[135] + v_[63] + v_[206] + v_[280] - v_[249] * v_[286];
    v_[281] = -1.1915559 + v_[64] + v_[136] + v_[207] + v_[281] - v_[280] * v_[267] - v_[249] * v_[298];
    v_[139] = 0 - v_[139];
    v_[207] = v_[24] * v_[139] + v_[118] * v_[133];
    v_[67] = 0 - v_[67];
    v_[136] = v_[48] * v_[67] + v_[46] * v_[61];
    v_[210] = 0 - v_[210];
    v_[64] = v_[191] * v_[210] + v_[189] * v_[204];
    v_[284] = 0 - v_[284];
    v_[206] = v_[167] * v_[284] + v_[263] * v_[278];
    v_[63] = (v_[144] + v_[73] + v_[216] + v_[289]) / v_[227];
    v_[135] = (2.0678571 + v_[18] + v_[83] + v_[161] + v_[234] - v_[259] * v_[63]) / v_[262];
    v_[251] = v_[46] * v_[251] + v_[10] * v_[28];
    v_[28] = -0 - v_[251];
    v_[19] = v_[119] * v_[19] + v_[24] * v_[97];
    v_[97] = 0 - v_[19];
    v_[84] = v_[189] * v_[84] + v_[106] * v_[171];
    v_[171] = -0 - v_[84];
    v_[162] = v_[264] * v_[162] + v_[167] * v_[244];
    v_[244] = -0 - v_[162];
    v_[176] = (0.0053433 + v_[28] + v_[97] + v_[171] + v_[244] - v_[212] * v_[135] - v_[275] * v_[63]) / v_[246];
    v_[104] = v_[207] + v_[136] + v_[64] + v_[206] - v_[280] * v_[135] - v_[249] * v_[63] - v_[281] * v_[176];
    v_[33] = v_[144] + v_[73] + v_[216] + v_[289];
    v_[234] = 2.0678571 + v_[18] + v_[83] + v_[161] + v_[234] - v_[33] * v_[286];
    v_[244] = 0.0053433 + v_[28] + v_[97] + v_[171] + v_[244] - v_[234] * v_[267] - v_[33] * v_[298];
    v_[66] = v_[66] - v_[60];
    v_[59] = v_[59] - v_[60];
    v_[138] = v_[138] - v_[132];
    v_[131] = v_[131] - v_[132];
    v_[209] = v_[209] - v_[203];
    v_[202] = v_[202] - v_[203];
    v_[283] = v_[283] - v_[277];
    v_[276] = v_[276] - v_[277];
    v_[171] = v_[46] * v_[55];
    v_[97] = (v_[46] * v_[59] + v_[10] * v_[55]) * v_[46] + (v_[171] + v_[10] * v_[66]) * v_[10];
    v_[171] = v_[48] * v_[59] + v_[171];
    v_[55] = v_[48] * v_[55] + v_[46] * v_[66];
    v_[28] = v_[171] * v_[48] + v_[55] * v_[46];
    v_[161] = v_[24] * v_[127];
    v_[83] = (v_[119] * v_[131] + v_[161]) * v_[119] + (v_[119] * v_[127] + v_[24] * v_[138]) * v_[24];
    v_[127] = v_[24] * v_[131] + v_[118] * v_[127];
    v_[161] = v_[161] + v_[118] * v_[138];
    v_[18] = v_[127] * v_[24] + v_[161] * v_[118];
    v_[140] = v_[189] * v_[198];
    v_[260] = (v_[189] * v_[202] + v_[106] * v_[198]) * v_[189] + (v_[140] + v_[106] * v_[209]) * v_[106];
    v_[140] = v_[191] * v_[202] + v_[140];
    v_[198] = v_[191] * v_[198] + v_[189] * v_[209];
    v_[279] = v_[140] * v_[191] + v_[198] * v_[189];
    v_[187] = v_[167] * v_[272];
    v_[205] = (v_[264] * v_[276] + v_[187]) * v_[264] + (v_[264] * v_[272] + v_[167] * v_[283]) * v_[167];
    v_[272] = v_[167] * v_[276] + v_[263] * v_[272];
    v_[187] = v_[187] + v_[263] * v_[283];
    v_[115] = v_[272] * v_[167] + v_[187] * v_[263];
    v_[276] = 53.433 + v_[66] + v_[59] + v_[60] + v_[138] + v_[131] + v_[132] + v_[209] + v_[202] + v_[203] + v_[283] + v_[276] + v_[277] - v_[97] - v_[28] - v_[83] - v_[18] - v_[260] - v_[279] - v_[205] - v_[115] - v_[234] * v_[135] - v_[33] * v_[63] - v_[244] * v_[176];
    v_[100] = (53.433 * v_[100] + 2.0678571 * v_[294] + -0.0053433 * v_[95] + v_[302] + -1 * v_[343] + v_[103] + -1 * v_[159] - -1.1915559 * (v_[141] + v_[177]) - v_[234] * v_[214] - v_[33] * v_[402] - v_[244] * v_[399]) / v_[276];
    v_[206] = (v_[207] + v_[136] + v_[64] + v_[206] - v_[234] * v_[211] - v_[33] * v_[285] - v_[244] * v_[68]) / v_[276];
    v_[205] = 53.433 + v_[60] + v_[97] + v_[132] + v_[83] + v_[203] + v_[260] + v_[277] + v_[205] - v_[280] * v_[211] - v_[249] * v_[285] - v_[281] * v_[68] - v_[104] * v_[206];
    v_[141] = (-53.433 * (v_[296] - v_[154]) + -1.1915559 * v_[95] + 2.0678571 * v_[380] + v_[10] * v_[316] + v_[46] * v_[70] + v_[255] * v_[12] + v_[22] * v_[142] + v_[106] * v_[99] + v_[189] * v_[107] + v_[17] * v_[172] + v_[165] * v_[82] - -0.0053433 * (v_[141] + v_[25]) - v_[280] * v_[214] - v_[249] * v_[402] - v_[281] * v_[399] - v_[104] * v_[100]) / v_[205];
    v_[161] = v_[127] * v_[119] + v_[161] * v_[24];
    v_[55] = v_[171] * v_[46] + v_[55] * v_[10];
    v_[198] = v_[140] * v_[189] + v_[198] * v_[106];
    v_[187] = v_[272] * v_[264] + v_[187] * v_[167];
    v_[57] = v_[57] * v_[48] + v_[56] * v_[46];
    v_[129] = v_[129] * v_[24] + v_[128] * v_[118];
    v_[200] = v_[200] * v_[191] + v_[199] * v_[189];
    v_[274] = v_[274] * v_[167] + v_[273] * v_[263];
    v_[251] = v_[290] * v_[46] + v_[240] * v_[48] + v_[251];
    v_[19] = v_[38] * v_[118] + v_[39] * v_[24] + v_[19];
    v_[84] = v_[109] * v_[189] + v_[110] * v_[191] + v_[84];
    v_[162] = v_[181] * v_[263] + v_[182] * v_[167] + v_[162];
    v_[227] = (-0.0053433 + v_[251] + v_[19] + v_[84] + v_[162]) / v_[227];
    v_[262] = (1.1915559 + v_[57] + v_[129] + v_[200] + v_[274] - v_[259] * v_[227]) / v_[262];
    v_[126] = v_[126] * v_[118] + v_[123] * v_[24] + v_[144];
    v_[54] = v_[54] * v_[46] + v_[51] * v_[48] + v_[73];
    v_[197] = v_[197] * v_[189] + v_[194] * v_[191] + v_[216];
    v_[271] = v_[271] * v_[263] + v_[268] * v_[167] + v_[289];
    v_[246] = (v_[126] + v_[54] + v_[197] + v_[271] - v_[212] * v_[262] - v_[275] * v_[227]) / v_[246];
    v_[139] = 0 - v_[24] * v_[133] - v_[119] * v_[139];
    v_[67] = 0 - v_[10] * v_[61] - v_[46] * v_[67];
    v_[210] = 0 - v_[106] * v_[204] - v_[189] * v_[210];
    v_[284] = 0 - v_[167] * v_[278] - v_[264] * v_[284];
    v_[276] = (v_[139] + v_[67] + v_[210] + v_[284] - v_[234] * v_[262] - v_[33] * v_[227] - v_[244] * v_[246]) / v_[276];
    v_[205] = (v_[161] + v_[55] + v_[198] + v_[187] - v_[280] * v_[262] - v_[249] * v_[227] - v_[281] * v_[246] - v_[104] * v_[276]) / v_[205];
    v_[162] = -0.0053433 + v_[251] + v_[19] + v_[84] + v_[162];
    v_[274] = 1.1915559 + v_[57] + v_[129] + v_[200] + v_[274] - v_[162] * v_[286];
    v_[271] = v_[126] + v_[54] + v_[197] + v_[271] - v_[274] * v_[267] - v_[162] * v_[298];
    v_[284] = v_[139] + v_[67] + v_[210] + v_[284] - v_[274] * v_[135] - v_[162] * v_[63] - v_[271] * v_[176];
    v_[187] = v_[161] + v_[55] + v_[198] + v_[187] - v_[274] * v_[211] - v_[162] * v_[285] - v_[271] * v_[68] - v_[284] * v_[206];
    v_[187] = (53.433 * v_[69] + -1.1915559 * v_[294] + -0.0053433 * v_[380] + v_[46] * v_[316] + v_[301] * v_[70] + v_[118] * v_[12] + v_[16] * v_[142] + v_[189] * v_[99] + v_[124] * v_[107] + v_[263] * v_[172] + v_[178] * v_[82] - 2.0678571 * (v_[177] + v_[25]) - v_[274] * v_[214] - v_[162] * v_[402] - v_[271] * v_[399] - v_[284] * v_[100] - v_[187] * v_[141]) / (53.433 + v_[60] + v_[28] + v_[132] + v_[18] + v_[203] + v_[279] + v_[277] + v_[115] - v_[274] * v_[262] - v_[162] * v_[227] - v_[271] * v_[246] - v_[284] * v_[276] - v_[187] * v_[205]);
    v_[205] = v_[141] - v_[205] * v_[187];
    v_[276] = v_[100] - v_[276] * v_[187] - v_[206] * v_[205];
    v_[246] = v_[399] - v_[68] * v_[205] - v_[176] * v_[276] - v_[246] * v_[187];
    jac[20] = 0 - v_[246];
    v_[262] = v_[214] - v_[135] * v_[276] - v_[267] * v_[246] - v_[211] * v_[205] - v_[262] * v_[187];
    jac[18] = v_[298] * v_[246] + v_[286] * v_[262] + v_[63] * v_[276] + v_[285] * v_[205] + v_[227] * v_[187] - v_[402];
    jac[19] = 0 - v_[262];
    v_[276] = 0 - v_[276];
    v_[262] = 0.5 * x_in[0];
    v_[246] = cos(v_[262]);
    v_[227] = v_[246] * v_[329];
    v_[262] = sin(v_[262]);
    v_[63] = v_[262] * v_[328];
    v_[285] = 2. * (v_[227] * v_[332] + v_[63] * v_[331]);
    v_[262] = v_[262] * v_[329];
    v_[246] = v_[246] * v_[328];
    v_[328] = v_[262] * v_[331] + v_[246] * v_[332];
    v_[246] = v_[246] * v_[331] - v_[262] * v_[332];
    v_[262] = 2. * v_[246];
    v_[63] = v_[227] * v_[331] - v_[63] * v_[332];
    jac[21] = v_[276] + -9.81 * (v_[285] * v_[328] - v_[262] * v_[63]);
    v_[205] = 0 - v_[205];
    v_[227] = 2. * v_[328];
    jac[22] = v_[205] + -9.81 * (v_[285] * v_[246] + v_[227] * v_[63]);
    v_[187] = 0 - v_[187];
    jac[23] = v_[187] + -9.81 * (1 - v_[262] * v_[246] - v_[227] * v_[328]);
    v_[227] = -1 * jac[18];
    v_[323] = v_[263] * jac[20] + v_[167] * jac[19] + v_[323];
    v_[169] = v_[167] * jac[20] + v_[264] * jac[19] + v_[169];
    v_[264] = 0.207 * jac[20] + -1 * v_[276];
    v_[405] = v_[348] * jac[19] + v_[261] * jac[18] + v_[304] * jac[20] + v_[165] * v_[205] + v_[178] * v_[187] + v_[405];
    jac[24] = (v_[373] - v_[256] * v_[227] - v_[288] * v_[323] - v_[231] * v_[169] - v_[257] * v_[264] - v_[270] * (v_[265] * jac[19] + v_[370] * jac[18] + v_[266] * jac[20] + v_[17] * v_[205] + v_[263] * v_[187] + v_[253]) - v_[258] * v_[405]) / v_[256];
    v_[373] = -1 * v_[323];
    v_[227] = v_[227] + jac[24];
    v_[406] = v_[36] * v_[405] + v_[342] * v_[323] + v_[217] * v_[264] + v_[406];
    v_[405] = v_[217] * v_[405] + v_[247] * v_[323] + v_[242] * v_[264] + v_[404];
    jac[25] = (v_[372] - v_[230] * v_[373] - v_[224] * (v_[217] * v_[227] + v_[243] * v_[169] + v_[344]) - v_[229] * (v_[242] * v_[227] + v_[217] * v_[169] + v_[324]) - v_[239] * v_[406] - v_[237] * v_[405]) / v_[230];
    v_[373] = v_[373] + jac[25];
    jac[26] = (v_[386] - 0.1104774 * (v_[152] * v_[405] + v_[325] * v_[373] + v_[218] * v_[406] + v_[366]) - -0.0004405 * (v_[218] * v_[405] + v_[223] * v_[373] + v_[220] * v_[406] + v_[378]) - 0.026181 * v_[373]) / 0.026181;
    v_[383] = v_[189] * jac[20] + v_[106] * jac[19] + v_[383];
    v_[52] = v_[191] * jac[20] + v_[189] * jac[19] + v_[52];
    v_[191] = 0.207 * jac[20] + v_[276];
    v_[88] = v_[78] * jac[19] + v_[188] * jac[18] + v_[105] * jac[20] + v_[189] * v_[205] + v_[124] * v_[187] + v_[88];
    jac[27] = (v_[98] - v_[183] * jac[18] - v_[215] * v_[383] - v_[158] * v_[52] - v_[184] * v_[191] - v_[196] * (v_[190] * jac[19] + v_[310] * jac[18] + v_[192] * jac[20] + v_[106] * v_[205] + v_[189] * v_[187] + v_[180]) - v_[185] * v_[88]) / v_[183];
    v_[98] = jac[18] + jac[27];
    v_[26] = v_[85] * v_[88] + v_[91] * v_[383] + v_[87] * v_[191] + v_[26];
    v_[88] = v_[90] * v_[88] + v_[175] * v_[383] + v_[292] * v_[191] + v_[309];
    jac[28] = (v_[335] - v_[157] * v_[383] - v_[151] * (v_[173] * v_[98] + v_[170] * v_[52] + v_[382]) - v_[156] * (v_[170] * v_[98] + v_[90] * v_[52] + v_[391]) - v_[166] * v_[26] - v_[164] * v_[88]) / v_[157];
    v_[383] = v_[383] + jac[28];
    jac[29] = (v_[384] - 0.1104774 * (v_[341] * v_[88] + v_[347] * v_[383] + v_[145] * v_[26] + v_[375]) - -0.0004405 * (v_[145] * v_[88] + v_[150] * v_[383] + v_[147] * v_[26] + v_[322]) - 0.026181 * v_[383]) / 0.026181;
    v_[383] = -1 * jac[18];
    v_[379] = v_[118] * jac[20] + v_[24] * jac[19] + v_[379];
    v_[318] = v_[24] * jac[20] + v_[119] * jac[19] + v_[318];
    v_[119] = 0.207 * jac[20] + -1 * v_[276];
    v_[306] = v_[213] * jac[19] + v_[116] * jac[18] + v_[11] * jac[20] + v_[22] * v_[205] + v_[16] * v_[187] + v_[306];
    jac[30] = (v_[381] - v_[111] * v_[383] - v_[143] * v_[379] - v_[80] * v_[318] - v_[112] * v_[119] - v_[125] * (v_[120] * jac[19] + v_[307] * jac[18] + v_[121] * jac[20] + v_[255] * v_[205] + v_[118] * v_[187] + v_[108]) - v_[113] * v_[306]) / v_[111];
    v_[381] = -1 * v_[379];
    v_[383] = v_[383] + jac[30];
    v_[321] = v_[235] * v_[306] + v_[254] * v_[379] + v_[74] * v_[119] + v_[321];
    v_[306] = v_[74] * v_[306] + v_[102] * v_[379] + v_[92] * v_[119] + v_[362];
    jac[31] = (v_[317] - v_[79] * v_[381] - 2.1e-05 * (v_[74] * v_[383] + v_[93] * v_[318] + v_[5]) - -0.000102 * (v_[92] * v_[383] + v_[74] * v_[318] + v_[339]) - v_[89] * v_[321] - v_[86] * v_[306]) / v_[79];
    v_[381] = v_[381] + jac[31];
    jac[32] = (v_[334] - 0.110125 * (v_[1] * v_[306] + v_[312] * v_[381] + v_[77] * v_[321] + v_[349]) - 0.000881 * (v_[77] * v_[306] + v_[76] * v_[381] + v_[75] * v_[321] + v_[338]) - 0.026181 * v_[381]) / 0.026181;
    v_[354] = v_[46] * jac[20] + v_[10] * jac[19] + v_[354];
    v_[308] = v_[48] * jac[20] + v_[46] * jac[19] + v_[308];
    v_[276] = 0.207 * jac[20] + v_[276];
    v_[305] = v_[299] * jac[19] + v_[45] * jac[18] + v_[300] * jac[20] + v_[46] * v_[205] + v_[301] * v_[187] + v_[305];
    jac[33] = (v_[311] - v_[40] * jac[18] - v_[72] * v_[354] - v_[15] * v_[308] - v_[41] * v_[276] - v_[53] * (v_[47] * jac[19] + v_[287] * jac[18] + v_[49] * jac[20] + v_[10] * v_[205] + v_[46] * v_[187] + v_[37]) - v_[42] * v_[305]) / v_[40];
    v_[187] = jac[18] + jac[33];
    v_[352] = v_[313] * v_[305] + v_[314] * v_[354] + v_[315] * v_[276] + v_[352];
    v_[305] = v_[3] * v_[305] + v_[32] * v_[354] + v_[303] * v_[276] + v_[357];
    jac[34] = (v_[350] - v_[14] * v_[354] - v_[0] * (v_[30] * v_[187] + v_[27] * v_[308] + v_[361]) - v_[13] * (v_[27] * v_[187] + v_[3] * v_[308] + v_[359]) - v_[23] * v_[352] - v_[21] * v_[305]) / v_[14];
    v_[354] = v_[354] + jac[34];
    jac[35] = (v_[355] - 0.1104774 * (v_[336] * v_[305] + v_[327] * v_[354] + v_[7] * v_[352] + v_[326]) - 0.0004405 * (v_[7] * v_[305] + v_[2] * v_[354] + v_[6] * v_[352] + v_[351]) - 0.026181 * v_[354]) / 0.026181;
    // dependent variables without operations
    jac[6] = x_in[24];
    jac[7] = x_in[25];
    jac[8] = x_in[26];
    jac[9] = x_in[27];
    jac[10] = x_in[28];
    jac[11] = x_in[29];
    jac[12] = x_in[30];
    jac[13] = x_in[31];
    jac[14] = x_in[32];
    jac[15] = x_in[33];
    jac[16] = x_in[34];
    jac[17] = x_in[35];


 	return jac_;

}


}
}
}



