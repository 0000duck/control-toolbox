/***********************************************************************************
Copyright (c) 2017, Michael Neunert, Markus Giftthaler, Markus St√§uble, Diego Pardo,
Farbod Farshidian. All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice,
      this list of conditions and the following disclaimer in the documentation
      and/or other materials provided with the distribution.
    * Neither the name of ETH ZURICH nor the names of its contributors may be used
      to endorse or promote products derived from this software without specific
      prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
SHALL ETH ZURICH BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
***************************************************************************************/

#include "HyQForwardKinJacReverse.h"

namespace ct {
namespace models {
namespace HyQ {


HyQForwardKinJacReverse::JAC_TYPE HyQForwardKinJacReverse::operator()(const Eigen::VectorXd& x_in)
{
	double* jac = jac_.data();

    v[0] = cos(x_in[7]);
    v[1] = -0.33 * v[0];
    v[2] = sin(x_in[8]);
    v[3] = sin(x_in[7]);
    v[4] = 0.33 * v[3];
    v[5] = cos(x_in[8]);
    v[6] = 0.3735 + v[1] * v[2] - v[4] * v[5] - 0.35 * v[3];
    v[7] = 0 - v[6];
    v[8] = 0.5 * x_in[0];
    v[9] = cos(v[8]);
    v[10] = 0.5 * x_in[1];
    v[11] = cos(v[10]);
    v[12] = v[9] * v[11];
    v[13] = 0.5 * x_in[2];
    v[14] = sin(v[13]);
    v[15] = sin(v[8]);
    v[16] = sin(v[10]);
    v[17] = v[15] * v[16];
    v[18] = cos(v[13]);
    v[19] = v[12] * v[14] + v[17] * v[18];
    v[20] = 2. * v[19];
    v[21] = cos(x_in[6]);
    v[22] = 0.33 * v[21];
    v[23] = v[22] * v[3];
    v[24] = 0.33 * v[21];
    v[25] = v[24] * v[0];
    v[26] = 0.35 * v[21];
    v[27] = v[23] * v[2] - v[25] * v[5] - v[26] * v[0] - 0.08 * v[21];
    v[28] = v[15] * v[11];
    v[29] = v[9] * v[16];
    v[30] = v[28] * v[18] + v[29] * v[14];
    v[31] = sin(x_in[6]);
    v[32] = 0.33 * v[31];
    v[33] = v[32] * v[3];
    v[34] = 0.33 * v[31];
    v[35] = v[34] * v[0];
    v[36] = 0.35 * v[31];
    v[37] = 0.207 + v[33] * v[2] - v[35] * v[5] - v[36] * v[0] - 0.08 * v[31];
    v[38] = 0 - v[37];
    v[39] = v[12] * v[18] - v[17] * v[14];
    v[7] = v[7] * v[20] + (v[7] * v[19] + v[27] * v[30] + v[38] * v[39]) * 2.;
    v[40] = v[29] * v[18] - v[28] * v[14];
    v[41] = 2. * v[40];
    v[38] = v[38] * v[20] + v[27] * v[41];
    v[42] = 0 - v[38];
    v[43] = v[7] * v[18] + v[42] * v[14];
    v[44] = 0 - v[6];
    v[44] = v[44] * v[41] + (v[44] * v[40] + v[37] * v[30] + v[27] * v[39]) * 2.;
    v[45] = 0 - v[44];
    v[46] = v[27] * v[20] + v[37] * v[41];
    v[47] = v[45] * v[14] + v[46] * v[18];
    v[48] = cos(v[8]);
    v[49] = v[44] * v[18] + v[46] * v[14];
    v[50] = v[7] * v[14] + v[38] * v[18];
    v[8] = sin(v[8]);
    jac[0] = ((v[43] * v[16] + v[47] * v[11]) * v[48] - (v[49] * v[16] + v[50] * v[11]) * v[8]) * 0.5;
    v[51] = 0 - v[37];
    v[51] = v[51] * v[20] + (v[51] * v[19] + v[27] * v[40] + v[6] * v[39]) * 2.;
    v[52] = 0 - v[27];
    v[53] = 2. * v[30];
    v[54] = v[6] * v[20] + v[52] * v[53];
    v[55] = 0 - v[54];
    v[56] = v[51] * v[18] + v[55] * v[14];
    v[57] = v[27] * v[20] + v[6] * v[30] * 2.;
    v[58] = 0 - v[57];
    v[59] = 0 - v[37];
    v[59] = v[6] * v[41] + v[59] * v[53] + (v[59] * v[30] + v[52] * v[39]) * 2.;
    v[52] = v[58] * v[14] + v[59] * v[18];
    v[60] = v[57] * v[18] + v[59] * v[14];
    v[61] = v[51] * v[14] + v[54] * v[18];
    jac[1] = ((v[56] * v[16] + v[52] * v[11]) * v[48] - (v[60] * v[16] + v[61] * v[11]) * v[8]) * 0.5;
    v[62] = (v[37] * v[40] + v[6] * v[30]) * 2.;
    v[63] = 0 - v[6];
    v[64] = v[63] * v[41] + v[37] * v[53];
    v[65] = 0 - v[64];
    v[66] = v[62] * v[18] + v[65] * v[14];
    v[67] = 0 - v[27];
    v[67] = v[37] * v[20] + v[67] * v[41] + (v[67] * v[40] + v[63] * v[39]) * 2.;
    v[63] = 0 - v[67];
    v[27] = 0 - v[27];
    v[27] = v[6] * v[20] + v[27] * v[53] + (v[27] * v[30] + v[37] * v[39]) * 2.;
    v[37] = v[63] * v[14] + v[27] * v[18];
    v[6] = v[67] * v[18] + v[27] * v[14];
    v[68] = v[62] * v[14] + v[64] * v[18];
    jac[2] = ((v[66] * v[16] + v[37] * v[11]) * v[48] - (v[6] * v[16] + v[68] * v[11]) * v[8]) * 0.5;
    v[69] = 0.33 * v[3];
    v[70] = 0.33 * v[0];
    v[71] = v[69] * v[2] - v[70] * v[5];
    v[72] = 0.33 * v[3];
    v[73] = 0.33 * v[0];
    v[74] = v[72] * v[2] - v[73] * v[5] - 0.35 * v[0];
    v[75] = 0.33 * v[21];
    v[76] = v[75] * v[3];
    v[77] = 0.33 * v[21];
    v[78] = v[77] * v[0];
    v[79] = 0.35 * v[21];
    v[80] = v[76] * v[2] - v[78] * v[5] - v[79] * v[0] - 0.08 * v[21];
    v[81] = 0.33 * v[31];
    v[82] = v[81] * v[3];
    v[83] = 0.33 * v[31];
    v[84] = v[83] * v[0];
    v[85] = 0.35 * v[31];
    v[86] = 0.207 + v[82] * v[2] - v[84] * v[5] - v[85] * v[0] - 0.08 * v[31];
    v[87] = v[71] * x_in[26] + v[74] * x_in[25] + x_in[21] + x_in[19] * v[80] - x_in[20] * v[86];
    v[88] = 0 - v[87];
    v[89] = 2. * v[19];
    v[90] = 0.33 * v[21];
    v[91] = v[90] * v[3];
    v[92] = 0.33 * v[21];
    v[93] = v[92] * v[0];
    v[94] = 0.35 * v[21];
    v[95] = v[91] * v[5] + v[93] * v[2] + v[94] * v[3];
    v[96] = 0.33 * v[31];
    v[97] = v[96] * v[0];
    v[98] = -0.33 * v[31];
    v[99] = v[98] * v[3];
    v[100] = 0.35 * v[31];
    v[101] = v[97] * v[5] + v[99] * v[2] + v[100] * v[0] + 0.08 * v[31];
    v[102] = 0.33 * v[21];
    v[103] = v[102] * v[0];
    v[104] = 0.33 * v[21];
    v[105] = v[104] * v[3];
    v[106] = v[103] * v[2] + v[105] * v[5];
    v[107] = -0.33 * v[0];
    v[108] = 0.33 * v[3];
    v[109] = 0.3735 + v[107] * v[2] - v[108] * v[5] - 0.35 * v[3];
    v[110] = v[95] * x_in[25] + v[101] * x_in[24] + v[106] * x_in[26] + x_in[23] + x_in[18] * v[86] - x_in[19] * v[109];
    v[111] = 0.33 * v[31];
    v[112] = v[111] * v[3];
    v[113] = 0.33 * v[31];
    v[114] = v[113] * v[0];
    v[115] = 0.35 * v[31];
    v[116] = v[112] * v[5] + v[114] * v[2] + v[115] * v[3];
    v[117] = v[92] * v[3];
    v[118] = 0.33 * v[21];
    v[119] = v[118] * v[0];
    v[120] = 0.35 * v[21];
    v[21] = v[117] * v[2] - v[119] * v[5] - v[120] * v[0] - 0.08 * v[21];
    v[121] = 0.33 * v[31];
    v[122] = v[121] * v[0];
    v[31] = 0.33 * v[31];
    v[123] = v[31] * v[3];
    v[124] = v[122] * v[2] + v[123] * v[5];
    v[125] = v[116] * x_in[25] + v[21] * x_in[24] + v[124] * x_in[26] + x_in[22] + x_in[20] * v[109] - x_in[18] * v[80];
    v[126] = 0 - v[125];
    v[88] = v[88] * v[89] + (v[88] * v[19] + v[110] * v[30] + v[126] * v[39]) * 2.;
    v[127] = 2. * v[40];
    v[126] = v[126] * v[89] + v[110] * v[127];
    v[128] = 0 - v[126];
    v[129] = v[88] * v[18] + v[128] * v[14];
    v[130] = 0 - v[87];
    v[130] = v[130] * v[127] + (v[130] * v[40] + v[125] * v[30] + v[110] * v[39]) * 2.;
    v[131] = 0 - v[130];
    v[132] = v[110] * v[89] + v[125] * v[127];
    v[133] = v[131] * v[14] + v[132] * v[18];
    v[134] = v[130] * v[18] + v[132] * v[14];
    v[135] = v[88] * v[14] + v[126] * v[18];
    jac[3] = ((v[129] * v[16] + v[133] * v[11]) * v[48] - (v[134] * v[16] + v[135] * v[11]) * v[8]) * 0.5;
    v[136] = 0 - v[125];
    v[136] = v[136] * v[89] + (v[136] * v[19] + v[110] * v[40] + v[87] * v[39]) * 2.;
    v[137] = 0 - v[110];
    v[138] = 2. * v[30];
    v[139] = v[87] * v[89] + v[137] * v[138];
    v[140] = 0 - v[139];
    v[141] = v[136] * v[18] + v[140] * v[14];
    v[142] = v[110] * v[89] + v[87] * v[30] * 2.;
    v[143] = 0 - v[142];
    v[144] = 0 - v[125];
    v[144] = v[87] * v[127] + v[144] * v[138] + (v[144] * v[30] + v[137] * v[39]) * 2.;
    v[137] = v[143] * v[14] + v[144] * v[18];
    v[145] = v[142] * v[18] + v[144] * v[14];
    v[146] = v[136] * v[14] + v[139] * v[18];
    jac[4] = ((v[141] * v[16] + v[137] * v[11]) * v[48] - (v[145] * v[16] + v[146] * v[11]) * v[8]) * 0.5;
    v[147] = (v[125] * v[40] + v[87] * v[30]) * 2.;
    v[148] = 0 - v[87];
    v[149] = v[148] * v[127] + v[125] * v[138];
    v[150] = 0 - v[149];
    v[151] = v[147] * v[18] + v[150] * v[14];
    v[152] = 0 - v[110];
    v[152] = v[125] * v[89] + v[152] * v[127] + (v[152] * v[40] + v[148] * v[39]) * 2.;
    v[148] = 0 - v[152];
    v[110] = 0 - v[110];
    v[110] = v[87] * v[89] + v[110] * v[138] + (v[110] * v[30] + v[125] * v[39]) * 2.;
    v[125] = v[148] * v[14] + v[110] * v[18];
    v[87] = v[152] * v[18] + v[110] * v[14];
    v[153] = v[147] * v[14] + v[149] * v[18];
    jac[5] = ((v[151] * v[16] + v[125] * v[11]) * v[48] - (v[87] * v[16] + v[153] * v[11]) * v[8]) * 0.5;
    v[154] = cos(x_in[10]);
    v[155] = -0.33 * v[154];
    v[156] = sin(x_in[11]);
    v[157] = sin(x_in[10]);
    v[158] = 0.33 * v[157];
    v[159] = cos(x_in[11]);
    v[160] = 0.3735 + v[155] * v[156] - v[158] * v[159] - 0.35 * v[157];
    v[161] = 0 - v[160];
    v[162] = 2. * v[19];
    v[163] = cos(x_in[9]);
    v[164] = 0.33 * v[163];
    v[165] = v[164] * v[157];
    v[166] = 0.33 * v[163];
    v[167] = v[166] * v[154];
    v[168] = 0.35 * v[163];
    v[169] = v[165] * v[156] - v[167] * v[159] - v[168] * v[154] - 0.08 * v[163];
    v[170] = sin(x_in[9]);
    v[171] = 0.33 * v[170];
    v[172] = v[171] * v[154];
    v[173] = -0.33 * v[170];
    v[174] = v[173] * v[157];
    v[175] = 0.35 * v[170];
    v[176] = -0.207 + v[172] * v[159] + v[174] * v[156] + v[175] * v[154] + 0.08 * v[170];
    v[177] = 0 - v[176];
    v[161] = v[161] * v[162] + (v[161] * v[19] + v[169] * v[30] + v[177] * v[39]) * 2.;
    v[178] = 2. * v[40];
    v[177] = v[177] * v[162] + v[169] * v[178];
    v[179] = 0 - v[177];
    v[180] = v[161] * v[18] + v[179] * v[14];
    v[181] = 0 - v[160];
    v[181] = v[181] * v[178] + (v[181] * v[40] + v[176] * v[30] + v[169] * v[39]) * 2.;
    v[182] = 0 - v[181];
    v[183] = v[169] * v[162] + v[176] * v[178];
    v[184] = v[182] * v[14] + v[183] * v[18];
    v[185] = v[181] * v[18] + v[183] * v[14];
    v[186] = v[161] * v[14] + v[177] * v[18];
    jac[6] = ((v[180] * v[16] + v[184] * v[11]) * v[48] - (v[185] * v[16] + v[186] * v[11]) * v[8]) * 0.5;
    v[187] = 0 - v[176];
    v[187] = v[187] * v[162] + (v[187] * v[19] + v[169] * v[40] + v[160] * v[39]) * 2.;
    v[188] = 0 - v[169];
    v[189] = 2. * v[30];
    v[190] = v[160] * v[162] + v[188] * v[189];
    v[191] = 0 - v[190];
    v[192] = v[187] * v[18] + v[191] * v[14];
    v[193] = v[169] * v[162] + v[160] * v[30] * 2.;
    v[194] = 0 - v[193];
    v[195] = 0 - v[176];
    v[195] = v[160] * v[178] + v[195] * v[189] + (v[195] * v[30] + v[188] * v[39]) * 2.;
    v[188] = v[194] * v[14] + v[195] * v[18];
    v[196] = v[193] * v[18] + v[195] * v[14];
    v[197] = v[187] * v[14] + v[190] * v[18];
    jac[7] = ((v[192] * v[16] + v[188] * v[11]) * v[48] - (v[196] * v[16] + v[197] * v[11]) * v[8]) * 0.5;
    v[198] = (v[176] * v[40] + v[160] * v[30]) * 2.;
    v[199] = 0 - v[160];
    v[200] = v[199] * v[178] + v[176] * v[189];
    v[201] = 0 - v[200];
    v[202] = v[198] * v[18] + v[201] * v[14];
    v[203] = 0 - v[169];
    v[203] = v[176] * v[162] + v[203] * v[178] + (v[203] * v[40] + v[199] * v[39]) * 2.;
    v[199] = 0 - v[203];
    v[169] = 0 - v[169];
    v[169] = v[160] * v[162] + v[169] * v[189] + (v[169] * v[30] + v[176] * v[39]) * 2.;
    v[176] = v[199] * v[14] + v[169] * v[18];
    v[160] = v[203] * v[18] + v[169] * v[14];
    v[204] = v[198] * v[14] + v[200] * v[18];
    jac[8] = ((v[202] * v[16] + v[176] * v[11]) * v[48] - (v[160] * v[16] + v[204] * v[11]) * v[8]) * 0.5;
    v[205] = 0.33 * v[157];
    v[206] = 0.33 * v[154];
    v[207] = v[205] * v[156] - v[206] * v[159];
    v[208] = 0.33 * v[157];
    v[209] = 0.33 * v[154];
    v[210] = v[208] * v[156] - v[209] * v[159] - 0.35 * v[154];
    v[211] = 0.33 * v[163];
    v[212] = v[211] * v[157];
    v[213] = 0.33 * v[163];
    v[214] = v[213] * v[154];
    v[215] = 0.35 * v[163];
    v[216] = v[212] * v[156] - v[214] * v[159] - v[215] * v[154] - 0.08 * v[163];
    v[217] = 0.33 * v[170];
    v[218] = v[217] * v[154];
    v[219] = -0.33 * v[170];
    v[220] = v[219] * v[157];
    v[221] = 0.35 * v[170];
    v[222] = -0.207 + v[218] * v[159] + v[220] * v[156] + v[221] * v[154] + 0.08 * v[170];
    v[223] = v[207] * x_in[29] + v[210] * x_in[28] + x_in[21] + x_in[19] * v[216] - x_in[20] * v[222];
    v[224] = 0 - v[223];
    v[225] = 2. * v[19];
    v[226] = 0.33 * v[163];
    v[227] = v[226] * v[157];
    v[228] = 0.33 * v[163];
    v[229] = v[228] * v[154];
    v[230] = 0.35 * v[163];
    v[231] = v[227] * v[159] + v[229] * v[156] + v[230] * v[157];
    v[232] = 0.33 * v[170];
    v[233] = v[232] * v[154];
    v[234] = -0.33 * v[170];
    v[235] = v[234] * v[157];
    v[236] = 0.35 * v[170];
    v[237] = v[233] * v[159] + v[235] * v[156] + v[236] * v[154] + 0.08 * v[170];
    v[238] = 0.33 * v[163];
    v[239] = v[238] * v[154];
    v[240] = 0.33 * v[163];
    v[241] = v[240] * v[157];
    v[242] = v[239] * v[156] + v[241] * v[159];
    v[243] = -0.33 * v[154];
    v[244] = 0.33 * v[157];
    v[245] = 0.3735 + v[243] * v[156] - v[244] * v[159] - 0.35 * v[157];
    v[246] = v[231] * x_in[28] + v[237] * x_in[27] + v[242] * x_in[29] + x_in[23] + x_in[18] * v[222] - x_in[19] * v[245];
    v[247] = v[234] * v[154];
    v[248] = v[232] * v[157];
    v[249] = 0.35 * v[170];
    v[250] = v[247] * v[156] - v[248] * v[159] - v[249] * v[157];
    v[251] = v[226] * v[154];
    v[252] = -0.33 * v[163];
    v[253] = v[252] * v[157];
    v[254] = 0.35 * v[163];
    v[163] = v[251] * v[159] + v[253] * v[156] + v[254] * v[154] + 0.08 * v[163];
    v[255] = -0.33 * v[170];
    v[256] = v[255] * v[154];
    v[170] = 0.33 * v[170];
    v[257] = v[170] * v[157];
    v[258] = v[256] * v[156] - v[257] * v[159];
    v[259] = v[250] * x_in[28] + v[163] * x_in[27] + v[258] * x_in[29] + x_in[22] + x_in[20] * v[245] - x_in[18] * v[216];
    v[260] = 0 - v[259];
    v[224] = v[224] * v[225] + (v[224] * v[19] + v[246] * v[30] + v[260] * v[39]) * 2.;
    v[261] = 2. * v[40];
    v[260] = v[260] * v[225] + v[246] * v[261];
    v[262] = 0 - v[260];
    v[263] = v[224] * v[18] + v[262] * v[14];
    v[264] = 0 - v[223];
    v[264] = v[264] * v[261] + (v[264] * v[40] + v[259] * v[30] + v[246] * v[39]) * 2.;
    v[265] = 0 - v[264];
    v[266] = v[246] * v[225] + v[259] * v[261];
    v[267] = v[265] * v[14] + v[266] * v[18];
    v[268] = v[264] * v[18] + v[266] * v[14];
    v[269] = v[224] * v[14] + v[260] * v[18];
    jac[9] = ((v[263] * v[16] + v[267] * v[11]) * v[48] - (v[268] * v[16] + v[269] * v[11]) * v[8]) * 0.5;
    v[270] = 0 - v[259];
    v[270] = v[270] * v[225] + (v[270] * v[19] + v[246] * v[40] + v[223] * v[39]) * 2.;
    v[271] = 0 - v[246];
    v[272] = 2. * v[30];
    v[273] = v[223] * v[225] + v[271] * v[272];
    v[274] = 0 - v[273];
    v[275] = v[270] * v[18] + v[274] * v[14];
    v[276] = v[246] * v[225] + v[223] * v[30] * 2.;
    v[277] = 0 - v[276];
    v[278] = 0 - v[259];
    v[278] = v[223] * v[261] + v[278] * v[272] + (v[278] * v[30] + v[271] * v[39]) * 2.;
    v[271] = v[277] * v[14] + v[278] * v[18];
    v[279] = v[276] * v[18] + v[278] * v[14];
    v[280] = v[270] * v[14] + v[273] * v[18];
    jac[10] = ((v[275] * v[16] + v[271] * v[11]) * v[48] - (v[279] * v[16] + v[280] * v[11]) * v[8]) * 0.5;
    v[281] = (v[259] * v[40] + v[223] * v[30]) * 2.;
    v[282] = 0 - v[223];
    v[283] = v[282] * v[261] + v[259] * v[272];
    v[284] = 0 - v[283];
    v[285] = v[281] * v[18] + v[284] * v[14];
    v[286] = 0 - v[246];
    v[286] = v[259] * v[225] + v[286] * v[261] + (v[286] * v[40] + v[282] * v[39]) * 2.;
    v[282] = 0 - v[286];
    v[246] = 0 - v[246];
    v[246] = v[223] * v[225] + v[246] * v[272] + (v[246] * v[30] + v[259] * v[39]) * 2.;
    v[259] = v[282] * v[14] + v[246] * v[18];
    v[223] = v[286] * v[18] + v[246] * v[14];
    v[287] = v[281] * v[14] + v[283] * v[18];
    jac[11] = ((v[285] * v[16] + v[259] * v[11]) * v[48] - (v[223] * v[16] + v[287] * v[11]) * v[8]) * 0.5;
    v[288] = cos(x_in[13]);
    v[289] = -0.33 * v[288];
    v[290] = sin(x_in[14]);
    v[291] = sin(x_in[13]);
    v[292] = 0.33 * v[291];
    v[293] = cos(x_in[14]);
    v[294] = -0.3735 + v[289] * v[290] - v[292] * v[293] - 0.35 * v[291];
    v[295] = 0 - v[294];
    v[296] = 2. * v[19];
    v[297] = cos(x_in[12]);
    v[298] = 0.33 * v[297];
    v[299] = v[298] * v[291];
    v[300] = 0.33 * v[297];
    v[301] = v[300] * v[288];
    v[302] = 0.35 * v[297];
    v[303] = v[299] * v[290] - v[301] * v[293] - v[302] * v[288] - 0.08 * v[297];
    v[304] = sin(x_in[12]);
    v[305] = 0.33 * v[304];
    v[306] = v[305] * v[291];
    v[307] = 0.33 * v[304];
    v[308] = v[307] * v[288];
    v[309] = 0.35 * v[304];
    v[310] = 0.207 + v[306] * v[290] - v[308] * v[293] - v[309] * v[288] - 0.08 * v[304];
    v[311] = 0 - v[310];
    v[295] = v[295] * v[296] + (v[295] * v[19] + v[303] * v[30] + v[311] * v[39]) * 2.;
    v[312] = 2. * v[40];
    v[311] = v[311] * v[296] + v[303] * v[312];
    v[313] = 0 - v[311];
    v[314] = v[295] * v[18] + v[313] * v[14];
    v[315] = 0 - v[294];
    v[315] = v[315] * v[312] + (v[315] * v[40] + v[310] * v[30] + v[303] * v[39]) * 2.;
    v[316] = 0 - v[315];
    v[317] = v[303] * v[296] + v[310] * v[312];
    v[318] = v[316] * v[14] + v[317] * v[18];
    v[319] = v[315] * v[18] + v[317] * v[14];
    v[320] = v[295] * v[14] + v[311] * v[18];
    jac[12] = ((v[314] * v[16] + v[318] * v[11]) * v[48] - (v[319] * v[16] + v[320] * v[11]) * v[8]) * 0.5;
    v[321] = 0 - v[310];
    v[321] = v[321] * v[296] + (v[321] * v[19] + v[303] * v[40] + v[294] * v[39]) * 2.;
    v[322] = 0 - v[303];
    v[323] = 2. * v[30];
    v[324] = v[294] * v[296] + v[322] * v[323];
    v[325] = 0 - v[324];
    v[326] = v[321] * v[18] + v[325] * v[14];
    v[327] = v[303] * v[296] + v[294] * v[30] * 2.;
    v[328] = 0 - v[327];
    v[329] = 0 - v[310];
    v[329] = v[294] * v[312] + v[329] * v[323] + (v[329] * v[30] + v[322] * v[39]) * 2.;
    v[322] = v[328] * v[14] + v[329] * v[18];
    v[330] = v[327] * v[18] + v[329] * v[14];
    v[331] = v[321] * v[14] + v[324] * v[18];
    jac[13] = ((v[326] * v[16] + v[322] * v[11]) * v[48] - (v[330] * v[16] + v[331] * v[11]) * v[8]) * 0.5;
    v[332] = (v[310] * v[40] + v[294] * v[30]) * 2.;
    v[333] = 0 - v[294];
    v[334] = v[333] * v[312] + v[310] * v[323];
    v[335] = 0 - v[334];
    v[336] = v[332] * v[18] + v[335] * v[14];
    v[337] = 0 - v[303];
    v[337] = v[310] * v[296] + v[337] * v[312] + (v[337] * v[40] + v[333] * v[39]) * 2.;
    v[333] = 0 - v[337];
    v[303] = 0 - v[303];
    v[303] = v[294] * v[296] + v[303] * v[323] + (v[303] * v[30] + v[310] * v[39]) * 2.;
    v[310] = v[333] * v[14] + v[303] * v[18];
    v[294] = v[337] * v[18] + v[303] * v[14];
    v[338] = v[332] * v[14] + v[334] * v[18];
    jac[14] = ((v[336] * v[16] + v[310] * v[11]) * v[48] - (v[294] * v[16] + v[338] * v[11]) * v[8]) * 0.5;
    v[339] = 0.33 * v[291];
    v[340] = 0.33 * v[288];
    v[341] = v[339] * v[290] - v[340] * v[293];
    v[342] = 0.33 * v[291];
    v[343] = 0.33 * v[288];
    v[344] = v[342] * v[290] - v[343] * v[293] - 0.35 * v[288];
    v[345] = 0.33 * v[297];
    v[346] = v[345] * v[291];
    v[347] = 0.33 * v[297];
    v[348] = v[347] * v[288];
    v[349] = 0.35 * v[297];
    v[350] = v[346] * v[290] - v[348] * v[293] - v[349] * v[288] - 0.08 * v[297];
    v[351] = 0.33 * v[304];
    v[352] = v[351] * v[291];
    v[353] = 0.33 * v[304];
    v[354] = v[353] * v[288];
    v[355] = 0.35 * v[304];
    v[356] = 0.207 + v[352] * v[290] - v[354] * v[293] - v[355] * v[288] - 0.08 * v[304];
    v[357] = v[341] * x_in[32] + v[344] * x_in[31] + x_in[21] + x_in[19] * v[350] - x_in[20] * v[356];
    v[358] = 0 - v[357];
    v[359] = 2. * v[19];
    v[360] = 0.33 * v[297];
    v[361] = v[360] * v[291];
    v[362] = 0.33 * v[297];
    v[363] = v[362] * v[288];
    v[364] = 0.35 * v[297];
    v[365] = v[361] * v[293] + v[363] * v[290] + v[364] * v[291];
    v[366] = 0.33 * v[304];
    v[367] = v[366] * v[288];
    v[368] = -0.33 * v[304];
    v[369] = v[368] * v[291];
    v[370] = 0.35 * v[304];
    v[371] = v[367] * v[293] + v[369] * v[290] + v[370] * v[288] + 0.08 * v[304];
    v[372] = 0.33 * v[297];
    v[373] = v[372] * v[288];
    v[374] = 0.33 * v[297];
    v[375] = v[374] * v[291];
    v[376] = v[373] * v[290] + v[375] * v[293];
    v[377] = -0.33 * v[288];
    v[378] = 0.33 * v[291];
    v[379] = -0.3735 + v[377] * v[290] - v[378] * v[293] - 0.35 * v[291];
    v[380] = v[365] * x_in[31] + v[371] * x_in[30] + v[376] * x_in[32] + x_in[23] + x_in[18] * v[356] - x_in[19] * v[379];
    v[381] = v[366] * v[291];
    v[382] = 0.33 * v[304];
    v[383] = v[382] * v[288];
    v[384] = 0.35 * v[304];
    v[385] = v[381] * v[293] + v[383] * v[290] + v[384] * v[291];
    v[386] = v[362] * v[291];
    v[387] = v[360] * v[288];
    v[388] = 0.35 * v[297];
    v[297] = v[386] * v[290] - v[387] * v[293] - v[388] * v[288] - 0.08 * v[297];
    v[389] = 0.33 * v[304];
    v[390] = v[389] * v[288];
    v[304] = 0.33 * v[304];
    v[391] = v[304] * v[291];
    v[392] = v[390] * v[290] + v[391] * v[293];
    v[393] = v[385] * x_in[31] + v[297] * x_in[30] + v[392] * x_in[32] + x_in[22] + x_in[20] * v[379] - x_in[18] * v[350];
    v[394] = 0 - v[393];
    v[358] = v[358] * v[359] + (v[358] * v[19] + v[380] * v[30] + v[394] * v[39]) * 2.;
    v[395] = 2. * v[40];
    v[394] = v[394] * v[359] + v[380] * v[395];
    v[396] = 0 - v[394];
    v[397] = v[358] * v[18] + v[396] * v[14];
    v[398] = 0 - v[357];
    v[398] = v[398] * v[395] + (v[398] * v[40] + v[393] * v[30] + v[380] * v[39]) * 2.;
    v[399] = 0 - v[398];
    v[400] = v[380] * v[359] + v[393] * v[395];
    v[401] = v[399] * v[14] + v[400] * v[18];
    v[402] = v[398] * v[18] + v[400] * v[14];
    v[403] = v[358] * v[14] + v[394] * v[18];
    jac[15] = ((v[397] * v[16] + v[401] * v[11]) * v[48] - (v[402] * v[16] + v[403] * v[11]) * v[8]) * 0.5;
    v[404] = 0 - v[393];
    v[404] = v[404] * v[359] + (v[404] * v[19] + v[380] * v[40] + v[357] * v[39]) * 2.;
    v[405] = 0 - v[380];
    v[406] = 2. * v[30];
    v[407] = v[357] * v[359] + v[405] * v[406];
    v[408] = 0 - v[407];
    v[409] = v[404] * v[18] + v[408] * v[14];
    v[410] = v[380] * v[359] + v[357] * v[30] * 2.;
    v[411] = 0 - v[410];
    v[412] = 0 - v[393];
    v[412] = v[357] * v[395] + v[412] * v[406] + (v[412] * v[30] + v[405] * v[39]) * 2.;
    v[405] = v[411] * v[14] + v[412] * v[18];
    v[413] = v[410] * v[18] + v[412] * v[14];
    v[414] = v[404] * v[14] + v[407] * v[18];
    jac[16] = ((v[409] * v[16] + v[405] * v[11]) * v[48] - (v[413] * v[16] + v[414] * v[11]) * v[8]) * 0.5;
    v[415] = (v[393] * v[40] + v[357] * v[30]) * 2.;
    v[416] = 0 - v[357];
    v[417] = v[416] * v[395] + v[393] * v[406];
    v[418] = 0 - v[417];
    v[419] = v[415] * v[18] + v[418] * v[14];
    v[420] = 0 - v[380];
    v[420] = v[393] * v[359] + v[420] * v[395] + (v[420] * v[40] + v[416] * v[39]) * 2.;
    v[416] = 0 - v[420];
    v[380] = 0 - v[380];
    v[380] = v[357] * v[359] + v[380] * v[406] + (v[380] * v[30] + v[393] * v[39]) * 2.;
    v[393] = v[416] * v[14] + v[380] * v[18];
    v[357] = v[420] * v[18] + v[380] * v[14];
    v[421] = v[415] * v[14] + v[417] * v[18];
    jac[17] = ((v[419] * v[16] + v[393] * v[11]) * v[48] - (v[357] * v[16] + v[421] * v[11]) * v[8]) * 0.5;
    v[422] = cos(x_in[16]);
    v[423] = -0.33 * v[422];
    v[424] = sin(x_in[17]);
    v[425] = sin(x_in[16]);
    v[426] = 0.33 * v[425];
    v[427] = cos(x_in[17]);
    v[428] = -0.3735 + v[423] * v[424] - v[426] * v[427] - 0.35 * v[425];
    v[429] = 0 - v[428];
    v[430] = 2. * v[19];
    v[431] = cos(x_in[15]);
    v[432] = 0.33 * v[431];
    v[433] = v[432] * v[425];
    v[434] = 0.33 * v[431];
    v[435] = v[434] * v[422];
    v[436] = 0.35 * v[431];
    v[437] = v[433] * v[424] - v[435] * v[427] - v[436] * v[422] - 0.08 * v[431];
    v[438] = sin(x_in[15]);
    v[439] = 0.33 * v[438];
    v[440] = v[439] * v[422];
    v[441] = -0.33 * v[438];
    v[442] = v[441] * v[425];
    v[443] = 0.35 * v[438];
    v[444] = -0.207 + v[440] * v[427] + v[442] * v[424] + v[443] * v[422] + 0.08 * v[438];
    v[445] = 0 - v[444];
    v[429] = v[429] * v[430] + (v[429] * v[19] + v[437] * v[30] + v[445] * v[39]) * 2.;
    v[446] = 2. * v[40];
    v[445] = v[445] * v[430] + v[437] * v[446];
    v[447] = 0 - v[445];
    v[448] = v[429] * v[18] + v[447] * v[14];
    v[449] = 0 - v[428];
    v[449] = v[449] * v[446] + (v[449] * v[40] + v[444] * v[30] + v[437] * v[39]) * 2.;
    v[450] = 0 - v[449];
    v[451] = v[437] * v[430] + v[444] * v[446];
    v[452] = v[450] * v[14] + v[451] * v[18];
    v[453] = v[449] * v[18] + v[451] * v[14];
    v[454] = v[429] * v[14] + v[445] * v[18];
    jac[18] = ((v[448] * v[16] + v[452] * v[11]) * v[48] - (v[453] * v[16] + v[454] * v[11]) * v[8]) * 0.5;
    v[455] = 0 - v[444];
    v[455] = v[455] * v[430] + (v[455] * v[19] + v[437] * v[40] + v[428] * v[39]) * 2.;
    v[456] = 0 - v[437];
    v[457] = 2. * v[30];
    v[458] = v[428] * v[430] + v[456] * v[457];
    v[459] = 0 - v[458];
    v[460] = v[455] * v[18] + v[459] * v[14];
    v[461] = v[437] * v[430] + v[428] * v[30] * 2.;
    v[462] = 0 - v[461];
    v[463] = 0 - v[444];
    v[463] = v[428] * v[446] + v[463] * v[457] + (v[463] * v[30] + v[456] * v[39]) * 2.;
    v[456] = v[462] * v[14] + v[463] * v[18];
    v[464] = v[461] * v[18] + v[463] * v[14];
    v[465] = v[455] * v[14] + v[458] * v[18];
    jac[19] = ((v[460] * v[16] + v[456] * v[11]) * v[48] - (v[464] * v[16] + v[465] * v[11]) * v[8]) * 0.5;
    v[466] = (v[444] * v[40] + v[428] * v[30]) * 2.;
    v[467] = 0 - v[428];
    v[468] = v[467] * v[446] + v[444] * v[457];
    v[469] = 0 - v[468];
    v[470] = v[466] * v[18] + v[469] * v[14];
    v[471] = 0 - v[437];
    v[471] = v[444] * v[430] + v[471] * v[446] + (v[471] * v[40] + v[467] * v[39]) * 2.;
    v[467] = 0 - v[471];
    v[437] = 0 - v[437];
    v[437] = v[428] * v[430] + v[437] * v[457] + (v[437] * v[30] + v[444] * v[39]) * 2.;
    v[444] = v[467] * v[14] + v[437] * v[18];
    v[428] = v[471] * v[18] + v[437] * v[14];
    v[472] = v[466] * v[14] + v[468] * v[18];
    jac[20] = ((v[470] * v[16] + v[444] * v[11]) * v[48] - (v[428] * v[16] + v[472] * v[11]) * v[8]) * 0.5;
    v[473] = 0.33 * v[425];
    v[474] = 0.33 * v[422];
    v[475] = v[473] * v[424] - v[474] * v[427];
    v[476] = 0.33 * v[425];
    v[477] = 0.33 * v[422];
    v[478] = v[476] * v[424] - v[477] * v[427] - 0.35 * v[422];
    v[479] = 0.33 * v[431];
    v[480] = v[479] * v[425];
    v[481] = 0.33 * v[431];
    v[482] = v[481] * v[422];
    v[483] = 0.35 * v[431];
    v[484] = v[480] * v[424] - v[482] * v[427] - v[483] * v[422] - 0.08 * v[431];
    v[485] = 0.33 * v[438];
    v[486] = v[485] * v[422];
    v[487] = -0.33 * v[438];
    v[488] = v[487] * v[425];
    v[489] = 0.35 * v[438];
    v[490] = -0.207 + v[486] * v[427] + v[488] * v[424] + v[489] * v[422] + 0.08 * v[438];
    v[491] = v[475] * x_in[35] + v[478] * x_in[34] + x_in[21] + x_in[19] * v[484] - x_in[20] * v[490];
    v[492] = 0 - v[491];
    v[493] = 2. * v[19];
    v[494] = 0.33 * v[431];
    v[495] = v[494] * v[425];
    v[496] = 0.33 * v[431];
    v[497] = v[496] * v[422];
    v[498] = 0.35 * v[431];
    v[499] = v[495] * v[427] + v[497] * v[424] + v[498] * v[425];
    v[500] = 0.33 * v[438];
    v[501] = v[500] * v[422];
    v[502] = -0.33 * v[438];
    v[503] = v[502] * v[425];
    v[504] = 0.35 * v[438];
    v[505] = v[501] * v[427] + v[503] * v[424] + v[504] * v[422] + 0.08 * v[438];
    v[506] = 0.33 * v[431];
    v[507] = v[506] * v[422];
    v[508] = 0.33 * v[431];
    v[509] = v[508] * v[425];
    v[510] = v[507] * v[424] + v[509] * v[427];
    v[511] = -0.33 * v[422];
    v[512] = 0.33 * v[425];
    v[513] = -0.3735 + v[511] * v[424] - v[512] * v[427] - 0.35 * v[425];
    v[514] = v[499] * x_in[34] + v[505] * x_in[33] + v[510] * x_in[35] + x_in[23] + x_in[18] * v[490] - x_in[19] * v[513];
    v[515] = v[502] * v[422];
    v[516] = v[500] * v[425];
    v[517] = 0.35 * v[438];
    v[518] = v[515] * v[424] - v[516] * v[427] - v[517] * v[425];
    v[519] = v[494] * v[422];
    v[520] = -0.33 * v[431];
    v[521] = v[520] * v[425];
    v[522] = 0.35 * v[431];
    v[431] = v[519] * v[427] + v[521] * v[424] + v[522] * v[422] + 0.08 * v[431];
    v[523] = -0.33 * v[438];
    v[524] = v[523] * v[422];
    v[438] = 0.33 * v[438];
    v[525] = v[438] * v[425];
    v[526] = v[524] * v[424] - v[525] * v[427];
    v[527] = v[518] * x_in[34] + v[431] * x_in[33] + v[526] * x_in[35] + x_in[22] + x_in[20] * v[513] - x_in[18] * v[484];
    v[528] = 0 - v[527];
    v[492] = v[492] * v[493] + (v[492] * v[19] + v[514] * v[30] + v[528] * v[39]) * 2.;
    v[529] = 2. * v[40];
    v[528] = v[528] * v[493] + v[514] * v[529];
    v[530] = 0 - v[528];
    v[531] = v[492] * v[18] + v[530] * v[14];
    v[532] = 0 - v[491];
    v[532] = v[532] * v[529] + (v[532] * v[40] + v[527] * v[30] + v[514] * v[39]) * 2.;
    v[533] = 0 - v[532];
    v[534] = v[514] * v[493] + v[527] * v[529];
    v[535] = v[533] * v[14] + v[534] * v[18];
    v[536] = v[532] * v[18] + v[534] * v[14];
    v[537] = v[492] * v[14] + v[528] * v[18];
    jac[21] = ((v[531] * v[16] + v[535] * v[11]) * v[48] - (v[536] * v[16] + v[537] * v[11]) * v[8]) * 0.5;
    v[538] = 0 - v[527];
    v[538] = v[538] * v[493] + (v[538] * v[19] + v[514] * v[40] + v[491] * v[39]) * 2.;
    v[539] = 0 - v[514];
    v[540] = 2. * v[30];
    v[541] = v[491] * v[493] + v[539] * v[540];
    v[542] = 0 - v[541];
    v[543] = v[538] * v[18] + v[542] * v[14];
    v[544] = v[514] * v[493] + v[491] * v[30] * 2.;
    v[545] = 0 - v[544];
    v[546] = 0 - v[527];
    v[546] = v[491] * v[529] + v[546] * v[540] + (v[546] * v[30] + v[539] * v[39]) * 2.;
    v[539] = v[545] * v[14] + v[546] * v[18];
    v[547] = v[544] * v[18] + v[546] * v[14];
    v[548] = v[538] * v[14] + v[541] * v[18];
    jac[22] = ((v[543] * v[16] + v[539] * v[11]) * v[48] - (v[547] * v[16] + v[548] * v[11]) * v[8]) * 0.5;
    v[549] = (v[527] * v[40] + v[491] * v[30]) * 2.;
    v[550] = 0 - v[491];
    v[551] = v[550] * v[529] + v[527] * v[540];
    v[552] = 0 - v[551];
    v[553] = v[549] * v[18] + v[552] * v[14];
    v[554] = 0 - v[514];
    v[554] = v[527] * v[493] + v[554] * v[529] + (v[554] * v[40] + v[550] * v[39]) * 2.;
    v[550] = 0 - v[554];
    v[514] = 0 - v[514];
    v[514] = v[491] * v[493] + v[514] * v[540] + (v[514] * v[30] + v[527] * v[39]) * 2.;
    v[527] = v[550] * v[14] + v[514] * v[18];
    v[491] = v[554] * v[18] + v[514] * v[14];
    v[18] = v[549] * v[14] + v[551] * v[18];
    jac[23] = ((v[553] * v[16] + v[527] * v[11]) * v[48] - (v[491] * v[16] + v[18] * v[11]) * v[8]) * 0.5;
    v[8] = cos(v[10]);
    v[10] = sin(v[10]);
    jac[24] = ((v[43] * v[15] + v[49] * v[9]) * v[8] - (v[47] * v[15] + v[50] * v[9]) * v[10]) * 0.5;
    jac[25] = ((v[56] * v[15] + v[60] * v[9]) * v[8] - (v[52] * v[15] + v[61] * v[9]) * v[10]) * 0.5;
    jac[26] = ((v[66] * v[15] + v[6] * v[9]) * v[8] - (v[37] * v[15] + v[68] * v[9]) * v[10]) * 0.5;
    jac[27] = ((v[129] * v[15] + v[134] * v[9]) * v[8] - (v[133] * v[15] + v[135] * v[9]) * v[10]) * 0.5;
    jac[28] = ((v[141] * v[15] + v[145] * v[9]) * v[8] - (v[137] * v[15] + v[146] * v[9]) * v[10]) * 0.5;
    jac[29] = ((v[151] * v[15] + v[87] * v[9]) * v[8] - (v[125] * v[15] + v[153] * v[9]) * v[10]) * 0.5;
    jac[30] = ((v[180] * v[15] + v[185] * v[9]) * v[8] - (v[184] * v[15] + v[186] * v[9]) * v[10]) * 0.5;
    jac[31] = ((v[192] * v[15] + v[196] * v[9]) * v[8] - (v[188] * v[15] + v[197] * v[9]) * v[10]) * 0.5;
    jac[32] = ((v[202] * v[15] + v[160] * v[9]) * v[8] - (v[176] * v[15] + v[204] * v[9]) * v[10]) * 0.5;
    jac[33] = ((v[263] * v[15] + v[268] * v[9]) * v[8] - (v[267] * v[15] + v[269] * v[9]) * v[10]) * 0.5;
    jac[34] = ((v[275] * v[15] + v[279] * v[9]) * v[8] - (v[271] * v[15] + v[280] * v[9]) * v[10]) * 0.5;
    jac[35] = ((v[285] * v[15] + v[223] * v[9]) * v[8] - (v[259] * v[15] + v[287] * v[9]) * v[10]) * 0.5;
    jac[36] = ((v[314] * v[15] + v[319] * v[9]) * v[8] - (v[318] * v[15] + v[320] * v[9]) * v[10]) * 0.5;
    jac[37] = ((v[326] * v[15] + v[330] * v[9]) * v[8] - (v[322] * v[15] + v[331] * v[9]) * v[10]) * 0.5;
    jac[38] = ((v[336] * v[15] + v[294] * v[9]) * v[8] - (v[310] * v[15] + v[338] * v[9]) * v[10]) * 0.5;
    jac[39] = ((v[397] * v[15] + v[402] * v[9]) * v[8] - (v[401] * v[15] + v[403] * v[9]) * v[10]) * 0.5;
    jac[40] = ((v[409] * v[15] + v[413] * v[9]) * v[8] - (v[405] * v[15] + v[414] * v[9]) * v[10]) * 0.5;
    jac[41] = ((v[419] * v[15] + v[357] * v[9]) * v[8] - (v[393] * v[15] + v[421] * v[9]) * v[10]) * 0.5;
    jac[42] = ((v[448] * v[15] + v[453] * v[9]) * v[8] - (v[452] * v[15] + v[454] * v[9]) * v[10]) * 0.5;
    jac[43] = ((v[460] * v[15] + v[464] * v[9]) * v[8] - (v[456] * v[15] + v[465] * v[9]) * v[10]) * 0.5;
    jac[44] = ((v[470] * v[15] + v[428] * v[9]) * v[8] - (v[444] * v[15] + v[472] * v[9]) * v[10]) * 0.5;
    jac[45] = ((v[531] * v[15] + v[536] * v[9]) * v[8] - (v[535] * v[15] + v[537] * v[9]) * v[10]) * 0.5;
    jac[46] = ((v[543] * v[15] + v[547] * v[9]) * v[8] - (v[539] * v[15] + v[548] * v[9]) * v[10]) * 0.5;
    jac[47] = ((v[553] * v[15] + v[491] * v[9]) * v[8] - (v[527] * v[15] + v[18] * v[9]) * v[10]) * 0.5;
    v[10] = cos(v[13]);
    v[13] = sin(v[13]);
    jac[48] = ((v[7] * v[12] + v[45] * v[28] + v[46] * v[29] + v[42] * v[17]) * v[10] - (v[7] * v[17] + v[44] * v[29] + v[46] * v[28] + v[38] * v[12]) * v[13]) * 0.5;
    jac[49] = ((v[51] * v[12] + v[58] * v[28] + v[59] * v[29] + v[55] * v[17]) * v[10] - (v[51] * v[17] + v[57] * v[29] + v[59] * v[28] + v[54] * v[12]) * v[13]) * 0.5;
    jac[50] = ((v[62] * v[12] + v[63] * v[28] + v[27] * v[29] + v[65] * v[17]) * v[10] - (v[62] * v[17] + v[67] * v[29] + v[27] * v[28] + v[64] * v[12]) * v[13]) * 0.5;
    jac[51] = ((v[88] * v[12] + v[131] * v[28] + v[132] * v[29] + v[128] * v[17]) * v[10] - (v[88] * v[17] + v[130] * v[29] + v[132] * v[28] + v[126] * v[12]) * v[13]) * 0.5;
    jac[52] = ((v[136] * v[12] + v[143] * v[28] + v[144] * v[29] + v[140] * v[17]) * v[10] - (v[136] * v[17] + v[142] * v[29] + v[144] * v[28] + v[139] * v[12]) * v[13]) * 0.5;
    jac[53] = ((v[147] * v[12] + v[148] * v[28] + v[110] * v[29] + v[150] * v[17]) * v[10] - (v[147] * v[17] + v[152] * v[29] + v[110] * v[28] + v[149] * v[12]) * v[13]) * 0.5;
    jac[54] = ((v[161] * v[12] + v[182] * v[28] + v[183] * v[29] + v[179] * v[17]) * v[10] - (v[161] * v[17] + v[181] * v[29] + v[183] * v[28] + v[177] * v[12]) * v[13]) * 0.5;
    jac[55] = ((v[187] * v[12] + v[194] * v[28] + v[195] * v[29] + v[191] * v[17]) * v[10] - (v[187] * v[17] + v[193] * v[29] + v[195] * v[28] + v[190] * v[12]) * v[13]) * 0.5;
    jac[56] = ((v[198] * v[12] + v[199] * v[28] + v[169] * v[29] + v[201] * v[17]) * v[10] - (v[198] * v[17] + v[203] * v[29] + v[169] * v[28] + v[200] * v[12]) * v[13]) * 0.5;
    jac[57] = ((v[224] * v[12] + v[265] * v[28] + v[266] * v[29] + v[262] * v[17]) * v[10] - (v[224] * v[17] + v[264] * v[29] + v[266] * v[28] + v[260] * v[12]) * v[13]) * 0.5;
    jac[58] = ((v[270] * v[12] + v[277] * v[28] + v[278] * v[29] + v[274] * v[17]) * v[10] - (v[270] * v[17] + v[276] * v[29] + v[278] * v[28] + v[273] * v[12]) * v[13]) * 0.5;
    jac[59] = ((v[281] * v[12] + v[282] * v[28] + v[246] * v[29] + v[284] * v[17]) * v[10] - (v[281] * v[17] + v[286] * v[29] + v[246] * v[28] + v[283] * v[12]) * v[13]) * 0.5;
    jac[60] = ((v[295] * v[12] + v[316] * v[28] + v[317] * v[29] + v[313] * v[17]) * v[10] - (v[295] * v[17] + v[315] * v[29] + v[317] * v[28] + v[311] * v[12]) * v[13]) * 0.5;
    jac[61] = ((v[321] * v[12] + v[328] * v[28] + v[329] * v[29] + v[325] * v[17]) * v[10] - (v[321] * v[17] + v[327] * v[29] + v[329] * v[28] + v[324] * v[12]) * v[13]) * 0.5;
    jac[62] = ((v[332] * v[12] + v[333] * v[28] + v[303] * v[29] + v[335] * v[17]) * v[10] - (v[332] * v[17] + v[337] * v[29] + v[303] * v[28] + v[334] * v[12]) * v[13]) * 0.5;
    jac[63] = ((v[358] * v[12] + v[399] * v[28] + v[400] * v[29] + v[396] * v[17]) * v[10] - (v[358] * v[17] + v[398] * v[29] + v[400] * v[28] + v[394] * v[12]) * v[13]) * 0.5;
    jac[64] = ((v[404] * v[12] + v[411] * v[28] + v[412] * v[29] + v[408] * v[17]) * v[10] - (v[404] * v[17] + v[410] * v[29] + v[412] * v[28] + v[407] * v[12]) * v[13]) * 0.5;
    jac[65] = ((v[415] * v[12] + v[416] * v[28] + v[380] * v[29] + v[418] * v[17]) * v[10] - (v[415] * v[17] + v[420] * v[29] + v[380] * v[28] + v[417] * v[12]) * v[13]) * 0.5;
    jac[66] = ((v[429] * v[12] + v[450] * v[28] + v[451] * v[29] + v[447] * v[17]) * v[10] - (v[429] * v[17] + v[449] * v[29] + v[451] * v[28] + v[445] * v[12]) * v[13]) * 0.5;
    jac[67] = ((v[455] * v[12] + v[462] * v[28] + v[463] * v[29] + v[459] * v[17]) * v[10] - (v[455] * v[17] + v[461] * v[29] + v[463] * v[28] + v[458] * v[12]) * v[13]) * 0.5;
    jac[68] = ((v[466] * v[12] + v[467] * v[28] + v[437] * v[29] + v[469] * v[17]) * v[10] - (v[466] * v[17] + v[471] * v[29] + v[437] * v[28] + v[468] * v[12]) * v[13]) * 0.5;
    jac[69] = ((v[492] * v[12] + v[533] * v[28] + v[534] * v[29] + v[530] * v[17]) * v[10] - (v[492] * v[17] + v[532] * v[29] + v[534] * v[28] + v[528] * v[12]) * v[13]) * 0.5;
    jac[70] = ((v[538] * v[12] + v[545] * v[28] + v[546] * v[29] + v[542] * v[17]) * v[10] - (v[538] * v[17] + v[544] * v[29] + v[546] * v[28] + v[541] * v[12]) * v[13]) * 0.5;
    jac[71] = ((v[549] * v[12] + v[550] * v[28] + v[514] * v[29] + v[552] * v[17]) * v[10] - (v[549] * v[17] + v[554] * v[29] + v[514] * v[28] + v[551] * v[12]) * v[13]) * 0.5;
    v[13] = v[20] * v[30];
    v[10] = v[41] * v[39];
    v[514] = v[13] + v[10];
    v[550] = 0 - v[514];
    v[554] = 0 - v[514];
    v[552] = v[554] * v[5];
    v[551] = v[514] * v[2];
    v[549] = sin(x_in[6]);
    v[29] = v[41] * v[30];
    v[28] = v[20] * v[39];
    v[17] = v[29] - v[28];
    v[12] = 0 - v[17];
    v[546] = 0 - v[17];
    v[545] = v[546] * v[5];
    v[544] = v[17] * v[2];
    v[542] = cos(x_in[6]);
    jac[144] = 0 - ((0 - v[514]) * 0.08 + v[550] * v[0] * 0.35 + v[552] * v[0] * 0.33 + v[551] * v[3] * 0.33) * v[549] + ((0 - v[17]) * 0.08 + v[12] * v[0] * 0.35 + v[545] * v[0] * 0.33 + v[544] * v[3] * 0.33) * v[542];
    v[541] = v[20] * v[40];
    v[538] = v[53] * v[39];
    v[534] = v[541] - v[538];
    v[533] = 0 - v[534];
    v[532] = 0 - v[534];
    v[530] = v[532] * v[5];
    v[528] = v[534] * v[2];
    v[20] = v[20] * v[19];
    v[53] = v[53] * v[30];
    v[492] = 1 - v[20] - v[53];
    v[437] = 0 - v[492];
    v[467] = 0 - v[492];
    v[471] = v[467] * v[5];
    v[469] = v[492] * v[2];
    jac[145] = 0 - ((0 - v[534]) * 0.08 + v[533] * v[0] * 0.35 + v[530] * v[0] * 0.33 + v[528] * v[3] * 0.33) * v[549] + ((0 - v[492]) * 0.08 + v[437] * v[0] * 0.35 + v[471] * v[0] * 0.33 + v[469] * v[3] * 0.33) * v[542];
    v[41] = v[41] * v[40];
    v[53] = 1 - v[41] - v[53];
    v[468] = 0 - v[53];
    v[466] = 0 - v[53];
    v[463] = v[466] * v[5];
    v[462] = v[53] * v[2];
    v[538] = v[541] + v[538];
    v[541] = 0 - v[538];
    v[461] = 0 - v[538];
    v[459] = v[461] * v[5];
    v[458] = v[538] * v[2];
    jac[146] = 0 - ((0 - v[53]) * 0.08 + v[468] * v[0] * 0.35 + v[463] * v[0] * 0.33 + v[462] * v[3] * 0.33) * v[549] + ((0 - v[538]) * 0.08 + v[541] * v[0] * 0.35 + v[459] * v[0] * 0.33 + v[458] * v[3] * 0.33) * v[542];
    v[455] = v[127] * v[30];
    v[451] = v[89] * v[39];
    jac[531] = v[455] - v[451];
    jac[508] = v[455] + v[451];
    v[451] = 0 - jac[531];
    v[455] = v[89] * v[19];
    v[450] = v[127] * v[40];
    jac[507] = 1 - v[455] - v[450];
    v[449] = v[451] * x_in[18] + jac[507] * x_in[19];
    v[447] = 0 - v[449];
    v[445] = 0 - v[449];
    v[429] = v[445] * v[5];
    v[380] = v[449] * v[2];
    v[416] = v[89] * v[30];
    v[127] = v[127] * v[39];
    jac[555] = v[416] + v[127];
    jac[435] = jac[555] * v[86] + v[451] * v[80];
    jac[509] = v[416] - v[127];
    jac[579] = jac[555] * v[101] + jac[531] * v[21];
    jac[603] = jac[555] * v[95] + jac[531] * v[116] + jac[507] * v[74];
    jac[627] = jac[555] * v[106] + jac[531] * v[124] + jac[507] * v[71];
    v[127] = jac[555] * x_in[26];
    v[416] = v[127] * v[5];
    v[451] = v[127] * v[2];
    v[420] = jac[555] * x_in[25];
    v[418] = v[420] * v[5];
    v[417] = jac[531] * x_in[24];
    v[415] = 0 - v[417];
    v[412] = 0 - v[417];
    v[411] = v[412] * v[5];
    v[410] = v[420] * v[2];
    v[408] = v[417] * v[2];
    v[407] = 0 - jac[507];
    jac[483] = jac[531] * v[109] + v[407] * v[86];
    v[407] = jac[555] * x_in[18] + v[407] * x_in[20];
    v[404] = 0 - v[407];
    v[400] = 0 - v[407];
    v[399] = v[400] * v[5];
    v[398] = v[407] * v[2];
    v[396] = jac[555] * x_in[24];
    v[394] = v[396] * v[5];
    v[358] = v[396] * v[2];
    v[303] = jac[531] * x_in[26];
    v[333] = v[303] * v[5];
    v[337] = v[303] * v[2];
    v[335] = jac[531] * x_in[25];
    v[334] = v[335] * v[5];
    v[332] = v[335] * v[2];
    jac[147] = 0 - ((0 - v[449]) * 0.08 + v[447] * v[0] * 0.35 + v[429] * v[0] * 0.33 + v[380] * v[3] * 0.33 + v[416] * v[3] * 0.33 + v[451] * v[0] * 0.33 + v[420] * v[3] * 0.35 + v[418] * v[3] * 0.33 + (0 - v[417]) * 0.08 + v[415] * v[0] * 0.35 + v[411] * v[0] * 0.33 + (v[410] * v[0] + v[408] * v[3]) * 0.33) * v[549] + ((0 - v[407]) * 0.08 + v[404] * v[0] * 0.35 + v[399] * v[0] * 0.33 + v[398] * v[3] * 0.33 + v[396] * 0.08 + v[396] * v[0] * 0.35 + v[394] * v[0] * 0.33 + v[358] * v[3] * -0.33 + v[333] * v[3] * 0.33 + v[337] * v[0] * 0.33 + v[335] * v[3] * 0.35 + v[334] * v[3] * 0.33 + v[332] * v[0] * 0.33) * v[542];
    v[329] = v[138] * v[30];
    jac[532] = 1 - v[455] - v[329];
    jac[557] = 1 - v[450] - v[329];
    v[329] = 0 - jac[532];
    v[450] = v[329] * x_in[18] + jac[508] * x_in[19];
    v[455] = 0 - v[450];
    v[328] = 0 - v[450];
    v[327] = v[328] * v[5];
    v[325] = v[450] * v[2];
    v[89] = v[89] * v[40];
    v[138] = v[138] * v[39];
    jac[556] = v[89] - v[138];
    jac[436] = jac[556] * v[86] + v[329] * v[80];
    jac[533] = v[89] + v[138];
    jac[580] = jac[556] * v[101] + jac[532] * v[21];
    jac[581] = jac[557] * v[101] + jac[533] * v[21];
    jac[604] = jac[556] * v[95] + jac[532] * v[116] + jac[508] * v[74];
    jac[605] = jac[557] * v[95] + jac[533] * v[116] + jac[509] * v[74];
    jac[628] = jac[556] * v[106] + jac[532] * v[124] + jac[508] * v[71];
    jac[629] = jac[557] * v[106] + jac[533] * v[124] + jac[509] * v[71];
    v[124] = jac[556] * x_in[26];
    v[106] = v[124] * v[5];
    v[71] = v[124] * v[2];
    v[116] = jac[556] * x_in[25];
    v[95] = v[116] * v[5];
    v[74] = jac[532] * x_in[24];
    v[21] = 0 - v[74];
    v[101] = 0 - v[74];
    v[138] = v[101] * v[5];
    v[89] = v[116] * v[2];
    v[329] = v[74] * v[2];
    v[324] = 0 - jac[508];
    jac[484] = jac[532] * v[109] + v[324] * v[86];
    v[324] = jac[556] * x_in[18] + v[324] * x_in[20];
    v[321] = 0 - v[324];
    v[317] = 0 - v[324];
    v[316] = v[317] * v[5];
    v[315] = v[324] * v[2];
    v[313] = jac[556] * x_in[24];
    v[311] = v[313] * v[5];
    v[295] = v[313] * v[2];
    v[246] = jac[532] * x_in[26];
    v[282] = v[246] * v[5];
    v[286] = v[246] * v[2];
    v[284] = jac[532] * x_in[25];
    v[283] = v[284] * v[5];
    v[281] = v[284] * v[2];
    jac[148] = 0 - ((0 - v[450]) * 0.08 + v[455] * v[0] * 0.35 + v[327] * v[0] * 0.33 + v[325] * v[3] * 0.33 + v[106] * v[3] * 0.33 + v[71] * v[0] * 0.33 + v[116] * v[3] * 0.35 + v[95] * v[3] * 0.33 + (0 - v[74]) * 0.08 + v[21] * v[0] * 0.35 + v[138] * v[0] * 0.33 + (v[89] * v[0] + v[329] * v[3]) * 0.33) * v[549] + ((0 - v[324]) * 0.08 + v[321] * v[0] * 0.35 + v[316] * v[0] * 0.33 + v[315] * v[3] * 0.33 + v[313] * 0.08 + v[313] * v[0] * 0.35 + v[311] * v[0] * 0.33 + v[295] * v[3] * -0.33 + v[282] * v[3] * 0.33 + v[286] * v[0] * 0.33 + v[284] * v[3] * 0.35 + v[283] * v[3] * 0.33 + v[281] * v[0] * 0.33) * v[542];
    v[278] = 0 - jac[533];
    v[277] = v[278] * x_in[18] + jac[509] * x_in[19];
    v[276] = 0 - v[277];
    v[274] = 0 - v[277];
    v[273] = v[274] * v[5];
    v[270] = v[277] * v[2];
    jac[437] = jac[557] * v[86] + v[278] * v[80];
    v[278] = jac[557] * x_in[26];
    v[266] = v[278] * v[5];
    v[265] = v[278] * v[2];
    v[264] = jac[557] * x_in[25];
    v[262] = v[264] * v[5];
    v[260] = jac[533] * x_in[24];
    v[224] = 0 - v[260];
    v[169] = 0 - v[260];
    v[199] = v[169] * v[5];
    v[203] = v[264] * v[2];
    v[201] = v[260] * v[2];
    v[200] = 0 - jac[509];
    jac[485] = jac[533] * v[109] + v[200] * v[86];
    v[200] = jac[557] * x_in[18] + v[200] * x_in[20];
    v[86] = 0 - v[200];
    v[198] = 0 - v[200];
    v[195] = v[198] * v[5];
    v[194] = v[200] * v[2];
    v[193] = jac[557] * x_in[24];
    v[191] = v[193] * v[5];
    v[190] = v[193] * v[2];
    v[187] = jac[533] * x_in[26];
    v[183] = v[187] * v[5];
    v[182] = v[187] * v[2];
    v[181] = jac[533] * x_in[25];
    v[179] = v[181] * v[5];
    v[177] = v[181] * v[2];
    jac[149] = 0 - ((0 - v[277]) * 0.08 + v[276] * v[0] * 0.35 + v[273] * v[0] * 0.33 + v[270] * v[3] * 0.33 + v[266] * v[3] * 0.33 + v[265] * v[0] * 0.33 + v[264] * v[3] * 0.35 + v[262] * v[3] * 0.33 + (0 - v[260]) * 0.08 + v[224] * v[0] * 0.35 + v[199] * v[0] * 0.33 + (v[203] * v[0] + v[201] * v[3]) * 0.33) * v[549] + ((0 - v[200]) * 0.08 + v[86] * v[0] * 0.35 + v[195] * v[0] * 0.33 + v[194] * v[3] * 0.33 + v[193] * 0.08 + v[193] * v[0] * 0.35 + v[191] * v[0] * 0.33 + v[190] * v[3] * -0.33 + v[183] * v[3] * 0.33 + v[182] * v[0] * 0.33 + v[181] * v[3] * 0.35 + v[179] * v[3] * 0.33 + v[177] * v[0] * 0.33) * v[542];
    v[41] = 1 - v[20] - v[41];
    v[20] = sin(x_in[7]);
    v[542] = 0 - v[41];
    v[549] = cos(x_in[7]);
    jac[168] = 0 - (v[550] * v[26] + v[552] * v[24] + v[12] * v[36] + v[545] * v[34] + v[41] * v[2] * -0.33) * v[20] + (v[551] * v[22] + v[544] * v[32] + (0 - v[41]) * 0.35 + v[542] * v[5] * 0.33) * v[549];
    v[28] = v[29] + v[28];
    v[29] = 0 - v[28];
    jac[169] = 0 - (v[533] * v[26] + v[530] * v[24] + v[437] * v[36] + v[471] * v[34] + v[28] * v[2] * -0.33) * v[20] + (v[528] * v[22] + v[469] * v[32] + (0 - v[28]) * 0.35 + v[29] * v[5] * 0.33) * v[549];
    v[10] = v[13] - v[10];
    v[13] = 0 - v[10];
    jac[170] = 0 - (v[468] * v[26] + v[463] * v[24] + v[541] * v[36] + v[459] * v[34] + v[10] * v[2] * -0.33) * v[20] + (v[462] * v[22] + v[458] * v[32] + (0 - v[10]) * 0.35 + v[13] * v[5] * 0.33) * v[549];
    v[458] = 0 - jac[555];
    jac[459] = v[458] * v[109] + jac[507] * v[80];
    v[458] = v[458] * x_in[19] + jac[531] * x_in[20];
    v[459] = jac[507] * x_in[26];
    v[541] = 0 - v[459];
    v[462] = jac[507] * x_in[25];
    v[463] = 0 - v[462];
    v[468] = 0 - v[458];
    jac[171] = 0 - (v[447] * v[79] + v[429] * v[77] + v[404] * v[85] + v[399] * v[83] + v[458] * v[2] * -0.33 + v[451] * v[102] + v[410] * v[92] + v[396] * v[100] + v[394] * v[96] + v[337] * v[121] + v[332] * v[113] + v[415] * v[120] + v[411] * v[118] + v[541] * v[5] * 0.33 + (0 - v[462]) * 0.35 + v[463] * v[5] * 0.33) * v[20] + (v[380] * v[75] + v[398] * v[81] + (0 - v[458]) * 0.35 + v[468] * v[5] * 0.33 + v[416] * v[104] + v[420] * v[94] + v[418] * v[90] + v[358] * v[98] + v[333] * v[31] + v[335] * v[115] + v[334] * v[111] + v[408] * v[92] + v[459] * v[2] * 0.33 + v[462] * v[2] * 0.33) * v[549];
    v[332] = 0 - jac[556];
    jac[460] = v[332] * v[109] + jac[508] * v[80];
    v[332] = v[332] * x_in[19] + jac[532] * x_in[20];
    v[334] = jac[508] * x_in[26];
    v[337] = 0 - v[334];
    v[333] = jac[508] * x_in[25];
    v[358] = 0 - v[333];
    v[394] = 0 - v[332];
    jac[172] = 0 - (v[455] * v[79] + v[327] * v[77] + v[321] * v[85] + v[316] * v[83] + v[332] * v[2] * -0.33 + v[71] * v[102] + v[89] * v[92] + v[313] * v[100] + v[311] * v[96] + v[286] * v[121] + v[281] * v[113] + v[21] * v[120] + v[138] * v[118] + v[337] * v[5] * 0.33 + (0 - v[333]) * 0.35 + v[358] * v[5] * 0.33) * v[20] + (v[325] * v[75] + v[315] * v[81] + (0 - v[332]) * 0.35 + v[394] * v[5] * 0.33 + v[106] * v[104] + v[116] * v[94] + v[95] * v[90] + v[295] * v[98] + v[282] * v[31] + v[284] * v[115] + v[283] * v[111] + v[329] * v[92] + v[334] * v[2] * 0.33 + v[333] * v[2] * 0.33) * v[549];
    v[281] = 0 - jac[557];
    jac[461] = v[281] * v[109] + jac[509] * v[80];
    v[281] = v[281] * x_in[19] + jac[533] * x_in[20];
    v[109] = jac[509] * x_in[26];
    v[80] = 0 - v[109];
    v[283] = jac[509] * x_in[25];
    v[286] = 0 - v[283];
    v[282] = 0 - v[281];
    jac[173] = 0 - (v[276] * v[79] + v[273] * v[77] + v[86] * v[85] + v[195] * v[83] + v[281] * v[2] * -0.33 + v[265] * v[102] + v[203] * v[92] + v[193] * v[100] + v[191] * v[96] + v[182] * v[121] + v[177] * v[113] + v[224] * v[120] + v[199] * v[118] + v[80] * v[5] * 0.33 + (0 - v[283]) * 0.35 + v[286] * v[5] * 0.33) * v[20] + (v[270] * v[75] + v[194] * v[81] + (0 - v[281]) * 0.35 + v[282] * v[5] * 0.33 + v[266] * v[104] + v[264] * v[94] + v[262] * v[90] + v[190] * v[98] + v[183] * v[31] + v[181] * v[115] + v[179] * v[111] + v[201] * v[92] + v[109] * v[2] * 0.33 + v[283] * v[2] * 0.33) * v[549];
    v[549] = sin(x_in[8]);
    v[20] = cos(x_in[8]);
    jac[192] = 0 - (v[554] * v[25] + v[546] * v[35] + v[542] * v[4]) * v[549] + (v[514] * v[23] + v[17] * v[33] + v[41] * v[1]) * v[20];
    jac[193] = 0 - (v[532] * v[25] + v[467] * v[35] + v[29] * v[4]) * v[549] + (v[534] * v[23] + v[492] * v[33] + v[28] * v[1]) * v[20];
    jac[194] = 0 - (v[466] * v[25] + v[461] * v[35] + v[13] * v[4]) * v[549] + (v[53] * v[23] + v[538] * v[33] + v[10] * v[1]) * v[20];
    jac[195] = 0 - (v[445] * v[78] + v[400] * v[84] + v[468] * v[108] + v[127] * v[105] + v[420] * v[91] + v[396] * v[97] + v[303] * v[123] + v[335] * v[112] + v[412] * v[119] + v[541] * v[70] + v[463] * v[73]) * v[549] + (v[449] * v[76] + v[407] * v[82] + v[458] * v[107] + v[127] * v[103] + v[420] * v[93] + v[396] * v[99] + v[303] * v[122] + v[335] * v[114] + v[417] * v[117] + v[459] * v[69] + v[462] * v[72]) * v[20];
    jac[196] = 0 - (v[328] * v[78] + v[317] * v[84] + v[394] * v[108] + v[124] * v[105] + v[116] * v[91] + v[313] * v[97] + v[246] * v[123] + v[284] * v[112] + v[101] * v[119] + v[337] * v[70] + v[358] * v[73]) * v[549] + (v[450] * v[76] + v[324] * v[82] + v[332] * v[107] + v[124] * v[103] + v[116] * v[93] + v[313] * v[99] + v[246] * v[122] + v[284] * v[114] + v[74] * v[117] + v[334] * v[69] + v[333] * v[72]) * v[20];
    jac[197] = 0 - (v[274] * v[78] + v[198] * v[84] + v[282] * v[108] + v[278] * v[105] + v[264] * v[91] + v[193] * v[97] + v[187] * v[123] + v[181] * v[112] + v[169] * v[119] + v[80] * v[70] + v[286] * v[73]) * v[549] + (v[277] * v[76] + v[200] * v[82] + v[281] * v[107] + v[278] * v[103] + v[264] * v[93] + v[193] * v[99] + v[187] * v[122] + v[181] * v[114] + v[260] * v[117] + v[109] * v[69] + v[283] * v[72]) * v[20];
    v[20] = v[162] * v[30];
    v[549] = v[178] * v[39];
    v[282] = v[20] + v[549];
    v[286] = 0 - v[282];
    v[283] = 0 - v[282];
    v[80] = v[283] * v[159];
    v[109] = v[282] * v[156];
    v[281] = sin(x_in[9]);
    v[181] = v[178] * v[30];
    v[187] = v[162] * v[39];
    v[193] = v[181] - v[187];
    v[198] = v[193] * v[159];
    v[200] = v[193] * v[156];
    v[169] = cos(x_in[9]);
    jac[222] = 0 - ((0 - v[282]) * 0.08 + v[286] * v[154] * 0.35 + v[80] * v[154] * 0.33 + v[109] * v[157] * 0.33) * v[281] + (v[193] * 0.08 + v[193] * v[154] * 0.35 + v[198] * v[154] * 0.33 + v[200] * v[157] * -0.33) * v[169];
    v[260] = v[162] * v[40];
    v[264] = v[189] * v[39];
    v[278] = v[260] - v[264];
    v[274] = 0 - v[278];
    v[277] = 0 - v[278];
    v[123] = v[277] * v[159];
    v[122] = v[278] * v[156];
    v[162] = v[162] * v[19];
    v[189] = v[189] * v[30];
    v[119] = 1 - v[162] - v[189];
    v[117] = v[119] * v[159];
    v[114] = v[119] * v[156];
    jac[223] = 0 - ((0 - v[278]) * 0.08 + v[274] * v[154] * 0.35 + v[123] * v[154] * 0.33 + v[122] * v[157] * 0.33) * v[281] + (v[119] * 0.08 + v[119] * v[154] * 0.35 + v[117] * v[154] * 0.33 + v[114] * v[157] * -0.33) * v[169];
    v[178] = v[178] * v[40];
    v[189] = 1 - v[178] - v[189];
    v[112] = 0 - v[189];
    v[108] = 0 - v[189];
    v[107] = v[108] * v[159];
    v[105] = v[189] * v[156];
    v[264] = v[260] + v[264];
    v[260] = v[264] * v[159];
    v[103] = v[264] * v[156];
    jac[224] = 0 - ((0 - v[189]) * 0.08 + v[112] * v[154] * 0.35 + v[107] * v[154] * 0.33 + v[105] * v[157] * 0.33) * v[281] + (v[264] * 0.08 + v[264] * v[154] * 0.35 + v[260] * v[154] * 0.33 + v[103] * v[157] * -0.33) * v[169];
    v[99] = v[261] * v[30];
    v[97] = v[225] * v[39];
    jac[537] = v[99] - v[97];
    jac[514] = v[99] + v[97];
    v[97] = 0 - jac[537];
    v[99] = v[225] * v[19];
    v[93] = v[261] * v[40];
    jac[513] = 1 - v[99] - v[93];
    v[91] = v[97] * x_in[18] + jac[513] * x_in[19];
    v[84] = 0 - v[91];
    v[82] = 0 - v[91];
    v[78] = v[82] * v[159];
    v[76] = v[91] * v[156];
    v[73] = v[225] * v[30];
    v[261] = v[261] * v[39];
    jac[561] = v[73] + v[261];
    jac[441] = jac[561] * v[222] + v[97] * v[216];
    jac[515] = v[73] - v[261];
    jac[657] = jac[561] * v[237] + jac[537] * v[163];
    jac[681] = jac[561] * v[231] + jac[537] * v[250] + jac[513] * v[210];
    jac[705] = jac[561] * v[242] + jac[537] * v[258] + jac[513] * v[207];
    v[261] = jac[561] * x_in[29];
    v[73] = v[261] * v[159];
    v[97] = v[261] * v[156];
    v[72] = jac[561] * x_in[28];
    v[70] = v[72] * v[156];
    v[69] = jac[537] * x_in[27];
    v[394] = v[72] * v[159];
    v[358] = v[69] * v[159];
    v[333] = v[69] * v[156];
    v[337] = 0 - jac[513];
    jac[489] = jac[537] * v[245] + v[337] * v[222];
    v[337] = jac[561] * x_in[18] + v[337] * x_in[20];
    v[334] = v[337] * v[159];
    v[332] = v[337] * v[156];
    v[284] = jac[561] * x_in[27];
    v[246] = jac[537] * x_in[29];
    v[313] = 0 - v[246];
    v[317] = v[313] * v[159];
    v[324] = v[246] * v[156];
    v[101] = jac[537] * x_in[28];
    v[74] = 0 - v[101];
    v[116] = v[284] * v[159];
    v[124] = 0 - v[101];
    v[328] = v[124] * v[159];
    v[450] = v[284] * v[156];
    v[468] = v[101] * v[156];
    jac[225] = 0 - ((0 - v[91]) * 0.08 + v[84] * v[154] * 0.35 + v[78] * v[154] * 0.33 + v[76] * v[157] * 0.33 + v[73] * v[157] * 0.33 + v[97] * v[154] * 0.33 + v[72] * v[157] * 0.35 + v[70] * v[154] * 0.33 + v[69] * 0.08 + v[69] * v[154] * 0.35 + (v[394] * v[157] + v[358] * v[154]) * 0.33 + v[333] * v[157] * -0.33) * v[281] + (v[337] * 0.08 + v[337] * v[154] * 0.35 + v[334] * v[154] * 0.33 + v[332] * v[157] * -0.33 + v[284] * 0.08 + v[284] * v[154] * 0.35 + v[317] * v[157] * 0.33 + v[324] * v[154] * -0.33 + v[74] * v[157] * 0.35 + (v[116] * v[154] + v[328] * v[157]) * 0.33 + (v[450] * v[157] + v[468] * v[154]) * -0.33) * v[169];
    v[463] = v[272] * v[30];
    jac[538] = 1 - v[99] - v[463];
    jac[563] = 1 - v[93] - v[463];
    v[463] = 0 - jac[538];
    v[93] = v[463] * x_in[18] + jac[514] * x_in[19];
    v[99] = 0 - v[93];
    v[462] = 0 - v[93];
    v[541] = v[462] * v[159];
    v[459] = v[93] * v[156];
    v[225] = v[225] * v[40];
    v[272] = v[272] * v[39];
    jac[562] = v[225] - v[272];
    jac[442] = jac[562] * v[222] + v[463] * v[216];
    jac[539] = v[225] + v[272];
    jac[658] = jac[562] * v[237] + jac[538] * v[163];
    jac[659] = jac[563] * v[237] + jac[539] * v[163];
    jac[682] = jac[562] * v[231] + jac[538] * v[250] + jac[514] * v[210];
    jac[683] = jac[563] * v[231] + jac[539] * v[250] + jac[515] * v[210];
    jac[706] = jac[562] * v[242] + jac[538] * v[258] + jac[514] * v[207];
    jac[707] = jac[563] * v[242] + jac[539] * v[258] + jac[515] * v[207];
    v[258] = jac[562] * x_in[29];
    v[242] = v[258] * v[159];
    v[207] = v[258] * v[156];
    v[250] = jac[562] * x_in[28];
    v[231] = v[250] * v[156];
    v[210] = jac[538] * x_in[27];
    v[163] = v[250] * v[159];
    v[237] = v[210] * v[159];
    v[272] = v[210] * v[156];
    v[225] = 0 - jac[514];
    jac[490] = jac[538] * v[245] + v[225] * v[222];
    v[225] = jac[562] * x_in[18] + v[225] * x_in[20];
    v[463] = v[225] * v[159];
    v[458] = v[225] * v[156];
    v[335] = jac[562] * x_in[27];
    v[303] = jac[538] * x_in[29];
    v[396] = 0 - v[303];
    v[400] = v[396] * v[159];
    v[407] = v[303] * v[156];
    v[412] = jac[538] * x_in[28];
    v[417] = 0 - v[412];
    v[420] = v[335] * v[159];
    v[127] = 0 - v[412];
    v[445] = v[127] * v[159];
    v[449] = v[335] * v[156];
    v[13] = v[412] * v[156];
    jac[226] = 0 - ((0 - v[93]) * 0.08 + v[99] * v[154] * 0.35 + v[541] * v[154] * 0.33 + v[459] * v[157] * 0.33 + v[242] * v[157] * 0.33 + v[207] * v[154] * 0.33 + v[250] * v[157] * 0.35 + v[231] * v[154] * 0.33 + v[210] * 0.08 + v[210] * v[154] * 0.35 + (v[163] * v[157] + v[237] * v[154]) * 0.33 + v[272] * v[157] * -0.33) * v[281] + (v[225] * 0.08 + v[225] * v[154] * 0.35 + v[463] * v[154] * 0.33 + v[458] * v[157] * -0.33 + v[335] * 0.08 + v[335] * v[154] * 0.35 + v[400] * v[157] * 0.33 + v[407] * v[154] * -0.33 + v[417] * v[157] * 0.35 + (v[420] * v[154] + v[445] * v[157]) * 0.33 + (v[449] * v[157] + v[13] * v[154]) * -0.33) * v[169];
    v[10] = 0 - jac[539];
    v[461] = v[10] * x_in[18] + jac[515] * x_in[19];
    v[538] = 0 - v[461];
    v[466] = 0 - v[461];
    v[53] = v[466] * v[159];
    v[35] = v[461] * v[156];
    jac[443] = jac[563] * v[222] + v[10] * v[216];
    v[10] = jac[563] * x_in[29];
    v[33] = v[10] * v[159];
    v[25] = v[10] * v[156];
    v[23] = jac[563] * x_in[28];
    v[4] = v[23] * v[156];
    v[1] = jac[539] * x_in[27];
    v[29] = v[23] * v[159];
    v[28] = v[1] * v[159];
    v[467] = v[1] * v[156];
    v[492] = 0 - jac[515];
    jac[491] = jac[539] * v[245] + v[492] * v[222];
    v[492] = jac[563] * x_in[18] + v[492] * x_in[20];
    v[222] = v[492] * v[159];
    v[532] = v[492] * v[156];
    v[534] = jac[563] * x_in[27];
    v[542] = jac[539] * x_in[29];
    v[41] = 0 - v[542];
    v[546] = v[41] * v[159];
    v[17] = v[542] * v[156];
    v[554] = jac[539] * x_in[28];
    v[514] = 0 - v[554];
    v[177] = v[534] * v[159];
    v[179] = 0 - v[554];
    v[182] = v[179] * v[159];
    v[183] = v[534] * v[156];
    v[190] = v[554] * v[156];
    jac[227] = 0 - ((0 - v[461]) * 0.08 + v[538] * v[154] * 0.35 + v[53] * v[154] * 0.33 + v[35] * v[157] * 0.33 + v[33] * v[157] * 0.33 + v[25] * v[154] * 0.33 + v[23] * v[157] * 0.35 + v[4] * v[154] * 0.33 + v[1] * 0.08 + v[1] * v[154] * 0.35 + (v[29] * v[157] + v[28] * v[154]) * 0.33 + v[467] * v[157] * -0.33) * v[281] + (v[492] * 0.08 + v[492] * v[154] * 0.35 + v[222] * v[154] * 0.33 + v[532] * v[157] * -0.33 + v[534] * 0.08 + v[534] * v[154] * 0.35 + v[546] * v[157] * 0.33 + v[17] * v[154] * -0.33 + v[514] * v[157] * 0.35 + (v[177] * v[154] + v[182] * v[157]) * 0.33 + (v[183] * v[157] + v[190] * v[154]) * -0.33) * v[169];
    v[178] = 1 - v[162] - v[178];
    v[162] = sin(x_in[10]);
    v[169] = 0 - v[178];
    v[281] = cos(x_in[10]);
    jac[246] = 0 - (v[286] * v[168] + v[80] * v[166] + v[193] * v[175] + v[198] * v[171] + v[178] * v[156] * -0.33) * v[162] + (v[109] * v[164] + v[200] * v[173] + (0 - v[178]) * 0.35 + v[169] * v[159] * 0.33) * v[281];
    v[187] = v[181] + v[187];
    v[181] = 0 - v[187];
    jac[247] = 0 - (v[274] * v[168] + v[123] * v[166] + v[119] * v[175] + v[117] * v[171] + v[187] * v[156] * -0.33) * v[162] + (v[122] * v[164] + v[114] * v[173] + (0 - v[187]) * 0.35 + v[181] * v[159] * 0.33) * v[281];
    v[549] = v[20] - v[549];
    v[20] = 0 - v[549];
    jac[248] = 0 - (v[112] * v[168] + v[107] * v[166] + v[264] * v[175] + v[260] * v[171] + v[549] * v[156] * -0.33) * v[162] + (v[105] * v[164] + v[103] * v[173] + (0 - v[549]) * 0.35 + v[20] * v[159] * 0.33) * v[281];
    v[103] = 0 - jac[561];
    jac[465] = v[103] * v[245] + jac[513] * v[216];
    v[103] = v[103] * x_in[19] + jac[537] * x_in[20];
    v[260] = jac[513] * x_in[29];
    v[105] = 0 - v[260];
    v[107] = jac[513] * x_in[28];
    v[112] = 0 - v[107];
    v[175] = 0 - v[103];
    jac[249] = 0 - (v[84] * v[215] + v[78] * v[213] + v[337] * v[221] + v[334] * v[217] + v[103] * v[156] * -0.33 + v[97] * v[238] + v[70] * v[228] + v[284] * v[236] + v[116] * v[232] + v[324] * v[255] + v[468] * v[234] + v[69] * v[254] + v[358] * v[226] + v[105] * v[159] * 0.33 + (0 - v[107]) * 0.35 + v[112] * v[159] * 0.33) * v[162] + (v[76] * v[211] + v[332] * v[219] + (0 - v[103]) * 0.35 + v[175] * v[159] * 0.33 + v[73] * v[240] + v[72] * v[230] + v[394] * v[226] + v[450] * v[234] + v[317] * v[170] + v[74] * v[249] + v[328] * v[232] + v[333] * v[252] + v[260] * v[156] * 0.33 + v[107] * v[156] * 0.33) * v[281];
    v[468] = 0 - jac[562];
    jac[466] = v[468] * v[245] + jac[514] * v[216];
    v[468] = v[468] * x_in[19] + jac[538] * x_in[20];
    v[450] = jac[514] * x_in[29];
    v[328] = 0 - v[450];
    v[116] = jac[514] * x_in[28];
    v[74] = 0 - v[116];
    v[324] = 0 - v[468];
    jac[250] = 0 - (v[99] * v[215] + v[541] * v[213] + v[225] * v[221] + v[463] * v[217] + v[468] * v[156] * -0.33 + v[207] * v[238] + v[231] * v[228] + v[335] * v[236] + v[420] * v[232] + v[407] * v[255] + v[13] * v[234] + v[210] * v[254] + v[237] * v[226] + v[328] * v[159] * 0.33 + (0 - v[116]) * 0.35 + v[74] * v[159] * 0.33) * v[162] + (v[459] * v[211] + v[458] * v[219] + (0 - v[468]) * 0.35 + v[324] * v[159] * 0.33 + v[242] * v[240] + v[250] * v[230] + v[163] * v[226] + v[449] * v[234] + v[400] * v[170] + v[417] * v[249] + v[445] * v[232] + v[272] * v[252] + v[450] * v[156] * 0.33 + v[116] * v[156] * 0.33) * v[281];
    v[13] = 0 - jac[563];
    jac[467] = v[13] * v[245] + jac[515] * v[216];
    v[13] = v[13] * x_in[19] + jac[539] * x_in[20];
    v[245] = jac[515] * x_in[29];
    v[216] = 0 - v[245];
    v[449] = jac[515] * x_in[28];
    v[445] = 0 - v[449];
    v[420] = 0 - v[13];
    jac[251] = 0 - (v[538] * v[215] + v[53] * v[213] + v[492] * v[221] + v[222] * v[217] + v[13] * v[156] * -0.33 + v[25] * v[238] + v[4] * v[228] + v[534] * v[236] + v[177] * v[232] + v[17] * v[255] + v[190] * v[234] + v[1] * v[254] + v[28] * v[226] + v[216] * v[159] * 0.33 + (0 - v[449]) * 0.35 + v[445] * v[159] * 0.33) * v[162] + (v[35] * v[211] + v[532] * v[219] + (0 - v[13]) * 0.35 + v[420] * v[159] * 0.33 + v[33] * v[240] + v[23] * v[230] + v[29] * v[226] + v[183] * v[234] + v[546] * v[170] + v[514] * v[249] + v[182] * v[232] + v[467] * v[252] + v[245] * v[156] * 0.33 + v[449] * v[156] * 0.33) * v[281];
    v[281] = sin(x_in[11]);
    v[162] = cos(x_in[11]);
    jac[270] = 0 - (v[283] * v[167] + v[193] * v[172] + v[169] * v[158]) * v[281] + (v[282] * v[165] + v[193] * v[174] + v[178] * v[155]) * v[162];
    jac[271] = 0 - (v[277] * v[167] + v[119] * v[172] + v[181] * v[158]) * v[281] + (v[278] * v[165] + v[119] * v[174] + v[187] * v[155]) * v[162];
    jac[272] = 0 - (v[108] * v[167] + v[264] * v[172] + v[20] * v[158]) * v[281] + (v[189] * v[165] + v[264] * v[174] + v[549] * v[155]) * v[162];
    jac[273] = 0 - (v[82] * v[214] + v[337] * v[218] + v[175] * v[244] + v[261] * v[241] + v[72] * v[227] + v[284] * v[233] + v[313] * v[257] + v[124] * v[248] + v[69] * v[251] + v[105] * v[206] + v[112] * v[209]) * v[281] + (v[91] * v[212] + v[337] * v[220] + v[103] * v[243] + v[261] * v[239] + v[72] * v[229] + v[284] * v[235] + v[246] * v[256] + v[101] * v[247] + v[69] * v[253] + v[260] * v[205] + v[107] * v[208]) * v[162];
    jac[274] = 0 - (v[462] * v[214] + v[225] * v[218] + v[324] * v[244] + v[258] * v[241] + v[250] * v[227] + v[335] * v[233] + v[396] * v[257] + v[127] * v[248] + v[210] * v[251] + v[328] * v[206] + v[74] * v[209]) * v[281] + (v[93] * v[212] + v[225] * v[220] + v[468] * v[243] + v[258] * v[239] + v[250] * v[229] + v[335] * v[235] + v[303] * v[256] + v[412] * v[247] + v[210] * v[253] + v[450] * v[205] + v[116] * v[208]) * v[162];
    jac[275] = 0 - (v[466] * v[214] + v[492] * v[218] + v[420] * v[244] + v[10] * v[241] + v[23] * v[227] + v[534] * v[233] + v[41] * v[257] + v[179] * v[248] + v[1] * v[251] + v[216] * v[206] + v[445] * v[209]) * v[281] + (v[461] * v[212] + v[492] * v[220] + v[13] * v[243] + v[10] * v[239] + v[23] * v[229] + v[534] * v[235] + v[542] * v[256] + v[554] * v[247] + v[1] * v[253] + v[245] * v[205] + v[449] * v[208]) * v[162];
    v[162] = v[296] * v[30];
    v[281] = v[312] * v[39];
    v[420] = v[162] + v[281];
    v[445] = 0 - v[420];
    v[449] = 0 - v[420];
    v[216] = v[449] * v[293];
    v[245] = v[420] * v[290];
    v[13] = sin(x_in[12]);
    v[179] = v[312] * v[30];
    v[554] = v[296] * v[39];
    v[41] = v[179] - v[554];
    v[542] = 0 - v[41];
    v[534] = 0 - v[41];
    v[492] = v[534] * v[293];
    v[1] = v[41] * v[290];
    v[23] = cos(x_in[12]);
    jac[300] = 0 - ((0 - v[420]) * 0.08 + v[445] * v[288] * 0.35 + v[216] * v[288] * 0.33 + v[245] * v[291] * 0.33) * v[13] + ((0 - v[41]) * 0.08 + v[542] * v[288] * 0.35 + v[492] * v[288] * 0.33 + v[1] * v[291] * 0.33) * v[23];
    v[10] = v[296] * v[40];
    v[466] = v[323] * v[39];
    v[461] = v[10] - v[466];
    v[257] = 0 - v[461];
    v[256] = 0 - v[461];
    v[253] = v[256] * v[293];
    v[251] = v[461] * v[290];
    v[296] = v[296] * v[19];
    v[323] = v[323] * v[30];
    v[248] = 1 - v[296] - v[323];
    v[247] = 0 - v[248];
    v[244] = 0 - v[248];
    v[243] = v[244] * v[293];
    v[241] = v[248] * v[290];
    jac[301] = 0 - ((0 - v[461]) * 0.08 + v[257] * v[288] * 0.35 + v[253] * v[288] * 0.33 + v[251] * v[291] * 0.33) * v[13] + ((0 - v[248]) * 0.08 + v[247] * v[288] * 0.35 + v[243] * v[288] * 0.33 + v[241] * v[291] * 0.33) * v[23];
    v[312] = v[312] * v[40];
    v[323] = 1 - v[312] - v[323];
    v[239] = 0 - v[323];
    v[235] = 0 - v[323];
    v[233] = v[235] * v[293];
    v[229] = v[323] * v[290];
    v[466] = v[10] + v[466];
    v[10] = 0 - v[466];
    v[227] = 0 - v[466];
    v[220] = v[227] * v[293];
    v[218] = v[466] * v[290];
    jac[302] = 0 - ((0 - v[323]) * 0.08 + v[239] * v[288] * 0.35 + v[233] * v[288] * 0.33 + v[229] * v[291] * 0.33) * v[13] + ((0 - v[466]) * 0.08 + v[10] * v[288] * 0.35 + v[220] * v[288] * 0.33 + v[218] * v[291] * 0.33) * v[23];
    v[214] = v[395] * v[30];
    v[212] = v[359] * v[39];
    jac[543] = v[214] - v[212];
    jac[520] = v[214] + v[212];
    v[212] = 0 - jac[543];
    v[214] = v[359] * v[19];
    v[209] = v[395] * v[40];
    jac[519] = 1 - v[214] - v[209];
    v[208] = v[212] * x_in[18] + jac[519] * x_in[19];
    v[206] = 0 - v[208];
    v[205] = 0 - v[208];
    v[324] = v[205] * v[293];
    v[74] = v[208] * v[290];
    v[116] = v[359] * v[30];
    v[395] = v[395] * v[39];
    jac[567] = v[116] + v[395];
    jac[447] = jac[567] * v[356] + v[212] * v[350];
    jac[521] = v[116] - v[395];
    jac[735] = jac[567] * v[371] + jac[543] * v[297];
    jac[759] = jac[567] * v[365] + jac[543] * v[385] + jac[519] * v[344];
    jac[783] = jac[567] * v[376] + jac[543] * v[392] + jac[519] * v[341];
    v[395] = jac[567] * x_in[32];
    v[116] = v[395] * v[293];
    v[212] = v[395] * v[290];
    v[328] = jac[567] * x_in[31];
    v[450] = jac[543] * x_in[30];
    v[468] = 0 - v[450];
    v[127] = v[328] * v[293];
    v[412] = 0 - v[450];
    v[396] = v[412] * v[293];
    v[303] = v[328] * v[290];
    v[335] = v[450] * v[290];
    v[225] = 0 - jac[519];
    jac[495] = jac[543] * v[379] + v[225] * v[356];
    v[225] = jac[567] * x_in[18] + v[225] * x_in[20];
    v[210] = 0 - v[225];
    v[250] = 0 - v[225];
    v[258] = v[250] * v[293];
    v[462] = v[225] * v[290];
    v[93] = jac[567] * x_in[30];
    v[175] = v[93] * v[290];
    v[112] = jac[543] * x_in[32];
    v[107] = v[112] * v[293];
    v[105] = v[112] * v[290];
    v[260] = jac[543] * x_in[31];
    v[103] = v[93] * v[293];
    v[124] = v[260] * v[293];
    v[101] = v[260] * v[290];
    jac[303] = 0 - ((0 - v[208]) * 0.08 + v[206] * v[288] * 0.35 + v[324] * v[288] * 0.33 + v[74] * v[291] * 0.33 + v[116] * v[291] * 0.33 + v[212] * v[288] * 0.33 + v[328] * v[291] * 0.35 + (0 - v[450]) * 0.08 + v[468] * v[288] * 0.35 + (v[127] * v[291] + v[396] * v[288]) * 0.33 + (v[303] * v[288] + v[335] * v[291]) * 0.33) * v[13] + ((0 - v[225]) * 0.08 + v[210] * v[288] * 0.35 + v[258] * v[288] * 0.33 + v[462] * v[291] * 0.33 + v[93] * 0.08 + v[93] * v[288] * 0.35 + v[175] * v[291] * -0.33 + v[107] * v[291] * 0.33 + v[105] * v[288] * 0.33 + v[260] * v[291] * 0.35 + (v[103] * v[288] + v[124] * v[291]) * 0.33 + v[101] * v[288] * 0.33) * v[23];
    v[313] = v[406] * v[30];
    jac[544] = 1 - v[214] - v[313];
    jac[569] = 1 - v[209] - v[313];
    v[313] = 0 - jac[544];
    v[209] = v[313] * x_in[18] + jac[520] * x_in[19];
    v[214] = 0 - v[209];
    v[246] = 0 - v[209];
    v[284] = v[246] * v[293];
    v[337] = v[209] * v[290];
    v[359] = v[359] * v[40];
    v[406] = v[406] * v[39];
    jac[568] = v[359] - v[406];
    jac[448] = jac[568] * v[356] + v[313] * v[350];
    jac[545] = v[359] + v[406];
    jac[736] = jac[568] * v[371] + jac[544] * v[297];
    jac[737] = jac[569] * v[371] + jac[545] * v[297];
    jac[760] = jac[568] * v[365] + jac[544] * v[385] + jac[520] * v[344];
    jac[761] = jac[569] * v[365] + jac[545] * v[385] + jac[521] * v[344];
    jac[784] = jac[568] * v[376] + jac[544] * v[392] + jac[520] * v[341];
    jac[785] = jac[569] * v[376] + jac[545] * v[392] + jac[521] * v[341];
    v[392] = jac[568] * x_in[32];
    v[376] = v[392] * v[293];
    v[341] = v[392] * v[290];
    v[385] = jac[568] * x_in[31];
    v[365] = jac[544] * x_in[30];
    v[344] = 0 - v[365];
    v[297] = v[385] * v[293];
    v[371] = 0 - v[365];
    v[406] = v[371] * v[293];
    v[359] = v[385] * v[290];
    v[313] = v[365] * v[290];
    v[69] = 0 - jac[520];
    jac[496] = jac[544] * v[379] + v[69] * v[356];
    v[69] = jac[568] * x_in[18] + v[69] * x_in[20];
    v[72] = 0 - v[69];
    v[261] = 0 - v[69];
    v[82] = v[261] * v[293];
    v[91] = v[69] * v[290];
    v[20] = jac[568] * x_in[30];
    v[549] = v[20] * v[290];
    v[264] = jac[544] * x_in[32];
    v[108] = v[264] * v[293];
    v[189] = v[264] * v[290];
    v[174] = jac[544] * x_in[31];
    v[172] = v[20] * v[293];
    v[167] = v[174] * v[293];
    v[165] = v[174] * v[290];
    jac[304] = 0 - ((0 - v[209]) * 0.08 + v[214] * v[288] * 0.35 + v[284] * v[288] * 0.33 + v[337] * v[291] * 0.33 + v[376] * v[291] * 0.33 + v[341] * v[288] * 0.33 + v[385] * v[291] * 0.35 + (0 - v[365]) * 0.08 + v[344] * v[288] * 0.35 + (v[297] * v[291] + v[406] * v[288]) * 0.33 + (v[359] * v[288] + v[313] * v[291]) * 0.33) * v[13] + ((0 - v[69]) * 0.08 + v[72] * v[288] * 0.35 + v[82] * v[288] * 0.33 + v[91] * v[291] * 0.33 + v[20] * 0.08 + v[20] * v[288] * 0.35 + v[549] * v[291] * -0.33 + v[108] * v[291] * 0.33 + v[189] * v[288] * 0.33 + v[174] * v[291] * 0.35 + (v[172] * v[288] + v[167] * v[291]) * 0.33 + v[165] * v[288] * 0.33) * v[23];
    v[158] = 0 - jac[545];
    v[155] = v[158] * x_in[18] + jac[521] * x_in[19];
    v[181] = 0 - v[155];
    v[187] = 0 - v[155];
    v[119] = v[187] * v[293];
    v[277] = v[155] * v[290];
    jac[449] = jac[569] * v[356] + v[158] * v[350];
    v[158] = jac[569] * x_in[32];
    v[278] = v[158] * v[293];
    v[169] = v[158] * v[290];
    v[178] = jac[569] * x_in[31];
    v[193] = jac[545] * x_in[30];
    v[283] = 0 - v[193];
    v[282] = v[178] * v[293];
    v[190] = 0 - v[193];
    v[183] = v[190] * v[293];
    v[182] = v[178] * v[290];
    v[177] = v[193] * v[290];
    v[514] = 0 - jac[521];
    jac[497] = jac[545] * v[379] + v[514] * v[356];
    v[514] = jac[569] * x_in[18] + v[514] * x_in[20];
    v[356] = 0 - v[514];
    v[17] = 0 - v[514];
    v[546] = v[17] * v[293];
    v[532] = v[514] * v[290];
    v[222] = jac[569] * x_in[30];
    v[467] = v[222] * v[290];
    v[28] = jac[545] * x_in[32];
    v[29] = v[28] * v[293];
    v[4] = v[28] * v[290];
    v[25] = jac[545] * x_in[31];
    v[33] = v[222] * v[293];
    v[35] = v[25] * v[293];
    v[53] = v[25] * v[290];
    jac[305] = 0 - ((0 - v[155]) * 0.08 + v[181] * v[288] * 0.35 + v[119] * v[288] * 0.33 + v[277] * v[291] * 0.33 + v[278] * v[291] * 0.33 + v[169] * v[288] * 0.33 + v[178] * v[291] * 0.35 + (0 - v[193]) * 0.08 + v[283] * v[288] * 0.35 + (v[282] * v[291] + v[183] * v[288]) * 0.33 + (v[182] * v[288] + v[177] * v[291]) * 0.33) * v[13] + ((0 - v[514]) * 0.08 + v[356] * v[288] * 0.35 + v[546] * v[288] * 0.33 + v[532] * v[291] * 0.33 + v[222] * 0.08 + v[222] * v[288] * 0.35 + v[467] * v[291] * -0.33 + v[29] * v[291] * 0.33 + v[4] * v[288] * 0.33 + v[25] * v[291] * 0.35 + (v[33] * v[288] + v[35] * v[291]) * 0.33 + v[53] * v[288] * 0.33) * v[23];
    v[312] = 1 - v[296] - v[312];
    v[296] = sin(x_in[13]);
    v[23] = 0 - v[312];
    v[13] = cos(x_in[13]);
    jac[324] = 0 - (v[445] * v[302] + v[216] * v[300] + v[542] * v[309] + v[492] * v[307] + v[312] * v[290] * -0.33) * v[296] + (v[245] * v[298] + v[1] * v[305] + (0 - v[312]) * 0.35 + v[23] * v[293] * 0.33) * v[13];
    v[554] = v[179] + v[554];
    v[179] = 0 - v[554];
    jac[325] = 0 - (v[257] * v[302] + v[253] * v[300] + v[247] * v[309] + v[243] * v[307] + v[554] * v[290] * -0.33) * v[296] + (v[251] * v[298] + v[241] * v[305] + (0 - v[554]) * 0.35 + v[179] * v[293] * 0.33) * v[13];
    v[281] = v[162] - v[281];
    v[162] = 0 - v[281];
    jac[326] = 0 - (v[239] * v[302] + v[233] * v[300] + v[10] * v[309] + v[220] * v[307] + v[281] * v[290] * -0.33) * v[296] + (v[229] * v[298] + v[218] * v[305] + (0 - v[281]) * 0.35 + v[162] * v[293] * 0.33) * v[13];
    v[218] = 0 - jac[567];
    jac[471] = v[218] * v[379] + jac[519] * v[350];
    v[218] = v[218] * x_in[19] + jac[543] * x_in[20];
    v[220] = jac[519] * x_in[32];
    v[10] = 0 - v[220];
    v[229] = jac[519] * x_in[31];
    v[233] = 0 - v[229];
    v[239] = 0 - v[218];
    jac[327] = 0 - (v[206] * v[349] + v[324] * v[347] + v[210] * v[355] + v[258] * v[353] + v[218] * v[290] * -0.33 + v[212] * v[372] + v[303] * v[362] + v[93] * v[370] + v[103] * v[366] + v[105] * v[389] + v[101] * v[382] + v[468] * v[388] + v[396] * v[360] + v[10] * v[293] * 0.33 + (0 - v[229]) * 0.35 + v[233] * v[293] * 0.33) * v[296] + (v[74] * v[345] + v[462] * v[351] + (0 - v[218]) * 0.35 + v[239] * v[293] * 0.33 + v[116] * v[374] + v[328] * v[364] + v[127] * v[360] + v[175] * v[368] + v[107] * v[304] + v[260] * v[384] + v[124] * v[366] + v[335] * v[362] + v[220] * v[290] * 0.33 + v[229] * v[290] * 0.33) * v[13];
    v[101] = 0 - jac[568];
    jac[472] = v[101] * v[379] + jac[520] * v[350];
    v[101] = v[101] * x_in[19] + jac[544] * x_in[20];
    v[124] = jac[520] * x_in[32];
    v[103] = 0 - v[124];
    v[105] = jac[520] * x_in[31];
    v[107] = 0 - v[105];
    v[175] = 0 - v[101];
    jac[328] = 0 - (v[214] * v[349] + v[284] * v[347] + v[72] * v[355] + v[82] * v[353] + v[101] * v[290] * -0.33 + v[341] * v[372] + v[359] * v[362] + v[20] * v[370] + v[172] * v[366] + v[189] * v[389] + v[165] * v[382] + v[344] * v[388] + v[406] * v[360] + v[103] * v[293] * 0.33 + (0 - v[105]) * 0.35 + v[107] * v[293] * 0.33) * v[296] + (v[337] * v[345] + v[91] * v[351] + (0 - v[101]) * 0.35 + v[175] * v[293] * 0.33 + v[376] * v[374] + v[385] * v[364] + v[297] * v[360] + v[549] * v[368] + v[108] * v[304] + v[174] * v[384] + v[167] * v[366] + v[313] * v[362] + v[124] * v[290] * 0.33 + v[105] * v[290] * 0.33) * v[13];
    v[165] = 0 - jac[569];
    jac[473] = v[165] * v[379] + jac[521] * v[350];
    v[165] = v[165] * x_in[19] + jac[545] * x_in[20];
    v[379] = jac[521] * x_in[32];
    v[350] = 0 - v[379];
    v[167] = jac[521] * x_in[31];
    v[172] = 0 - v[167];
    v[189] = 0 - v[165];
    jac[329] = 0 - (v[181] * v[349] + v[119] * v[347] + v[356] * v[355] + v[546] * v[353] + v[165] * v[290] * -0.33 + v[169] * v[372] + v[182] * v[362] + v[222] * v[370] + v[33] * v[366] + v[4] * v[389] + v[53] * v[382] + v[283] * v[388] + v[183] * v[360] + v[350] * v[293] * 0.33 + (0 - v[167]) * 0.35 + v[172] * v[293] * 0.33) * v[296] + (v[277] * v[345] + v[532] * v[351] + (0 - v[165]) * 0.35 + v[189] * v[293] * 0.33 + v[278] * v[374] + v[178] * v[364] + v[282] * v[360] + v[467] * v[368] + v[29] * v[304] + v[25] * v[384] + v[35] * v[366] + v[177] * v[362] + v[379] * v[290] * 0.33 + v[167] * v[290] * 0.33) * v[13];
    v[13] = sin(x_in[14]);
    v[296] = cos(x_in[14]);
    jac[348] = 0 - (v[449] * v[301] + v[534] * v[308] + v[23] * v[292]) * v[13] + (v[420] * v[299] + v[41] * v[306] + v[312] * v[289]) * v[296];
    jac[349] = 0 - (v[256] * v[301] + v[244] * v[308] + v[179] * v[292]) * v[13] + (v[461] * v[299] + v[248] * v[306] + v[554] * v[289]) * v[296];
    jac[350] = 0 - (v[235] * v[301] + v[227] * v[308] + v[162] * v[292]) * v[13] + (v[323] * v[299] + v[466] * v[306] + v[281] * v[289]) * v[296];
    jac[351] = 0 - (v[205] * v[348] + v[250] * v[354] + v[239] * v[378] + v[395] * v[375] + v[328] * v[361] + v[93] * v[367] + v[112] * v[391] + v[260] * v[381] + v[412] * v[387] + v[10] * v[340] + v[233] * v[343]) * v[13] + (v[208] * v[346] + v[225] * v[352] + v[218] * v[377] + v[395] * v[373] + v[328] * v[363] + v[93] * v[369] + v[112] * v[390] + v[260] * v[383] + v[450] * v[386] + v[220] * v[339] + v[229] * v[342]) * v[296];
    jac[352] = 0 - (v[246] * v[348] + v[261] * v[354] + v[175] * v[378] + v[392] * v[375] + v[385] * v[361] + v[20] * v[367] + v[264] * v[391] + v[174] * v[381] + v[371] * v[387] + v[103] * v[340] + v[107] * v[343]) * v[13] + (v[209] * v[346] + v[69] * v[352] + v[101] * v[377] + v[392] * v[373] + v[385] * v[363] + v[20] * v[369] + v[264] * v[390] + v[174] * v[383] + v[365] * v[386] + v[124] * v[339] + v[105] * v[342]) * v[296];
    jac[353] = 0 - (v[187] * v[348] + v[17] * v[354] + v[189] * v[378] + v[158] * v[375] + v[178] * v[361] + v[222] * v[367] + v[28] * v[391] + v[25] * v[381] + v[190] * v[387] + v[350] * v[340] + v[172] * v[343]) * v[13] + (v[155] * v[346] + v[514] * v[352] + v[165] * v[377] + v[158] * v[373] + v[178] * v[363] + v[222] * v[369] + v[28] * v[390] + v[25] * v[383] + v[193] * v[386] + v[379] * v[339] + v[167] * v[342]) * v[296];
    v[296] = v[430] * v[30];
    v[13] = v[446] * v[39];
    v[189] = v[296] + v[13];
    v[172] = 0 - v[189];
    v[167] = 0 - v[189];
    v[350] = v[167] * v[427];
    v[379] = v[189] * v[424];
    v[165] = sin(x_in[15]);
    v[25] = v[446] * v[30];
    v[28] = v[430] * v[39];
    v[222] = v[25] - v[28];
    v[17] = v[222] * v[427];
    v[514] = v[222] * v[424];
    v[190] = cos(x_in[15]);
    jac[378] = 0 - ((0 - v[189]) * 0.08 + v[172] * v[422] * 0.35 + v[350] * v[422] * 0.33 + v[379] * v[425] * 0.33) * v[165] + (v[222] * 0.08 + v[222] * v[422] * 0.35 + v[17] * v[422] * 0.33 + v[514] * v[425] * -0.33) * v[190];
    v[193] = v[430] * v[40];
    v[178] = v[457] * v[39];
    v[158] = v[193] - v[178];
    v[187] = 0 - v[158];
    v[155] = 0 - v[158];
    v[391] = v[155] * v[427];
    v[390] = v[158] * v[424];
    v[430] = v[430] * v[19];
    v[457] = v[457] * v[30];
    v[387] = 1 - v[430] - v[457];
    v[386] = v[387] * v[427];
    v[383] = v[387] * v[424];
    jac[379] = 0 - ((0 - v[158]) * 0.08 + v[187] * v[422] * 0.35 + v[391] * v[422] * 0.33 + v[390] * v[425] * 0.33) * v[165] + (v[387] * 0.08 + v[387] * v[422] * 0.35 + v[386] * v[422] * 0.33 + v[383] * v[425] * -0.33) * v[190];
    v[446] = v[446] * v[40];
    v[457] = 1 - v[446] - v[457];
    v[381] = 0 - v[457];
    v[378] = 0 - v[457];
    v[377] = v[378] * v[427];
    v[375] = v[457] * v[424];
    v[178] = v[193] + v[178];
    v[193] = v[178] * v[427];
    v[373] = v[178] * v[424];
    jac[380] = 0 - ((0 - v[457]) * 0.08 + v[381] * v[422] * 0.35 + v[377] * v[422] * 0.33 + v[375] * v[425] * 0.33) * v[165] + (v[178] * 0.08 + v[178] * v[422] * 0.35 + v[193] * v[422] * 0.33 + v[373] * v[425] * -0.33) * v[190];
    v[369] = v[529] * v[30];
    v[367] = v[493] * v[39];
    jac[549] = v[369] - v[367];
    jac[526] = v[369] + v[367];
    v[367] = 0 - jac[549];
    v[19] = v[493] * v[19];
    v[369] = v[529] * v[40];
    jac[525] = 1 - v[19] - v[369];
    v[363] = v[367] * x_in[18] + jac[525] * x_in[19];
    v[361] = 0 - v[363];
    v[354] = 0 - v[363];
    v[352] = v[354] * v[427];
    v[348] = v[363] * v[424];
    v[346] = v[493] * v[30];
    v[529] = v[529] * v[39];
    jac[573] = v[346] + v[529];
    jac[453] = jac[573] * v[490] + v[367] * v[484];
    jac[527] = v[346] - v[529];
    jac[813] = jac[573] * v[505] + jac[549] * v[431];
    jac[837] = jac[573] * v[499] + jac[549] * v[518] + jac[525] * v[478];
    jac[861] = jac[573] * v[510] + jac[549] * v[526] + jac[525] * v[475];
    v[529] = jac[573] * x_in[35];
    v[346] = v[529] * v[427];
    v[367] = v[529] * v[424];
    v[343] = jac[573] * x_in[34];
    v[342] = v[343] * v[424];
    v[340] = jac[549] * x_in[33];
    v[339] = v[343] * v[427];
    v[175] = v[340] * v[427];
    v[107] = v[340] * v[424];
    v[105] = 0 - jac[525];
    jac[501] = jac[549] * v[513] + v[105] * v[490];
    v[105] = jac[573] * x_in[18] + v[105] * x_in[20];
    v[103] = v[105] * v[427];
    v[124] = v[105] * v[424];
    v[101] = jac[573] * x_in[33];
    v[174] = jac[549] * x_in[35];
    v[264] = 0 - v[174];
    v[20] = v[264] * v[427];
    v[261] = v[174] * v[424];
    v[69] = jac[549] * x_in[34];
    v[371] = 0 - v[69];
    v[365] = v[101] * v[427];
    v[385] = 0 - v[69];
    v[392] = v[385] * v[427];
    v[246] = v[101] * v[424];
    v[209] = v[69] * v[424];
    jac[381] = 0 - ((0 - v[363]) * 0.08 + v[361] * v[422] * 0.35 + v[352] * v[422] * 0.33 + v[348] * v[425] * 0.33 + v[346] * v[425] * 0.33 + v[367] * v[422] * 0.33 + v[343] * v[425] * 0.35 + v[342] * v[422] * 0.33 + v[340] * 0.08 + v[340] * v[422] * 0.35 + (v[339] * v[425] + v[175] * v[422]) * 0.33 + v[107] * v[425] * -0.33) * v[165] + (v[105] * 0.08 + v[105] * v[422] * 0.35 + v[103] * v[422] * 0.33 + v[124] * v[425] * -0.33 + v[101] * 0.08 + v[101] * v[422] * 0.35 + v[20] * v[425] * 0.33 + v[261] * v[422] * -0.33 + v[371] * v[425] * 0.35 + (v[365] * v[422] + v[392] * v[425]) * 0.33 + (v[246] * v[425] + v[209] * v[422]) * -0.33) * v[190];
    v[30] = v[540] * v[30];
    jac[550] = 1 - v[19] - v[30];
    jac[575] = 1 - v[369] - v[30];
    v[30] = 0 - jac[550];
    v[369] = v[30] * x_in[18] + jac[526] * x_in[19];
    v[19] = 0 - v[369];
    v[239] = 0 - v[369];
    v[233] = v[239] * v[427];
    v[229] = v[369] * v[424];
    v[493] = v[493] * v[40];
    v[540] = v[540] * v[39];
    jac[574] = v[493] - v[540];
    jac[454] = jac[574] * v[490] + v[30] * v[484];
    jac[551] = v[493] + v[540];
    jac[814] = jac[574] * v[505] + jac[550] * v[431];
    jac[815] = jac[575] * v[505] + jac[551] * v[431];
    jac[838] = jac[574] * v[499] + jac[550] * v[518] + jac[526] * v[478];
    jac[839] = jac[575] * v[499] + jac[551] * v[518] + jac[527] * v[478];
    jac[862] = jac[574] * v[510] + jac[550] * v[526] + jac[526] * v[475];
    jac[863] = jac[575] * v[510] + jac[551] * v[526] + jac[527] * v[475];
    v[526] = jac[574] * x_in[35];
    v[510] = v[526] * v[427];
    v[475] = v[526] * v[424];
    v[518] = jac[574] * x_in[34];
    v[499] = v[518] * v[424];
    v[478] = jac[550] * x_in[33];
    v[431] = v[518] * v[427];
    v[505] = v[478] * v[427];
    v[540] = v[478] * v[424];
    v[493] = 0 - jac[526];
    jac[502] = jac[550] * v[513] + v[493] * v[490];
    v[493] = jac[574] * x_in[18] + v[493] * x_in[20];
    v[30] = v[493] * v[427];
    v[39] = v[493] * v[424];
    v[40] = jac[574] * x_in[33];
    v[10] = jac[550] * x_in[35];
    v[220] = 0 - v[10];
    v[218] = v[220] * v[427];
    v[260] = v[10] * v[424];
    v[112] = jac[550] * x_in[34];
    v[93] = 0 - v[112];
    v[250] = v[40] * v[427];
    v[225] = 0 - v[112];
    v[412] = v[225] * v[427];
    v[450] = v[40] * v[424];
    v[328] = v[112] * v[424];
    jac[382] = 0 - ((0 - v[369]) * 0.08 + v[19] * v[422] * 0.35 + v[233] * v[422] * 0.33 + v[229] * v[425] * 0.33 + v[510] * v[425] * 0.33 + v[475] * v[422] * 0.33 + v[518] * v[425] * 0.35 + v[499] * v[422] * 0.33 + v[478] * 0.08 + v[478] * v[422] * 0.35 + (v[431] * v[425] + v[505] * v[422]) * 0.33 + v[540] * v[425] * -0.33) * v[165] + (v[493] * 0.08 + v[493] * v[422] * 0.35 + v[30] * v[422] * 0.33 + v[39] * v[425] * -0.33 + v[40] * 0.08 + v[40] * v[422] * 0.35 + v[218] * v[425] * 0.33 + v[260] * v[422] * -0.33 + v[93] * v[425] * 0.35 + (v[250] * v[422] + v[412] * v[425]) * 0.33 + (v[450] * v[425] + v[328] * v[422]) * -0.33) * v[190];
    v[395] = 0 - jac[551];
    v[205] = v[395] * x_in[18] + jac[527] * x_in[19];
    v[208] = 0 - v[205];
    v[162] = 0 - v[205];
    v[281] = v[162] * v[427];
    v[227] = v[205] * v[424];
    jac[455] = jac[575] * v[490] + v[395] * v[484];
    v[395] = jac[575] * x_in[35];
    v[466] = v[395] * v[427];
    v[235] = v[395] * v[424];
    v[323] = jac[575] * x_in[34];
    v[308] = v[323] * v[424];
    v[306] = jac[551] * x_in[33];
    v[301] = v[323] * v[427];
    v[299] = v[306] * v[427];
    v[292] = v[306] * v[424];
    v[289] = 0 - jac[527];
    jac[503] = jac[551] * v[513] + v[289] * v[490];
    v[289] = jac[575] * x_in[18] + v[289] * x_in[20];
    v[490] = v[289] * v[427];
    v[179] = v[289] * v[424];
    v[554] = jac[575] * x_in[33];
    v[244] = jac[551] * x_in[35];
    v[248] = 0 - v[244];
    v[256] = v[248] * v[427];
    v[461] = v[244] * v[424];
    v[23] = jac[551] * x_in[34];
    v[312] = 0 - v[23];
    v[534] = v[554] * v[427];
    v[41] = 0 - v[23];
    v[449] = v[41] * v[427];
    v[420] = v[554] * v[424];
    v[53] = v[23] * v[424];
    jac[383] = 0 - ((0 - v[205]) * 0.08 + v[208] * v[422] * 0.35 + v[281] * v[422] * 0.33 + v[227] * v[425] * 0.33 + v[466] * v[425] * 0.33 + v[235] * v[422] * 0.33 + v[323] * v[425] * 0.35 + v[308] * v[422] * 0.33 + v[306] * 0.08 + v[306] * v[422] * 0.35 + (v[301] * v[425] + v[299] * v[422]) * 0.33 + v[292] * v[425] * -0.33) * v[165] + (v[289] * 0.08 + v[289] * v[422] * 0.35 + v[490] * v[422] * 0.33 + v[179] * v[425] * -0.33 + v[554] * 0.08 + v[554] * v[422] * 0.35 + v[256] * v[425] * 0.33 + v[461] * v[422] * -0.33 + v[312] * v[425] * 0.35 + (v[534] * v[422] + v[449] * v[425]) * 0.33 + (v[420] * v[425] + v[53] * v[422]) * -0.33) * v[190];
    v[446] = 1 - v[430] - v[446];
    v[430] = sin(x_in[16]);
    v[190] = 0 - v[446];
    v[165] = cos(x_in[16]);
    jac[402] = 0 - (v[172] * v[436] + v[350] * v[434] + v[222] * v[443] + v[17] * v[439] + v[446] * v[424] * -0.33) * v[430] + (v[379] * v[432] + v[514] * v[441] + (0 - v[446]) * 0.35 + v[190] * v[427] * 0.33) * v[165];
    v[28] = v[25] + v[28];
    v[25] = 0 - v[28];
    jac[403] = 0 - (v[187] * v[436] + v[391] * v[434] + v[387] * v[443] + v[386] * v[439] + v[28] * v[424] * -0.33) * v[430] + (v[390] * v[432] + v[383] * v[441] + (0 - v[28]) * 0.35 + v[25] * v[427] * 0.33) * v[165];
    v[13] = v[296] - v[13];
    v[296] = 0 - v[13];
    jac[404] = 0 - (v[381] * v[436] + v[377] * v[434] + v[178] * v[443] + v[193] * v[439] + v[13] * v[424] * -0.33) * v[430] + (v[375] * v[432] + v[373] * v[441] + (0 - v[13]) * 0.35 + v[296] * v[427] * 0.33) * v[165];
    v[373] = 0 - jac[573];
    jac[477] = v[373] * v[513] + jac[525] * v[484];
    v[373] = v[373] * x_in[19] + jac[549] * x_in[20];
    v[193] = jac[525] * x_in[35];
    v[375] = 0 - v[193];
    v[377] = jac[525] * x_in[34];
    v[381] = 0 - v[377];
    v[443] = 0 - v[373];
    jac[405] = 0 - (v[361] * v[483] + v[352] * v[481] + v[105] * v[489] + v[103] * v[485] + v[373] * v[424] * -0.33 + v[367] * v[506] + v[342] * v[496] + v[101] * v[504] + v[365] * v[500] + v[261] * v[523] + v[209] * v[502] + v[340] * v[522] + v[175] * v[494] + v[375] * v[427] * 0.33 + (0 - v[377]) * 0.35 + v[381] * v[427] * 0.33) * v[430] + (v[348] * v[479] + v[124] * v[487] + (0 - v[373]) * 0.35 + v[443] * v[427] * 0.33 + v[346] * v[508] + v[343] * v[498] + v[339] * v[494] + v[246] * v[502] + v[20] * v[438] + v[371] * v[517] + v[392] * v[500] + v[107] * v[520] + v[193] * v[424] * 0.33 + v[377] * v[424] * 0.33) * v[165];
    v[209] = 0 - jac[574];
    jac[478] = v[209] * v[513] + jac[526] * v[484];
    v[209] = v[209] * x_in[19] + jac[550] * x_in[20];
    v[246] = jac[526] * x_in[35];
    v[392] = 0 - v[246];
    v[365] = jac[526] * x_in[34];
    v[371] = 0 - v[365];
    v[261] = 0 - v[209];
    jac[406] = 0 - (v[19] * v[483] + v[233] * v[481] + v[493] * v[489] + v[30] * v[485] + v[209] * v[424] * -0.33 + v[475] * v[506] + v[499] * v[496] + v[40] * v[504] + v[250] * v[500] + v[260] * v[523] + v[328] * v[502] + v[478] * v[522] + v[505] * v[494] + v[392] * v[427] * 0.33 + (0 - v[365]) * 0.35 + v[371] * v[427] * 0.33) * v[430] + (v[229] * v[479] + v[39] * v[487] + (0 - v[209]) * 0.35 + v[261] * v[427] * 0.33 + v[510] * v[508] + v[518] * v[498] + v[431] * v[494] + v[450] * v[502] + v[218] * v[438] + v[93] * v[517] + v[412] * v[500] + v[540] * v[520] + v[246] * v[424] * 0.33 + v[365] * v[424] * 0.33) * v[165];
    v[328] = 0 - jac[575];
    jac[479] = v[328] * v[513] + jac[527] * v[484];
    v[328] = v[328] * x_in[19] + jac[551] * x_in[20];
    v[513] = jac[527] * x_in[35];
    v[484] = 0 - v[513];
    v[450] = jac[527] * x_in[34];
    v[412] = 0 - v[450];
    v[250] = 0 - v[328];
    jac[407] = 0 - (v[208] * v[483] + v[281] * v[481] + v[289] * v[489] + v[490] * v[485] + v[328] * v[424] * -0.33 + v[235] * v[506] + v[308] * v[496] + v[554] * v[504] + v[534] * v[500] + v[461] * v[523] + v[53] * v[502] + v[306] * v[522] + v[299] * v[494] + v[484] * v[427] * 0.33 + (0 - v[450]) * 0.35 + v[412] * v[427] * 0.33) * v[430] + (v[227] * v[479] + v[179] * v[487] + (0 - v[328]) * 0.35 + v[250] * v[427] * 0.33 + v[466] * v[508] + v[323] * v[498] + v[301] * v[494] + v[420] * v[502] + v[256] * v[438] + v[312] * v[517] + v[449] * v[500] + v[292] * v[520] + v[513] * v[424] * 0.33 + v[450] * v[424] * 0.33) * v[165];
    v[165] = sin(x_in[17]);
    v[430] = cos(x_in[17]);
    jac[426] = 0 - (v[167] * v[435] + v[222] * v[440] + v[190] * v[426]) * v[165] + (v[189] * v[433] + v[222] * v[442] + v[446] * v[423]) * v[430];
    jac[427] = 0 - (v[155] * v[435] + v[387] * v[440] + v[25] * v[426]) * v[165] + (v[158] * v[433] + v[387] * v[442] + v[28] * v[423]) * v[430];
    jac[428] = 0 - (v[378] * v[435] + v[178] * v[440] + v[296] * v[426]) * v[165] + (v[457] * v[433] + v[178] * v[442] + v[13] * v[423]) * v[430];
    jac[429] = 0 - (v[354] * v[482] + v[105] * v[486] + v[443] * v[512] + v[529] * v[509] + v[343] * v[495] + v[101] * v[501] + v[264] * v[525] + v[385] * v[516] + v[340] * v[519] + v[375] * v[474] + v[381] * v[477]) * v[165] + (v[363] * v[480] + v[105] * v[488] + v[373] * v[511] + v[529] * v[507] + v[343] * v[497] + v[101] * v[503] + v[174] * v[524] + v[69] * v[515] + v[340] * v[521] + v[193] * v[473] + v[377] * v[476]) * v[430];
    jac[430] = 0 - (v[239] * v[482] + v[493] * v[486] + v[261] * v[512] + v[526] * v[509] + v[518] * v[495] + v[40] * v[501] + v[220] * v[525] + v[225] * v[516] + v[478] * v[519] + v[392] * v[474] + v[371] * v[477]) * v[165] + (v[369] * v[480] + v[493] * v[488] + v[209] * v[511] + v[526] * v[507] + v[518] * v[497] + v[40] * v[503] + v[10] * v[524] + v[112] * v[515] + v[478] * v[521] + v[246] * v[473] + v[365] * v[476]) * v[430];
    jac[431] = 0 - (v[162] * v[482] + v[289] * v[486] + v[250] * v[512] + v[395] * v[509] + v[323] * v[495] + v[554] * v[501] + v[248] * v[525] + v[41] * v[516] + v[306] * v[519] + v[484] * v[474] + v[412] * v[477]) * v[165] + (v[205] * v[480] + v[289] * v[488] + v[328] * v[511] + v[395] * v[507] + v[323] * v[497] + v[554] * v[503] + v[244] * v[524] + v[23] * v[515] + v[306] * v[521] + v[513] * v[473] + v[450] * v[476]) * v[430];
    // dependent variables without operations
    jac[72] = 1;
    jac[78] = 1;
    jac[84] = 1;
    jac[90] = 1;
    jac[97] = 1;
    jac[103] = 1;
    jac[109] = 1;
    jac[115] = 1;
    jac[122] = 1;
    jac[128] = 1;
    jac[134] = 1;
    jac[140] = 1;


 	return jac_;

}


}
}
}



